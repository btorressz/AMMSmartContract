{
	"id": "4633e56d3eda9c8f62f86965a3a315ba",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/AMM.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.18;\n\n// Importing necessary interfaces and libraries from OpenZeppelin\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\";\nimport {ERC20} from \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport {ReentrancyGuard} from \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\n/**\n * @title AMM\n * @dev This contract implements a basic Automated Market Maker (AMM) using the constant product formula x * y = k.\n * It supports adding/removing liquidity and swapping between two ERC20 tokens.\n */\ncontract AMM is ERC20, ReentrancyGuard {\n    using SafeERC20 for IERC20;\n\n    // Tokens involved in the AMM\n    IERC20 public tokenX;\n    IERC20 public tokenY;\n\n    // Reserves of the tokens in the AMM pool\n    uint256 private reserveX;\n    uint256 private reserveY;\n\n    // Fee parameters\n    uint256 public feeBasisPoints = 30; // 0.3% fee\n    uint256 public constant BASIS_POINTS_DIVISOR = 10000;\n\n    // Governance parameters\n    mapping(address => bool) public governors;\n    address[] public governorList;\n\n    // Time-weighted average price (TWAP) protection\n    uint256 public twapInterval = 1 hours;\n    uint256 public lastTwapPriceX;\n    uint256 public lastTwapPriceY;\n    uint256 public lastTwapTimestamp;\n\n    event LiquidityAdded(address indexed provider, uint256 amountX, uint256 amountY, uint256 liquidity);\n    event LiquidityRemoved(address indexed provider, uint256 amountX, uint256 amountY, uint256 liquidity);\n    event Swap(address indexed swapper, uint256 amountIn, uint256 amountOut, address tokenIn, address tokenOut);\n    event GovernorAdded(address indexed governor);\n    event GovernorRemoved(address indexed governor);\n    event FeeUpdated(uint256 oldFee, uint256 newFee);\n    event TwapUpdated(uint256 newTwapPriceX, uint256 newTwapPriceY, uint256 timestamp);\n\n    modifier onlyGovernor() {\n        require(governors[msg.sender], \"AMM: caller is not a governor\");\n        _;\n    }\n\n    /**\n     * @dev Initializes the contract with two ERC20 tokens.\n     * @param _tokenX Address of the first token (Token X).\n     * @param _tokenY Address of the second token (Token Y).\n     */\n    constructor(address _tokenX, address _tokenY) ERC20(\"AMM Liquidity Token\", \"AMMLT\") {\n        tokenX = IERC20(_tokenX);\n        tokenY = IERC20(_tokenY);\n        governors[msg.sender] = true;\n        governorList.push(msg.sender);\n    }\n\n    /**\n     * @notice Adds liquidity to the pool.\n     * @dev The liquidity provider must approve the tokens to be transferred before calling this function.\n     * @param amountX The amount of Token X to add.\n     * @param amountY The amount of Token Y to add.\n     * @return liquidity The amount of liquidity tokens minted.\n     */\n    function addLiquidity(uint256 amountX, uint256 amountY) external nonReentrant returns (uint256 liquidity) {\n        tokenX.safeTransferFrom(msg.sender, address(this), amountX);\n        tokenY.safeTransferFrom(msg.sender, address(this), amountY);\n\n        if (reserveX > 0 || reserveY > 0) {\n            require(amountX * reserveY == amountY * reserveX, \"AMM: Unbalanced liquidity provided\");\n        }\n\n        if (totalSupply() == 0) {\n            liquidity = sqrt(amountX * amountY);\n        } else {\n            liquidity = min((amountX * totalSupply()) / reserveX, (amountY * totalSupply()) / reserveY);\n        }\n\n        require(liquidity > 0, \"AMM: Insufficient liquidity provided\");\n\n        _mint(msg.sender, liquidity);\n\n        reserveX += amountX;\n        reserveY += amountY;\n\n        emit LiquidityAdded(msg.sender, amountX, amountY, liquidity);\n    }\n\n    /**\n     * @notice Removes liquidity from the pool.\n     * @dev The liquidity provider receives the proportionate share of the reserves.\n     * @param liquidity The amount of liquidity tokens to remove.\n     * @return amountX The amount of Token X returned.\n     * @return amountY The amount of Token Y returned.\n     */\n    function removeLiquidity(uint256 liquidity) external nonReentrant returns (uint256 amountX, uint256 amountY) {\n        require(liquidity > 0, \"AMM: Invalid liquidity amount\");\n\n        uint256 totalSupply = totalSupply();\n\n        amountX = (liquidity * reserveX) / totalSupply;\n        amountY = (liquidity * reserveY) / totalSupply;\n\n        _burn(msg.sender, liquidity);\n\n        reserveX -= amountX;\n        reserveY -= amountY;\n\n        tokenX.safeTransfer(msg.sender, amountX);\n        tokenY.safeTransfer(msg.sender, amountY);\n\n        emit LiquidityRemoved(msg.sender, amountX, amountY, liquidity);\n    }\n\n    /**\n     * @notice Swaps Token X for Token Y.\n     * @param amountXIn The amount of Token X to swap.\n     * @param minAmountYOut The minimum amount of Token Y to receive.\n     * @return amountYOut The amount of Token Y received.\n     */\n    function swapXForY(uint256 amountXIn, uint256 minAmountYOut) external nonReentrant returns (uint256 amountYOut) {\n        require(amountXIn > 0, \"AMM: Invalid input amount\");\n        amountYOut = getAmountOut(amountXIn, reserveX, reserveY);\n        require(amountYOut >= minAmountYOut, \"AMM: Insufficient output amount\");\n\n        tokenX.safeTransferFrom(msg.sender, address(this), amountXIn);\n        tokenY.safeTransfer(msg.sender, amountYOut);\n\n        reserveX += amountXIn;\n        reserveY -= amountYOut;\n\n        updateTwap();\n\n        emit Swap(msg.sender, amountXIn, amountYOut, address(tokenX), address(tokenY));\n    }\n\n    /**\n     * @notice Swaps Token Y for Token X.\n     * @param amountYIn The amount of Token Y to swap.\n     * @param minAmountXOut The minimum amount of Token X to receive.\n     * @return amountXOut The amount of Token X received.\n     */\n    function swapYForX(uint256 amountYIn, uint256 minAmountXOut) external nonReentrant returns (uint256 amountXOut) {\n        require(amountYIn > 0, \"AMM: Invalid input amount\");\n        amountXOut = getAmountOut(amountYIn, reserveY, reserveX);\n        require(amountXOut >= minAmountXOut, \"AMM: Insufficient output amount\");\n\n        tokenY.safeTransferFrom(msg.sender, address(this), amountYIn);\n        tokenX.safeTransfer(msg.sender, amountXOut);\n\n        reserveY += amountYIn;\n        reserveX -= amountXOut;\n\n        updateTwap();\n\n        emit Swap(msg.sender, amountYIn, amountXOut, address(tokenY), address(tokenX));\n    }\n\n    /**\n     * @notice Calculates the output amount for a given input amount using the constant product formula.\n     * @param inputAmount The amount of input tokens.\n     * @param inputReserve The reserve of input tokens.\n     * @param outputReserve The reserve of output tokens.\n     * @return The amount of output tokens.\n     */\n    function getAmountOut(\n        uint256 inputAmount,\n        uint256 inputReserve,\n        uint256 outputReserve\n    ) public view returns (uint256) {\n        uint256 inputAmountWithFee = inputAmount * (BASIS_POINTS_DIVISOR - feeBasisPoints);\n        uint256 numerator = inputAmountWithFee * outputReserve;\n        uint256 denominator = (inputReserve * BASIS_POINTS_DIVISOR) + inputAmountWithFee;\n        return numerator / denominator;\n    }\n\n    /**\n     * @notice Returns the reserves of Token X and Token Y.\n     * @return reserveX The reserve of Token X.\n     * @return reserveY The reserve of Token Y.\n     */\n    function getReserves() external view returns (uint256, uint256) {\n        return (reserveX, reserveY);\n    }\n\n    /**\n     * @notice Updates the time-weighted average price (TWAP).\n     */\n    function updateTwap() internal {\n        if (block.timestamp >= lastTwapTimestamp + twapInterval) {\n            lastTwapPriceX = reserveX;\n            lastTwapPriceY = reserveY;\n            lastTwapTimestamp = block.timestamp;\n            emit TwapUpdated(lastTwapPriceX, lastTwapPriceY, lastTwapTimestamp);\n        }\n    }\n\n    /**\n     * @notice Sets the fee in basis points.\n     * @param _feeBasisPoints The new fee in basis points.\n     */\n    function setFee(uint256 _feeBasisPoints) external onlyGovernor {\n        require(_feeBasisPoints < BASIS_POINTS_DIVISOR, \"AMM: Invalid fee\");\n        emit FeeUpdated(feeBasisPoints, _feeBasisPoints);\n        feeBasisPoints = _feeBasisPoints;\n    }\n\n    /**\n     * @notice Adds a new governor.\n     * @param _governor The address of the new governor.\n     */\n    function addGovernor(address _governor) external onlyGovernor {\n        require(_governor != address(0), \"AMM: Invalid governor address\");\n        require(!governors[_governor], \"AMM: Already a governor\");\n        governors[_governor] = true;\n        governorList.push(_governor);\n        emit GovernorAdded(_governor);\n    }\n\n    /**\n     * @notice Removes an existing governor.\n     * @param _governor The address of the governor to remove.\n     */\n    function removeGovernor(address _governor) external onlyGovernor {\n        require(_governor != address(0), \"AMM: Invalid governor address\");\n        require(governors[_governor], \"AMM: Not a governor\");\n        governors[_governor] = false;\n        for (uint i = 0; i < governorList.length; i++) {\n            if (governorList[i] == _governor) {\n                governorList[i] = governorList[governorList.length - 1];\n                governorList.pop();\n                break;\n            }\n        }\n        emit GovernorRemoved(_governor);\n    }\n\n    /**\n     * @notice Calculates the square root of a given number.\n     * @param y The number to calculate the square root of.\n     * @return z The square root of the given number.\n     */\n    function sqrt(uint256 y) internal pure returns (uint256 z) {\n        if (y > 3) {\n            z = y;\n            uint256 x = y / 2 + 1;\n            while (x < z) {\n                z = x;\n                x = (y / x + x) / 2;\n            }\n        } else if (y != 0) {\n            z = 1;\n        }\n    }\n\n    /**\n     * @notice Returns the minimum of two numbers.\n     * @param x The first number.\n     * @param y The second number.\n     * @return The minimum of the two numbers.\n     */\n    function min(uint256 x, uint256 y) internal pure returns (uint256) {\n        return x < y ? x : y;\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 147,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 224,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 230,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 232,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 234,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 236,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212206db92e98da7e1a551218b89d8ce0cb6d40f6dff5bc03144b46ba82cfbe992d5664736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206db92e98da7e1a551218b89d8ce0cb6d40f6dff5bc03144b46ba82cfbe992d5664736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xB92E98DA7E1A551218B89D8CE0CB PUSH14 0x40F6DFF5BC03144B46BA82CFBE99 0x2D JUMP PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "751:5018:6:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea26469706673582212206db92e98da7e1a551218b89d8ce0cb6d40f6dff5bc03144b46ba82cfbe992d5664736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH14 0xB92E98DA7E1A551218B89D8CE0CB PUSH14 0x40F6DFF5BC03144B46BA82CFBE99 0x2D JUMP PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "751:5018:6:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 6,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 6
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206db92e98da7e1a551218b89d8ce0cb6d40f6dff5bc03144b46ba82cfbe992d5664736f6c63430008190033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/AMM.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220881eb351652b618c77e203da79e265347075bf9824e33e181896a06523d9b6b764736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220881eb351652b618c77e203da79e265347075bf9824e33e181896a06523d9b6b764736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0x1E 0xB3 MLOAD PUSH6 0x2B618C77E203 0xDA PUSH26 0xE265347075BF9824E33E181896A06523D9B6B764736F6C634300 ADDMOD NOT STOP CALLER ",
							"sourceMap": "195:6066:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220881eb351652b618c77e203da79e265347075bf9824e33e181896a06523d9b6b764736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0x1E 0xB3 MLOAD PUSH6 0x2B618C77E203 0xDA PUSH26 0xE265347075BF9824E33E181896A06523D9B6B764736F6C634300 ADDMOD NOT STOP CALLER ",
							"sourceMap": "195:6066:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220881eb351652b618c77e203da79e265347075bf9824e33e181896a06523d9b6b764736f6c63430008190033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/AMM.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/AMM.sol": {
				"AMM": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_tokenX",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenY",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "oldFee",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newFee",
									"type": "uint256"
								}
							],
							"name": "FeeUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "governor",
									"type": "address"
								}
							],
							"name": "GovernorAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "governor",
									"type": "address"
								}
							],
							"name": "GovernorRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountX",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountY",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "LiquidityAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountX",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountY",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "LiquidityRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "swapper",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountIn",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "tokenIn",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "tokenOut",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newTwapPriceX",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newTwapPriceY",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "timestamp",
									"type": "uint256"
								}
							],
							"name": "TwapUpdated",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "BASIS_POINTS_DIVISOR",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_governor",
									"type": "address"
								}
							],
							"name": "addGovernor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountX",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountY",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeBasisPoints",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "inputAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "inputReserve",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "outputReserve",
									"type": "uint256"
								}
							],
							"name": "getAmountOut",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "governorList",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "governors",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTwapPriceX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTwapPriceY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "lastTwapTimestamp",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_governor",
									"type": "address"
								}
							],
							"name": "removeGovernor",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountX",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amountY",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_feeBasisPoints",
									"type": "uint256"
								}
							],
							"name": "setFee",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountXIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minAmountYOut",
									"type": "uint256"
								}
							],
							"name": "swapXForY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountYOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amountYIn",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minAmountXOut",
									"type": "uint256"
								}
							],
							"name": "swapYForX",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountXOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenX",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tokenY",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "twapInterval",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This contract implements a basic Automated Market Maker (AMM) using the constant product formula x * y = k. It supports adding/removing liquidity and swapping between two ERC20 tokens.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"addGovernor(address)": {
								"params": {
									"_governor": "The address of the new governor."
								}
							},
							"addLiquidity(uint256,uint256)": {
								"details": "The liquidity provider must approve the tokens to be transferred before calling this function.",
								"params": {
									"amountX": "The amount of Token X to add.",
									"amountY": "The amount of Token Y to add."
								},
								"returns": {
									"liquidity": "The amount of liquidity tokens minted."
								}
							},
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Initializes the contract with two ERC20 tokens.",
								"params": {
									"_tokenX": "Address of the first token (Token X).",
									"_tokenY": "Address of the second token (Token Y)."
								}
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"getAmountOut(uint256,uint256,uint256)": {
								"params": {
									"inputAmount": "The amount of input tokens.",
									"inputReserve": "The reserve of input tokens.",
									"outputReserve": "The reserve of output tokens."
								},
								"returns": {
									"_0": "The amount of output tokens."
								}
							},
							"getReserves()": {
								"returns": {
									"_0": "reserveX The reserve of Token X.",
									"_1": "reserveY The reserve of Token Y."
								}
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"removeGovernor(address)": {
								"params": {
									"_governor": "The address of the governor to remove."
								}
							},
							"removeLiquidity(uint256)": {
								"details": "The liquidity provider receives the proportionate share of the reserves.",
								"params": {
									"liquidity": "The amount of liquidity tokens to remove."
								},
								"returns": {
									"amountX": "The amount of Token X returned.",
									"amountY": "The amount of Token Y returned."
								}
							},
							"setFee(uint256)": {
								"params": {
									"_feeBasisPoints": "The new fee in basis points."
								}
							},
							"swapXForY(uint256,uint256)": {
								"params": {
									"amountXIn": "The amount of Token X to swap.",
									"minAmountYOut": "The minimum amount of Token Y to receive."
								},
								"returns": {
									"amountYOut": "The amount of Token Y received."
								}
							},
							"swapYForX(uint256,uint256)": {
								"params": {
									"amountYIn": "The amount of Token Y to swap.",
									"minAmountXOut": "The minimum amount of Token X to receive."
								},
								"returns": {
									"amountXOut": "The amount of Token X received."
								}
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"title": "AMM",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/AMM.sol\":635:10140  contract AMM is ERC20, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/AMM.sol\":961:963  30 */\n  0x1e\n    /* \"contracts/AMM.sol\":929:963  uint256 public feeBasisPoints = 30 */\n  0x0a\n  sstore\n    /* \"contracts/AMM.sol\":1235:1242  1 hours */\n  0x0e10\n    /* \"contracts/AMM.sol\":1205:1242  uint256 public twapInterval = 1 hours */\n  0x0d\n  sstore\n    /* \"contracts/AMM.sol\":2247:2483  constructor(address _tokenX, address _tokenY) ERC20(\"AMM Liquidity Token\", \"AMMLT\") {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x13\n  dup2\n  mstore\n  0x20\n  add\n  0x414d4d204c697175696469747920546f6b656e00000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x414d4d4c54000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1970:1975  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1967  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1962:1975  _name = name_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_8:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1995:2002  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:1992  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1985:2002  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_10\n  swap2\n  swap1\n  tag_9\n  jump\t// in\ntag_10:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1896:2009  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x05\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/AMM.sol\":2357:2364  _tokenX */\n  dup2\n    /* \"contracts/AMM.sol\":2341:2347  tokenX */\n  0x06\n  0x00\n    /* \"contracts/AMM.sol\":2341:2365  tokenX = IERC20(_tokenX) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/AMM.sol\":2391:2398  _tokenY */\n  dup1\n    /* \"contracts/AMM.sol\":2375:2381  tokenY */\n  0x07\n  0x00\n    /* \"contracts/AMM.sol\":2375:2399  tokenY = IERC20(_tokenY) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/AMM.sol\":2433:2437  true */\n  0x01\n    /* \"contracts/AMM.sol\":2409:2418  governors */\n  0x0b\n    /* \"contracts/AMM.sol\":2409:2430  governors[msg.sender] */\n  0x00\n    /* \"contracts/AMM.sol\":2419:2429  msg.sender */\n  caller\n    /* \"contracts/AMM.sol\":2409:2430  governors[msg.sender] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"contracts/AMM.sol\":2409:2437  governors[msg.sender] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/AMM.sol\":2447:2459  governorList */\n  0x0c\n    /* \"contracts/AMM.sol\":2465:2475  msg.sender */\n  caller\n    /* \"contracts/AMM.sol\":2447:2476  governorList.push(msg.sender) */\n  swap1\n  dup1\n  0x01\n  dup2\n  sload\n  add\n  dup1\n  dup3\n  sstore\n  dup1\n  swap2\n  pop\n  pop\n  0x01\n  swap1\n  sub\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  add\n  0x00\n  swap1\n  swap2\n  swap1\n  swap2\n  swap1\n  swap2\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/AMM.sol\":2247:2483  constructor(address _tokenX, address _tokenY) ERC20(\"AMM Liquidity Token\", \"AMMLT\") {... */\n  pop\n  pop\n    /* \"contracts/AMM.sol\":635:10140  contract AMM is ERC20, ReentrancyGuard {... */\n  jump(tag_14)\n    /* \"#utility.yul\":88:205   */\ntag_16:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_18:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_19:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_48\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_18\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_20:\n    /* \"#utility.yul\":641:665   */\n  tag_50\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_19\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_51\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  dup1\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_51:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_21:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_53\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_20\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1352   */\ntag_3:\n    /* \"#utility.yul\":924:930   */\n  0x00\n    /* \"#utility.yul\":932:938   */\n  dup1\n    /* \"#utility.yul\":981:983   */\n  0x40\n    /* \"#utility.yul\":969:978   */\n  dup4\n    /* \"#utility.yul\":960:967   */\n  dup6\n    /* \"#utility.yul\":956:979   */\n  sub\n    /* \"#utility.yul\":952:984   */\n  slt\n    /* \"#utility.yul\":949:1068   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":987:1066   */\n  tag_56\n  tag_16\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":949:1068   */\ntag_55:\n    /* \"#utility.yul\":1107:1108   */\n  0x00\n    /* \"#utility.yul\":1132:1196   */\n  tag_57\n    /* \"#utility.yul\":1188:1195   */\n  dup6\n    /* \"#utility.yul\":1179:1185   */\n  dup3\n    /* \"#utility.yul\":1168:1177   */\n  dup7\n    /* \"#utility.yul\":1164:1186   */\n  add\n    /* \"#utility.yul\":1132:1196   */\n  tag_21\n  jump\t// in\ntag_57:\n    /* \"#utility.yul\":1122:1196   */\n  swap3\n  pop\n    /* \"#utility.yul\":1078:1206   */\n  pop\n    /* \"#utility.yul\":1245:1247   */\n  0x20\n    /* \"#utility.yul\":1271:1335   */\n  tag_58\n    /* \"#utility.yul\":1327:1334   */\n  dup6\n    /* \"#utility.yul\":1318:1324   */\n  dup3\n    /* \"#utility.yul\":1307:1316   */\n  dup7\n    /* \"#utility.yul\":1303:1325   */\n  add\n    /* \"#utility.yul\":1271:1335   */\n  tag_21\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1261:1335   */\n  swap2\n  pop\n    /* \"#utility.yul\":1216:1345   */\n  pop\n    /* \"#utility.yul\":845:1352   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1358:1457   */\ntag_22:\n    /* \"#utility.yul\":1410:1416   */\n  0x00\n    /* \"#utility.yul\":1444:1449   */\n  dup2\n    /* \"#utility.yul\":1438:1450   */\n  mload\n    /* \"#utility.yul\":1428:1450   */\n  swap1\n  pop\n    /* \"#utility.yul\":1358:1457   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1463:1643   */\ntag_23:\n    /* \"#utility.yul\":1511:1588   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1508:1509   */\n  0x00\n    /* \"#utility.yul\":1501:1589   */\n  mstore\n    /* \"#utility.yul\":1608:1612   */\n  0x41\n    /* \"#utility.yul\":1605:1606   */\n  0x04\n    /* \"#utility.yul\":1598:1613   */\n  mstore\n    /* \"#utility.yul\":1632:1636   */\n  0x24\n    /* \"#utility.yul\":1629:1630   */\n  0x00\n    /* \"#utility.yul\":1622:1637   */\n  revert\n    /* \"#utility.yul\":1649:1829   */\ntag_24:\n    /* \"#utility.yul\":1697:1774   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1694:1695   */\n  0x00\n    /* \"#utility.yul\":1687:1775   */\n  mstore\n    /* \"#utility.yul\":1794:1798   */\n  0x22\n    /* \"#utility.yul\":1791:1792   */\n  0x04\n    /* \"#utility.yul\":1784:1799   */\n  mstore\n    /* \"#utility.yul\":1818:1822   */\n  0x24\n    /* \"#utility.yul\":1815:1816   */\n  0x00\n    /* \"#utility.yul\":1808:1823   */\n  revert\n    /* \"#utility.yul\":1835:2155   */\ntag_25:\n    /* \"#utility.yul\":1879:1885   */\n  0x00\n    /* \"#utility.yul\":1916:1917   */\n  0x02\n    /* \"#utility.yul\":1910:1914   */\n  dup3\n    /* \"#utility.yul\":1906:1918   */\n  div\n    /* \"#utility.yul\":1896:1918   */\n  swap1\n  pop\n    /* \"#utility.yul\":1963:1964   */\n  0x01\n    /* \"#utility.yul\":1957:1961   */\n  dup3\n    /* \"#utility.yul\":1953:1965   */\n  and\n    /* \"#utility.yul\":1984:2002   */\n  dup1\n    /* \"#utility.yul\":1974:2055   */\n  tag_63\n  jumpi\n    /* \"#utility.yul\":2040:2044   */\n  0x7f\n    /* \"#utility.yul\":2032:2038   */\n  dup3\n    /* \"#utility.yul\":2028:2045   */\n  and\n    /* \"#utility.yul\":2018:2045   */\n  swap2\n  pop\n    /* \"#utility.yul\":1974:2055   */\ntag_63:\n    /* \"#utility.yul\":2102:2104   */\n  0x20\n    /* \"#utility.yul\":2094:2100   */\n  dup3\n    /* \"#utility.yul\":2091:2105   */\n  lt\n    /* \"#utility.yul\":2071:2089   */\n  dup2\n    /* \"#utility.yul\":2068:2106   */\n  sub\n    /* \"#utility.yul\":2065:2149   */\n  tag_64\n  jumpi\n    /* \"#utility.yul\":2121:2139   */\n  tag_65\n  tag_24\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":2065:2149   */\ntag_64:\n    /* \"#utility.yul\":1886:2155   */\n  pop\n    /* \"#utility.yul\":1835:2155   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2161:2302   */\ntag_26:\n    /* \"#utility.yul\":2210:2214   */\n  0x00\n    /* \"#utility.yul\":2233:2236   */\n  dup2\n    /* \"#utility.yul\":2225:2236   */\n  swap1\n  pop\n    /* \"#utility.yul\":2256:2259   */\n  dup2\n    /* \"#utility.yul\":2253:2254   */\n  0x00\n    /* \"#utility.yul\":2246:2260   */\n  mstore\n    /* \"#utility.yul\":2290:2294   */\n  0x20\n    /* \"#utility.yul\":2287:2288   */\n  0x00\n    /* \"#utility.yul\":2277:2295   */\n  keccak256\n    /* \"#utility.yul\":2269:2295   */\n  swap1\n  pop\n    /* \"#utility.yul\":2161:2302   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2308:2401   */\ntag_27:\n    /* \"#utility.yul\":2345:2351   */\n  0x00\n    /* \"#utility.yul\":2392:2394   */\n  0x20\n    /* \"#utility.yul\":2387:2389   */\n  0x1f\n    /* \"#utility.yul\":2380:2385   */\n  dup4\n    /* \"#utility.yul\":2376:2390   */\n  add\n    /* \"#utility.yul\":2372:2395   */\n  div\n    /* \"#utility.yul\":2362:2395   */\n  swap1\n  pop\n    /* \"#utility.yul\":2308:2401   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2407:2514   */\ntag_28:\n    /* \"#utility.yul\":2451:2459   */\n  0x00\n    /* \"#utility.yul\":2501:2506   */\n  dup3\n    /* \"#utility.yul\":2495:2499   */\n  dup3\n    /* \"#utility.yul\":2491:2507   */\n  shl\n    /* \"#utility.yul\":2470:2507   */\n  swap1\n  pop\n    /* \"#utility.yul\":2407:2514   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2520:2913   */\ntag_29:\n    /* \"#utility.yul\":2589:2595   */\n  0x00\n    /* \"#utility.yul\":2639:2640   */\n  0x08\n    /* \"#utility.yul\":2627:2637   */\n  dup4\n    /* \"#utility.yul\":2623:2641   */\n  mul\n    /* \"#utility.yul\":2662:2759   */\n  tag_70\n    /* \"#utility.yul\":2692:2758   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2681:2690   */\n  dup3\n    /* \"#utility.yul\":2662:2759   */\n  tag_28\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":2780:2819   */\n  tag_71\n    /* \"#utility.yul\":2810:2818   */\n  dup7\n    /* \"#utility.yul\":2799:2808   */\n  dup4\n    /* \"#utility.yul\":2780:2819   */\n  tag_28\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2768:2819   */\n  swap6\n  pop\n    /* \"#utility.yul\":2852:2856   */\n  dup1\n    /* \"#utility.yul\":2848:2857   */\n  not\n    /* \"#utility.yul\":2841:2846   */\n  dup5\n    /* \"#utility.yul\":2837:2858   */\n  and\n    /* \"#utility.yul\":2828:2858   */\n  swap4\n  pop\n    /* \"#utility.yul\":2901:2905   */\n  dup1\n    /* \"#utility.yul\":2891:2899   */\n  dup7\n    /* \"#utility.yul\":2887:2906   */\n  and\n    /* \"#utility.yul\":2880:2885   */\n  dup5\n    /* \"#utility.yul\":2877:2907   */\n  or\n    /* \"#utility.yul\":2867:2907   */\n  swap3\n  pop\n    /* \"#utility.yul\":2596:2913   */\n  pop\n  pop\n    /* \"#utility.yul\":2520:2913   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2919:2996   */\ntag_30:\n    /* \"#utility.yul\":2956:2963   */\n  0x00\n    /* \"#utility.yul\":2985:2990   */\n  dup2\n    /* \"#utility.yul\":2974:2990   */\n  swap1\n  pop\n    /* \"#utility.yul\":2919:2996   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3002:3062   */\ntag_31:\n    /* \"#utility.yul\":3030:3033   */\n  0x00\n    /* \"#utility.yul\":3051:3056   */\n  dup2\n    /* \"#utility.yul\":3044:3056   */\n  swap1\n  pop\n    /* \"#utility.yul\":3002:3062   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3068:3210   */\ntag_32:\n    /* \"#utility.yul\":3118:3127   */\n  0x00\n    /* \"#utility.yul\":3151:3204   */\n  tag_75\n    /* \"#utility.yul\":3169:3203   */\n  tag_76\n    /* \"#utility.yul\":3178:3202   */\n  tag_77\n    /* \"#utility.yul\":3196:3201   */\n  dup5\n    /* \"#utility.yul\":3178:3202   */\n  tag_30\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":3169:3203   */\n  tag_31\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":3151:3204   */\n  tag_30\n  jump\t// in\ntag_75:\n    /* \"#utility.yul\":3138:3204   */\n  swap1\n  pop\n    /* \"#utility.yul\":3068:3210   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3216:3291   */\ntag_33:\n    /* \"#utility.yul\":3259:3262   */\n  0x00\n    /* \"#utility.yul\":3280:3285   */\n  dup2\n    /* \"#utility.yul\":3273:3285   */\n  swap1\n  pop\n    /* \"#utility.yul\":3216:3291   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3297:3566   */\ntag_34:\n    /* \"#utility.yul\":3407:3446   */\n  tag_80\n    /* \"#utility.yul\":3438:3445   */\n  dup4\n    /* \"#utility.yul\":3407:3446   */\n  tag_32\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3468:3559   */\n  tag_81\n    /* \"#utility.yul\":3517:3558   */\n  tag_82\n    /* \"#utility.yul\":3541:3557   */\n  dup3\n    /* \"#utility.yul\":3517:3558   */\n  tag_33\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3509:3515   */\n  dup5\n    /* \"#utility.yul\":3502:3506   */\n  dup5\n    /* \"#utility.yul\":3496:3507   */\n  sload\n    /* \"#utility.yul\":3468:3559   */\n  tag_29\n  jump\t// in\ntag_81:\n    /* \"#utility.yul\":3462:3466   */\n  dup3\n    /* \"#utility.yul\":3455:3560   */\n  sstore\n    /* \"#utility.yul\":3373:3566   */\n  pop\n    /* \"#utility.yul\":3297:3566   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3572:3645   */\ntag_35:\n    /* \"#utility.yul\":3617:3620   */\n  0x00\n    /* \"#utility.yul\":3572:3645   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3651:3840   */\ntag_36:\n    /* \"#utility.yul\":3728:3760   */\n  tag_85\n  tag_35\n  jump\t// in\ntag_85:\n    /* \"#utility.yul\":3769:3834   */\n  tag_86\n    /* \"#utility.yul\":3827:3833   */\n  dup2\n    /* \"#utility.yul\":3819:3825   */\n  dup5\n    /* \"#utility.yul\":3813:3817   */\n  dup5\n    /* \"#utility.yul\":3769:3834   */\n  tag_34\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":3704:3840   */\n  pop\n    /* \"#utility.yul\":3651:3840   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3846:4032   */\ntag_37:\n    /* \"#utility.yul\":3906:4026   */\ntag_88:\n    /* \"#utility.yul\":3923:3926   */\n  dup2\n    /* \"#utility.yul\":3916:3921   */\n  dup2\n    /* \"#utility.yul\":3913:3927   */\n  lt\n    /* \"#utility.yul\":3906:4026   */\n  iszero\n  tag_90\n  jumpi\n    /* \"#utility.yul\":3977:4016   */\n  tag_91\n    /* \"#utility.yul\":4014:4015   */\n  0x00\n    /* \"#utility.yul\":4007:4012   */\n  dup3\n    /* \"#utility.yul\":3977:4016   */\n  tag_36\n  jump\t// in\ntag_91:\n    /* \"#utility.yul\":3950:3951   */\n  0x01\n    /* \"#utility.yul\":3943:3948   */\n  dup2\n    /* \"#utility.yul\":3939:3952   */\n  add\n    /* \"#utility.yul\":3930:3952   */\n  swap1\n  pop\n    /* \"#utility.yul\":3906:4026   */\n  jump(tag_88)\ntag_90:\n    /* \"#utility.yul\":3846:4032   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4038:4581   */\ntag_38:\n    /* \"#utility.yul\":4139:4141   */\n  0x1f\n    /* \"#utility.yul\":4134:4137   */\n  dup3\n    /* \"#utility.yul\":4131:4142   */\n  gt\n    /* \"#utility.yul\":4128:4574   */\n  iszero\n  tag_93\n  jumpi\n    /* \"#utility.yul\":4173:4211   */\n  tag_94\n    /* \"#utility.yul\":4205:4210   */\n  dup2\n    /* \"#utility.yul\":4173:4211   */\n  tag_26\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4257:4286   */\n  tag_95\n    /* \"#utility.yul\":4275:4285   */\n  dup5\n    /* \"#utility.yul\":4257:4286   */\n  tag_27\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4247:4255   */\n  dup2\n    /* \"#utility.yul\":4243:4287   */\n  add\n    /* \"#utility.yul\":4440:4442   */\n  0x20\n    /* \"#utility.yul\":4428:4438   */\n  dup6\n    /* \"#utility.yul\":4425:4443   */\n  lt\n    /* \"#utility.yul\":4422:4471   */\n  iszero\n  tag_96\n  jumpi\n    /* \"#utility.yul\":4461:4469   */\n  dup2\n    /* \"#utility.yul\":4446:4469   */\n  swap1\n  pop\n    /* \"#utility.yul\":4422:4471   */\ntag_96:\n    /* \"#utility.yul\":4484:4564   */\n  tag_97\n    /* \"#utility.yul\":4540:4562   */\n  tag_98\n    /* \"#utility.yul\":4558:4561   */\n  dup6\n    /* \"#utility.yul\":4540:4562   */\n  tag_27\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":4530:4538   */\n  dup4\n    /* \"#utility.yul\":4526:4563   */\n  add\n    /* \"#utility.yul\":4513:4524   */\n  dup3\n    /* \"#utility.yul\":4484:4564   */\n  tag_37\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":4143:4574   */\n  pop\n  pop\n    /* \"#utility.yul\":4128:4574   */\ntag_93:\n    /* \"#utility.yul\":4038:4581   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4587:4704   */\ntag_39:\n    /* \"#utility.yul\":4641:4649   */\n  0x00\n    /* \"#utility.yul\":4691:4696   */\n  dup3\n    /* \"#utility.yul\":4685:4689   */\n  dup3\n    /* \"#utility.yul\":4681:4697   */\n  shr\n    /* \"#utility.yul\":4660:4697   */\n  swap1\n  pop\n    /* \"#utility.yul\":4587:4704   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4710:4879   */\ntag_40:\n    /* \"#utility.yul\":4754:4760   */\n  0x00\n    /* \"#utility.yul\":4787:4838   */\n  tag_101\n    /* \"#utility.yul\":4835:4836   */\n  0x00\n    /* \"#utility.yul\":4831:4837   */\n  not\n    /* \"#utility.yul\":4823:4828   */\n  dup5\n    /* \"#utility.yul\":4820:4821   */\n  0x08\n    /* \"#utility.yul\":4816:4829   */\n  mul\n    /* \"#utility.yul\":4787:4838   */\n  tag_39\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":4783:4839   */\n  not\n    /* \"#utility.yul\":4868:4872   */\n  dup1\n    /* \"#utility.yul\":4862:4866   */\n  dup4\n    /* \"#utility.yul\":4858:4873   */\n  and\n    /* \"#utility.yul\":4848:4873   */\n  swap2\n  pop\n    /* \"#utility.yul\":4761:4879   */\n  pop\n    /* \"#utility.yul\":4710:4879   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4884:5179   */\ntag_41:\n    /* \"#utility.yul\":4960:4964   */\n  0x00\n    /* \"#utility.yul\":5106:5135   */\n  tag_103\n    /* \"#utility.yul\":5131:5134   */\n  dup4\n    /* \"#utility.yul\":5125:5129   */\n  dup4\n    /* \"#utility.yul\":5106:5135   */\n  tag_40\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":5098:5135   */\n  swap2\n  pop\n    /* \"#utility.yul\":5168:5171   */\n  dup3\n    /* \"#utility.yul\":5165:5166   */\n  0x02\n    /* \"#utility.yul\":5161:5172   */\n  mul\n    /* \"#utility.yul\":5155:5159   */\n  dup3\n    /* \"#utility.yul\":5152:5173   */\n  or\n    /* \"#utility.yul\":5144:5173   */\n  swap1\n  pop\n    /* \"#utility.yul\":4884:5179   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5184:6579   */\ntag_9:\n    /* \"#utility.yul\":5301:5338   */\n  tag_105\n    /* \"#utility.yul\":5334:5337   */\n  dup3\n    /* \"#utility.yul\":5301:5338   */\n  tag_22\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5403:5421   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5395:5401   */\n  dup2\n    /* \"#utility.yul\":5392:5422   */\n  gt\n    /* \"#utility.yul\":5389:5445   */\n  iszero\n  tag_106\n  jumpi\n    /* \"#utility.yul\":5425:5443   */\n  tag_107\n  tag_23\n  jump\t// in\ntag_107:\n    /* \"#utility.yul\":5389:5445   */\ntag_106:\n    /* \"#utility.yul\":5469:5507   */\n  tag_108\n    /* \"#utility.yul\":5501:5505   */\n  dup3\n    /* \"#utility.yul\":5495:5506   */\n  sload\n    /* \"#utility.yul\":5469:5507   */\n  tag_25\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":5554:5621   */\n  tag_109\n    /* \"#utility.yul\":5614:5620   */\n  dup3\n    /* \"#utility.yul\":5606:5612   */\n  dup3\n    /* \"#utility.yul\":5600:5604   */\n  dup6\n    /* \"#utility.yul\":5554:5621   */\n  tag_38\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5648:5649   */\n  0x00\n    /* \"#utility.yul\":5672:5676   */\n  0x20\n    /* \"#utility.yul\":5659:5676   */\n  swap1\n  pop\n    /* \"#utility.yul\":5704:5706   */\n  0x1f\n    /* \"#utility.yul\":5696:5702   */\n  dup4\n    /* \"#utility.yul\":5693:5707   */\n  gt\n    /* \"#utility.yul\":5721:5722   */\n  0x01\n    /* \"#utility.yul\":5716:6334   */\n  dup2\n  eq\n  tag_111\n  jumpi\n    /* \"#utility.yul\":6378:6379   */\n  0x00\n    /* \"#utility.yul\":6395:6401   */\n  dup5\n    /* \"#utility.yul\":6392:6469   */\n  iszero\n  tag_112\n  jumpi\n    /* \"#utility.yul\":6444:6453   */\n  dup3\n    /* \"#utility.yul\":6439:6442   */\n  dup8\n    /* \"#utility.yul\":6435:6454   */\n  add\n    /* \"#utility.yul\":6429:6455   */\n  mload\n    /* \"#utility.yul\":6420:6455   */\n  swap1\n  pop\n    /* \"#utility.yul\":6392:6469   */\ntag_112:\n    /* \"#utility.yul\":6495:6562   */\n  tag_113\n    /* \"#utility.yul\":6555:6561   */\n  dup6\n    /* \"#utility.yul\":6548:6553   */\n  dup3\n    /* \"#utility.yul\":6495:6562   */\n  tag_41\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":6489:6493   */\n  dup7\n    /* \"#utility.yul\":6482:6563   */\n  sstore\n    /* \"#utility.yul\":6351:6573   */\n  pop\n    /* \"#utility.yul\":5686:6573   */\n  jump(tag_110)\n    /* \"#utility.yul\":5716:6334   */\ntag_111:\n    /* \"#utility.yul\":5768:5772   */\n  0x1f\n    /* \"#utility.yul\":5764:5773   */\n  not\n    /* \"#utility.yul\":5756:5762   */\n  dup5\n    /* \"#utility.yul\":5752:5774   */\n  and\n    /* \"#utility.yul\":5802:5839   */\n  tag_114\n    /* \"#utility.yul\":5834:5838   */\n  dup7\n    /* \"#utility.yul\":5802:5839   */\n  tag_26\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":5861:5862   */\n  0x00\n    /* \"#utility.yul\":5875:6083   */\ntag_115:\n    /* \"#utility.yul\":5889:5896   */\n  dup3\n    /* \"#utility.yul\":5886:5887   */\n  dup2\n    /* \"#utility.yul\":5883:5897   */\n  lt\n    /* \"#utility.yul\":5875:6083   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":5968:5977   */\n  dup5\n    /* \"#utility.yul\":5963:5966   */\n  dup10\n    /* \"#utility.yul\":5959:5978   */\n  add\n    /* \"#utility.yul\":5953:5979   */\n  mload\n    /* \"#utility.yul\":5945:5951   */\n  dup3\n    /* \"#utility.yul\":5938:5980   */\n  sstore\n    /* \"#utility.yul\":6019:6020   */\n  0x01\n    /* \"#utility.yul\":6011:6017   */\n  dup3\n    /* \"#utility.yul\":6007:6021   */\n  add\n    /* \"#utility.yul\":5997:6021   */\n  swap2\n  pop\n    /* \"#utility.yul\":6066:6068   */\n  0x20\n    /* \"#utility.yul\":6055:6064   */\n  dup6\n    /* \"#utility.yul\":6051:6069   */\n  add\n    /* \"#utility.yul\":6038:6069   */\n  swap5\n  pop\n    /* \"#utility.yul\":5912:5916   */\n  0x20\n    /* \"#utility.yul\":5909:5910   */\n  dup2\n    /* \"#utility.yul\":5905:5917   */\n  add\n    /* \"#utility.yul\":5900:5917   */\n  swap1\n  pop\n    /* \"#utility.yul\":5875:6083   */\n  jump(tag_115)\ntag_117:\n    /* \"#utility.yul\":6111:6117   */\n  dup7\n    /* \"#utility.yul\":6102:6109   */\n  dup4\n    /* \"#utility.yul\":6099:6118   */\n  lt\n    /* \"#utility.yul\":6096:6275   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":6169:6178   */\n  dup5\n    /* \"#utility.yul\":6164:6167   */\n  dup10\n    /* \"#utility.yul\":6160:6179   */\n  add\n    /* \"#utility.yul\":6154:6180   */\n  mload\n    /* \"#utility.yul\":6212:6260   */\n  tag_119\n    /* \"#utility.yul\":6254:6258   */\n  0x1f\n    /* \"#utility.yul\":6246:6252   */\n  dup10\n    /* \"#utility.yul\":6242:6259   */\n  and\n    /* \"#utility.yul\":6231:6240   */\n  dup3\n    /* \"#utility.yul\":6212:6260   */\n  tag_40\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6204:6210   */\n  dup4\n    /* \"#utility.yul\":6197:6261   */\n  sstore\n    /* \"#utility.yul\":6119:6275   */\n  pop\n    /* \"#utility.yul\":6096:6275   */\ntag_118:\n    /* \"#utility.yul\":6321:6322   */\n  0x01\n    /* \"#utility.yul\":6317:6318   */\n  0x02\n    /* \"#utility.yul\":6309:6315   */\n  dup9\n    /* \"#utility.yul\":6305:6319   */\n  mul\n    /* \"#utility.yul\":6301:6323   */\n  add\n    /* \"#utility.yul\":6295:6299   */\n  dup9\n    /* \"#utility.yul\":6288:6324   */\n  sstore\n    /* \"#utility.yul\":5723:6334   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5686:6573   */\ntag_110:\n  pop\n    /* \"#utility.yul\":5276:6579   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5184:6579   */\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/AMM.sol\":635:10140  contract AMM is ERC20, ReentrancyGuard {... */\ntag_14:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/AMM.sol\":635:10140  contract AMM is ERC20, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x58d50f0a\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xc7f8a78d\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xc7f8a78d\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xe3eece26\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xeecdac88\n      eq\n      tag_30\n      jumpi\n      jump(tag_2)\n    tag_33:\n      dup1\n      0xa9059cbb\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xb7d19fc4\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xb8606eef\n      eq\n      tag_26\n      jumpi\n      jump(tag_2)\n    tag_32:\n      dup1\n      0x95d89b41\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_20\n      jumpi\n      dup1\n      0x9c8f9f23\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x9cd441da\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x9d6f09c1\n      eq\n      tag_23\n      jumpi\n      jump(tag_2)\n    tag_34:\n      dup1\n      0x58d50f0a\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x69fe0e2d\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_31:\n      dup1\n      0x16dc165b\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x31018339\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x31018339\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x3c1d5df0\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x3c4a25d0\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_36:\n      dup1\n      0x16dc165b\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_35:\n      dup1\n      0x0902f1ac\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x0902f1ac\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x10f669b3\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x126082cf\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_37:\n      dup1\n      0x02aac7b2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x054d50d4\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/AMM.sol\":1116:1145  address[] public governorList */\n    tag_3:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AMM.sol\":6720:7161  function getAmountOut(... */\n    tag_4:\n      tag_44\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      tag_47\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_5:\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AMM.sol\":7339:7447  function getReserves() external view returns (uint256, uint256) {... */\n    tag_6:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_7:\n      tag_58\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      tag_61\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AMM.sol\":1283:1312  uint256 public lastTwapPriceY */\n    tag_8:\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_66\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AMM.sol\":981:1033  uint256 public constant BASIS_POINTS_DIVISOR = 10000 */\n    tag_9:\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_69\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_69:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AMM.sol\":747:767  IERC20 public tokenX */\n    tag_10:\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n      mload(0x40)\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_11:\n      tag_74\n      tag_75\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_12:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AMM.sol\":5753:6381  function swapYForX(uint256 amountYIn, uint256 minAmountXOut) external nonReentrant returns (uint256 amountXOut) {... */\n    tag_13:\n      tag_82\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_83\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_83:\n      tag_85\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      tag_86\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_14:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AMM.sol\":1205:1242  uint256 public twapInterval = 1 hours */\n    tag_15:\n      tag_91\n      tag_92\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      tag_93\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AMM.sol\":8343:8668  function addGovernor(address _governor) external onlyGovernor {... */\n    tag_16:\n      tag_94\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_95\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_95:\n      tag_97\n      jump\t// in\n    tag_94:\n      stop\n        /* \"contracts/AMM.sol\":1248:1277  uint256 public lastTwapPriceX */\n    tag_17:\n      tag_98\n      tag_99\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_100\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AMM.sol\":7981:8228  function setFee(uint256 _feeBasisPoints) external onlyGovernor {... */\n    tag_18:\n      tag_101\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_102\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_102:\n      tag_103\n      jump\t// in\n    tag_101:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_19:\n      tag_104\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_105\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_105:\n      tag_106\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_107\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_20:\n      tag_108\n      tag_109\n      jump\t// in\n    tag_108:\n      mload(0x40)\n      tag_110\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_110:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AMM.sol\":4019:4631  function removeLiquidity(uint256 liquidity) external nonReentrant returns (uint256 amountX, uint256 amountY) {... */\n    tag_21:\n      tag_111\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_112\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_112:\n      tag_113\n      jump\t// in\n    tag_111:\n      mload(0x40)\n      tag_114\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_114:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AMM.sol\":2823:3688  function addLiquidity(uint256 amountX, uint256 amountY) external nonReentrant returns (uint256 liquidity) {... */\n    tag_22:\n      tag_115\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_116\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n    tag_115:\n      mload(0x40)\n      tag_118\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_118:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AMM.sol\":1318:1350  uint256 public lastTwapTimestamp */\n    tag_23:\n      tag_119\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_24:\n      tag_122\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_123:\n      tag_124\n      jump\t// in\n    tag_122:\n      mload(0x40)\n      tag_125\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_125:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AMM.sol\":773:793  IERC20 public tokenY */\n    tag_25:\n      tag_126\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      tag_128\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_128:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AMM.sol\":929:963  uint256 public feeBasisPoints = 30 */\n    tag_26:\n      tag_129\n      tag_130\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      tag_131\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AMM.sol\":4878:5506  function swapXForY(uint256 amountXIn, uint256 minAmountYOut) external nonReentrant returns (uint256 amountYOut) {... */\n    tag_27:\n      tag_132\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_133\n      swap2\n      swap1\n      tag_84\n      jump\t// in\n    tag_133:\n      tag_134\n      jump\t// in\n    tag_132:\n      mload(0x40)\n      tag_135\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_135:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_28:\n      tag_136\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_138\n      jump\t// in\n    tag_137:\n      tag_139\n      jump\t// in\n    tag_136:\n      mload(0x40)\n      tag_140\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AMM.sol\":1069:1110  mapping(address => bool) public governors */\n    tag_29:\n      tag_141\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_142\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_142:\n      tag_143\n      jump\t// in\n    tag_141:\n      mload(0x40)\n      tag_144\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_144:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/AMM.sol\":8798:9347  function removeGovernor(address _governor) external onlyGovernor {... */\n    tag_30:\n      tag_145\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_146\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_146:\n      tag_147\n      jump\t// in\n    tag_145:\n      stop\n        /* \"contracts/AMM.sol\":1116:1145  address[] public governorList */\n    tag_41:\n      0x0c\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/AMM.sol\":6720:7161  function getAmountOut(... */\n    tag_47:\n        /* \"contracts/AMM.sol\":6859:6866  uint256 */\n      0x00\n        /* \"contracts/AMM.sol\":6878:6904  uint256 inputAmountWithFee */\n      dup1\n        /* \"contracts/AMM.sol\":6945:6959  feeBasisPoints */\n      sload(0x0a)\n        /* \"contracts/AMM.sol\":1028:1033  10000 */\n      0x2710\n        /* \"contracts/AMM.sol\":6922:6959  BASIS_POINTS_DIVISOR - feeBasisPoints */\n      tag_151\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"contracts/AMM.sol\":6907:6918  inputAmount */\n      dup6\n        /* \"contracts/AMM.sol\":6907:6960  inputAmount * (BASIS_POINTS_DIVISOR - feeBasisPoints) */\n      tag_153\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"contracts/AMM.sol\":6878:6960  uint256 inputAmountWithFee = inputAmount * (BASIS_POINTS_DIVISOR - feeBasisPoints) */\n      swap1\n      pop\n        /* \"contracts/AMM.sol\":6970:6987  uint256 numerator */\n      0x00\n        /* \"contracts/AMM.sol\":7011:7024  outputReserve */\n      dup4\n        /* \"contracts/AMM.sol\":6990:7008  inputAmountWithFee */\n      dup3\n        /* \"contracts/AMM.sol\":6990:7024  inputAmountWithFee * outputReserve */\n      tag_155\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_155:\n        /* \"contracts/AMM.sol\":6970:7024  uint256 numerator = inputAmountWithFee * outputReserve */\n      swap1\n      pop\n        /* \"contracts/AMM.sol\":7034:7053  uint256 denominator */\n      0x00\n        /* \"contracts/AMM.sol\":7096:7114  inputAmountWithFee */\n      dup3\n        /* \"contracts/AMM.sol\":1028:1033  10000 */\n      0x2710\n        /* \"contracts/AMM.sol\":7057:7069  inputReserve */\n      dup8\n        /* \"contracts/AMM.sol\":7057:7092  inputReserve * BASIS_POINTS_DIVISOR */\n      tag_156\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_156:\n        /* \"contracts/AMM.sol\":7056:7114  (inputReserve * BASIS_POINTS_DIVISOR) + inputAmountWithFee */\n      tag_157\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_157:\n        /* \"contracts/AMM.sol\":7034:7114  uint256 denominator = (inputReserve * BASIS_POINTS_DIVISOR) + inputAmountWithFee */\n      swap1\n      pop\n        /* \"contracts/AMM.sol\":7143:7154  denominator */\n      dup1\n        /* \"contracts/AMM.sol\":7131:7140  numerator */\n      dup3\n        /* \"contracts/AMM.sol\":7131:7154  numerator / denominator */\n      tag_159\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_159:\n        /* \"contracts/AMM.sol\":7124:7154  return numerator / denominator */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/AMM.sol\":6720:7161  function getAmountOut(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2119:2132  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2151:2156  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2144:2156  return _name */\n      dup1\n      sload\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_164\n      swap1\n      tag_163\n      jump\t// in\n    tag_164:\n      dup1\n      iszero\n      tag_165\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_166\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_165)\n    tag_166:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_167:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_167\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_165:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2074:2163  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/AMM.sol\":7339:7447  function getReserves() external view returns (uint256, uint256) {... */\n    tag_55:\n        /* \"contracts/AMM.sol\":7385:7392  uint256 */\n      0x00\n        /* \"contracts/AMM.sol\":7394:7401  uint256 */\n      dup1\n        /* \"contracts/AMM.sol\":7421:7429  reserveX */\n      sload(0x08)\n        /* \"contracts/AMM.sol\":7431:7439  reserveY */\n      sload(0x09)\n        /* \"contracts/AMM.sol\":7413:7440  return (reserveX, reserveY) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/AMM.sol\":7339:7447  function getReserves() external view returns (uint256, uint256) {... */\n      swap1\n      swap2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_61:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4366:4370  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4395  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      tag_170\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4408  _msgSender */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4398:4410  _msgSender() */\n      jump\t// in\n    tag_170:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4382:4410  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      tag_172\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4429:4434  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4436:4443  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4445:4450  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4428  _approve */\n      tag_173\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4420:4451  _approve(owner, spender, value) */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4468:4472  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4461:4472  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4293:4479  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/AMM.sol\":1283:1312  uint256 public lastTwapPriceY */\n    tag_65:\n      sload(0x0f)\n      dup2\n      jump\t// out\n        /* \"contracts/AMM.sol\":981:1033  uint256 public constant BASIS_POINTS_DIVISOR = 10000 */\n    tag_68:\n        /* \"contracts/AMM.sol\":1028:1033  10000 */\n      0x2710\n        /* \"contracts/AMM.sol\":981:1033  uint256 public constant BASIS_POINTS_DIVISOR = 10000 */\n      dup2\n      jump\t// out\n        /* \"contracts/AMM.sol\":747:767  IERC20 public tokenX */\n    tag_71:\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n    tag_75:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3196:3203  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3222:3234  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3215:3234  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3144:3241  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_80:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5126:5130  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5157  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5170  _msgSender */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5160:5172  _msgSender() */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5142:5172  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5198:5202  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5204:5211  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5213:5218  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5197  _spendAllowance */\n      tag_178\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5182:5219  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      tag_179\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5239:5243  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5245:5247  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5249:5254  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5238  _transfer */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5229:5255  _transfer(from, to, value) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5272:5276  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5265:5276  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5039:5283  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/AMM.sol\":5753:6381  function swapYForX(uint256 amountYIn, uint256 minAmountXOut) external nonReentrant returns (uint256 amountXOut) {... */\n    tag_85:\n        /* \"contracts/AMM.sol\":5845:5863  uint256 amountXOut */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_182\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_183\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_182:\n        /* \"contracts/AMM.sol\":5895:5896  0 */\n      0x00\n        /* \"contracts/AMM.sol\":5883:5892  amountYIn */\n      dup4\n        /* \"contracts/AMM.sol\":5883:5896  amountYIn > 0 */\n      gt\n        /* \"contracts/AMM.sol\":5875:5926  require(amountYIn > 0, \"AMM: Invalid input amount\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \"contracts/AMM.sol\":5949:5992  getAmountOut(amountYIn, reserveY, reserveX) */\n      tag_188\n        /* \"contracts/AMM.sol\":5962:5971  amountYIn */\n      dup4\n        /* \"contracts/AMM.sol\":5973:5981  reserveY */\n      sload(0x09)\n        /* \"contracts/AMM.sol\":5983:5991  reserveX */\n      sload(0x08)\n        /* \"contracts/AMM.sol\":5949:5961  getAmountOut */\n      tag_47\n        /* \"contracts/AMM.sol\":5949:5992  getAmountOut(amountYIn, reserveY, reserveX) */\n      jump\t// in\n    tag_188:\n        /* \"contracts/AMM.sol\":5936:5992  amountXOut = getAmountOut(amountYIn, reserveY, reserveX) */\n      swap1\n      pop\n        /* \"contracts/AMM.sol\":6024:6037  minAmountXOut */\n      dup2\n        /* \"contracts/AMM.sol\":6010:6020  amountXOut */\n      dup2\n        /* \"contracts/AMM.sol\":6010:6037  amountXOut >= minAmountXOut */\n      lt\n      iszero\n        /* \"contracts/AMM.sol\":6002:6073  require(amountXOut >= minAmountXOut, \"AMM: Insufficient output amount\") */\n      tag_189\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_190\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_189:\n        /* \"contracts/AMM.sol\":6084:6145  tokenY.safeTransferFrom(msg.sender, address(this), amountYIn) */\n      tag_192\n        /* \"contracts/AMM.sol\":6108:6118  msg.sender */\n      caller\n        /* \"contracts/AMM.sol\":6128:6132  this */\n      address\n        /* \"contracts/AMM.sol\":6135:6144  amountYIn */\n      dup6\n        /* \"contracts/AMM.sol\":6084:6090  tokenY */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AMM.sol\":6084:6107  tokenY.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_193\n      swap1\n        /* \"contracts/AMM.sol\":6084:6145  tokenY.safeTransferFrom(msg.sender, address(this), amountYIn) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_192:\n        /* \"contracts/AMM.sol\":6155:6198  tokenX.safeTransfer(msg.sender, amountXOut) */\n      tag_194\n        /* \"contracts/AMM.sol\":6175:6185  msg.sender */\n      caller\n        /* \"contracts/AMM.sol\":6187:6197  amountXOut */\n      dup3\n        /* \"contracts/AMM.sol\":6155:6161  tokenX */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AMM.sol\":6155:6174  tokenX.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_195\n      swap1\n        /* \"contracts/AMM.sol\":6155:6198  tokenX.safeTransfer(msg.sender, amountXOut) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_194:\n        /* \"contracts/AMM.sol\":6221:6230  amountYIn */\n      dup3\n        /* \"contracts/AMM.sol\":6209:6217  reserveY */\n      0x09\n      0x00\n        /* \"contracts/AMM.sol\":6209:6230  reserveY += amountYIn */\n      dup3\n      dup3\n      sload\n      tag_196\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_196:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AMM.sol\":6252:6262  amountXOut */\n      dup1\n        /* \"contracts/AMM.sol\":6240:6248  reserveX */\n      0x08\n      0x00\n        /* \"contracts/AMM.sol\":6240:6262  reserveX -= amountXOut */\n      dup3\n      dup3\n      sload\n      tag_197\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_197:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AMM.sol\":6273:6285  updateTwap() */\n      tag_198\n        /* \"contracts/AMM.sol\":6273:6283  updateTwap */\n      tag_199\n        /* \"contracts/AMM.sol\":6273:6285  updateTwap() */\n      jump\t// in\n    tag_198:\n        /* \"contracts/AMM.sol\":6306:6316  msg.sender */\n      caller\n        /* \"contracts/AMM.sol\":6301:6374  Swap(msg.sender, amountYIn, amountXOut, address(tokenY), address(tokenX)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x053d794b2310b8d186a24ae24a65ee066983a52a6efa6bd3df09a7601a3cb4f3\n        /* \"contracts/AMM.sol\":6318:6327  amountYIn */\n      dup5\n        /* \"contracts/AMM.sol\":6329:6339  amountXOut */\n      dup4\n        /* \"contracts/AMM.sol\":6349:6355  tokenY */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AMM.sol\":6366:6372  tokenX */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AMM.sol\":6301:6374  Swap(msg.sender, amountYIn, amountXOut, address(tokenY), address(tokenX)) */\n      mload(0x40)\n      tag_200\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_202\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_203\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_202:\n        /* \"contracts/AMM.sol\":5753:6381  function swapYForX(uint256 amountYIn, uint256 minAmountXOut) external nonReentrant returns (uint256 amountXOut) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n    tag_88:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3051:3056  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3075:3077  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3068:3077  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3002:3084  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/AMM.sol\":1205:1242  uint256 public twapInterval = 1 hours */\n    tag_92:\n      sload(0x0d)\n      dup2\n      jump\t// out\n        /* \"contracts/AMM.sol\":8343:8668  function addGovernor(address _governor) external onlyGovernor {... */\n    tag_97:\n        /* \"contracts/AMM.sol\":1971:1980  governors */\n      0x0b\n        /* \"contracts/AMM.sol\":1971:1992  governors[msg.sender] */\n      0x00\n        /* \"contracts/AMM.sol\":1981:1991  msg.sender */\n      caller\n        /* \"contracts/AMM.sol\":1971:1992  governors[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/AMM.sol\":1963:2026  require(governors[msg.sender], \"AMM: caller is not a governor\") */\n      tag_206\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_207\n      swap1\n      tag_208\n      jump\t// in\n    tag_207:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_206:\n        /* \"contracts/AMM.sol\":8444:8445  0 */\n      0x00\n        /* \"contracts/AMM.sol\":8423:8446  _governor != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AMM.sol\":8423:8432  _governor */\n      dup2\n        /* \"contracts/AMM.sol\":8423:8446  _governor != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/AMM.sol\":8415:8480  require(_governor != address(0), \"AMM: Invalid governor address\") */\n      tag_210\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_211\n      swap1\n      tag_212\n      jump\t// in\n    tag_211:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_210:\n        /* \"contracts/AMM.sol\":8499:8508  governors */\n      0x0b\n        /* \"contracts/AMM.sol\":8499:8519  governors[_governor] */\n      0x00\n        /* \"contracts/AMM.sol\":8509:8518  _governor */\n      dup3\n        /* \"contracts/AMM.sol\":8499:8519  governors[_governor] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/AMM.sol\":8498:8519  !governors[_governor] */\n      iszero\n        /* \"contracts/AMM.sol\":8490:8547  require(!governors[_governor], \"AMM: Already a governor\") */\n      tag_213\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_214\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_213:\n        /* \"contracts/AMM.sol\":8580:8584  true */\n      0x01\n        /* \"contracts/AMM.sol\":8557:8566  governors */\n      0x0b\n        /* \"contracts/AMM.sol\":8557:8577  governors[_governor] */\n      0x00\n        /* \"contracts/AMM.sol\":8567:8576  _governor */\n      dup4\n        /* \"contracts/AMM.sol\":8557:8577  governors[_governor] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/AMM.sol\":8557:8584  governors[_governor] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/AMM.sol\":8594:8606  governorList */\n      0x0c\n        /* \"contracts/AMM.sol\":8612:8621  _governor */\n      dup2\n        /* \"contracts/AMM.sol\":8594:8622  governorList.push(_governor) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/AMM.sol\":8651:8660  _governor */\n      dup1\n        /* \"contracts/AMM.sol\":8637:8661  GovernorAdded(_governor) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xdc5a48d79e2e147530ff63ecdbed5a5a66adb9d5cf339384d5d076da197c40b5\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/AMM.sol\":8343:8668  function addGovernor(address _governor) external onlyGovernor {... */\n      pop\n      jump\t// out\n        /* \"contracts/AMM.sol\":1248:1277  uint256 public lastTwapPriceX */\n    tag_99:\n      sload(0x0e)\n      dup2\n      jump\t// out\n        /* \"contracts/AMM.sol\":7981:8228  function setFee(uint256 _feeBasisPoints) external onlyGovernor {... */\n    tag_103:\n        /* \"contracts/AMM.sol\":1971:1980  governors */\n      0x0b\n        /* \"contracts/AMM.sol\":1971:1992  governors[msg.sender] */\n      0x00\n        /* \"contracts/AMM.sol\":1981:1991  msg.sender */\n      caller\n        /* \"contracts/AMM.sol\":1971:1992  governors[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/AMM.sol\":1963:2026  require(governors[msg.sender], \"AMM: caller is not a governor\") */\n      tag_218\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_219\n      swap1\n      tag_208\n      jump\t// in\n    tag_219:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_218:\n        /* \"contracts/AMM.sol\":1028:1033  10000 */\n      0x2710\n        /* \"contracts/AMM.sol\":8062:8077  _feeBasisPoints */\n      dup2\n        /* \"contracts/AMM.sol\":8062:8100  _feeBasisPoints < BASIS_POINTS_DIVISOR */\n      lt\n        /* \"contracts/AMM.sol\":8054:8121  require(_feeBasisPoints < BASIS_POINTS_DIVISOR, \"AMM: Invalid fee\") */\n      tag_221\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_221:\n        /* \"contracts/AMM.sol\":8136:8179  FeeUpdated(feeBasisPoints, _feeBasisPoints) */\n      0x528d9479e9f9889a87a3c30c7f7ba537e5e59c4c85a37733b16e57c62df61302\n        /* \"contracts/AMM.sol\":8147:8161  feeBasisPoints */\n      sload(0x0a)\n        /* \"contracts/AMM.sol\":8163:8178  _feeBasisPoints */\n      dup3\n        /* \"contracts/AMM.sol\":8136:8179  FeeUpdated(feeBasisPoints, _feeBasisPoints) */\n      mload(0x40)\n      tag_224\n      swap3\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_224:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/AMM.sol\":8206:8221  _feeBasisPoints */\n      dup1\n        /* \"contracts/AMM.sol\":8189:8203  feeBasisPoints */\n      0x0a\n        /* \"contracts/AMM.sol\":8189:8221  feeBasisPoints = _feeBasisPoints */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AMM.sol\":7981:8228  function setFee(uint256 _feeBasisPoints) external onlyGovernor {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_106:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3364:3371  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3399  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3407  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3390:3408  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3383:3408  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3299:3415  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n    tag_109:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2323:2336  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2355:2362  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2348:2362  return _symbol */\n      dup1\n      sload\n      tag_227\n      swap1\n      tag_163\n      jump\t// in\n    tag_227:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_228\n      swap1\n      tag_163\n      jump\t// in\n    tag_228:\n      dup1\n      iszero\n      tag_229\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_230\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_229)\n    tag_230:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_231:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_231\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_229:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2276:2369  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/AMM.sol\":4019:4631  function removeLiquidity(uint256 liquidity) external nonReentrant returns (uint256 amountX, uint256 amountY) {... */\n    tag_113:\n        /* \"contracts/AMM.sol\":4094:4109  uint256 amountX */\n      0x00\n        /* \"contracts/AMM.sol\":4111:4126  uint256 amountY */\n      dup1\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_233\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_183\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_233:\n        /* \"contracts/AMM.sol\":4158:4159  0 */\n      0x00\n        /* \"contracts/AMM.sol\":4146:4155  liquidity */\n      dup4\n        /* \"contracts/AMM.sol\":4146:4159  liquidity > 0 */\n      gt\n        /* \"contracts/AMM.sol\":4138:4193  require(liquidity > 0, \"AMM: Invalid liquidity amount\") */\n      tag_235\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_236\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_235:\n        /* \"contracts/AMM.sol\":4204:4223  uint256 totalSupply */\n      0x00\n        /* \"contracts/AMM.sol\":4226:4239  totalSupply() */\n      tag_238\n        /* \"contracts/AMM.sol\":4226:4237  totalSupply */\n      tag_75\n        /* \"contracts/AMM.sol\":4226:4239  totalSupply() */\n      jump\t// in\n    tag_238:\n        /* \"contracts/AMM.sol\":4204:4239  uint256 totalSupply = totalSupply() */\n      swap1\n      pop\n        /* \"contracts/AMM.sol\":4285:4296  totalSupply */\n      dup1\n        /* \"contracts/AMM.sol\":4273:4281  reserveX */\n      sload(0x08)\n        /* \"contracts/AMM.sol\":4261:4270  liquidity */\n      dup6\n        /* \"contracts/AMM.sol\":4261:4281  liquidity * reserveX */\n      tag_239\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_239:\n        /* \"contracts/AMM.sol\":4260:4296  (liquidity * reserveX) / totalSupply */\n      tag_240\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_240:\n        /* \"contracts/AMM.sol\":4250:4296  amountX = (liquidity * reserveX) / totalSupply */\n      swap3\n      pop\n        /* \"contracts/AMM.sol\":4341:4352  totalSupply */\n      dup1\n        /* \"contracts/AMM.sol\":4329:4337  reserveY */\n      sload(0x09)\n        /* \"contracts/AMM.sol\":4317:4326  liquidity */\n      dup6\n        /* \"contracts/AMM.sol\":4317:4337  liquidity * reserveY */\n      tag_241\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_241:\n        /* \"contracts/AMM.sol\":4316:4352  (liquidity * reserveY) / totalSupply */\n      tag_242\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_242:\n        /* \"contracts/AMM.sol\":4306:4352  amountY = (liquidity * reserveY) / totalSupply */\n      swap2\n      pop\n        /* \"contracts/AMM.sol\":4363:4391  _burn(msg.sender, liquidity) */\n      tag_243\n        /* \"contracts/AMM.sol\":4369:4379  msg.sender */\n      caller\n        /* \"contracts/AMM.sol\":4381:4390  liquidity */\n      dup6\n        /* \"contracts/AMM.sol\":4363:4368  _burn */\n      tag_244\n        /* \"contracts/AMM.sol\":4363:4391  _burn(msg.sender, liquidity) */\n      jump\t// in\n    tag_243:\n        /* \"contracts/AMM.sol\":4414:4421  amountX */\n      dup3\n        /* \"contracts/AMM.sol\":4402:4410  reserveX */\n      0x08\n      0x00\n        /* \"contracts/AMM.sol\":4402:4421  reserveX -= amountX */\n      dup3\n      dup3\n      sload\n      tag_245\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_245:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AMM.sol\":4443:4450  amountY */\n      dup2\n        /* \"contracts/AMM.sol\":4431:4439  reserveY */\n      0x09\n      0x00\n        /* \"contracts/AMM.sol\":4431:4450  reserveY -= amountY */\n      dup3\n      dup3\n      sload\n      tag_246\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_246:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AMM.sol\":4461:4501  tokenX.safeTransfer(msg.sender, amountX) */\n      tag_247\n        /* \"contracts/AMM.sol\":4481:4491  msg.sender */\n      caller\n        /* \"contracts/AMM.sol\":4493:4500  amountX */\n      dup5\n        /* \"contracts/AMM.sol\":4461:4467  tokenX */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AMM.sol\":4461:4480  tokenX.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_195\n      swap1\n        /* \"contracts/AMM.sol\":4461:4501  tokenX.safeTransfer(msg.sender, amountX) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_247:\n        /* \"contracts/AMM.sol\":4511:4551  tokenY.safeTransfer(msg.sender, amountY) */\n      tag_248\n        /* \"contracts/AMM.sol\":4531:4541  msg.sender */\n      caller\n        /* \"contracts/AMM.sol\":4543:4550  amountY */\n      dup4\n        /* \"contracts/AMM.sol\":4511:4517  tokenY */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AMM.sol\":4511:4530  tokenY.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_195\n      swap1\n        /* \"contracts/AMM.sol\":4511:4551  tokenY.safeTransfer(msg.sender, amountY) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_248:\n        /* \"contracts/AMM.sol\":4584:4594  msg.sender */\n      caller\n        /* \"contracts/AMM.sol\":4567:4624  LiquidityRemoved(msg.sender, amountX, amountY, liquidity) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1dc8bb69df2b8e91fbdcbfcf93d951b3f0000f085a95fe3f7946d6161439245d\n        /* \"contracts/AMM.sol\":4596:4603  amountX */\n      dup5\n        /* \"contracts/AMM.sol\":4605:4612  amountY */\n      dup5\n        /* \"contracts/AMM.sol\":4614:4623  liquidity */\n      dup8\n        /* \"contracts/AMM.sol\":4567:4624  LiquidityRemoved(msg.sender, amountX, amountY, liquidity) */\n      mload(0x40)\n      tag_249\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_249:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/AMM.sol\":4128:4631  {... */\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_251\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_203\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_251:\n        /* \"contracts/AMM.sol\":4019:4631  function removeLiquidity(uint256 liquidity) external nonReentrant returns (uint256 amountX, uint256 amountY) {... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/AMM.sol\":2823:3688  function addLiquidity(uint256 amountX, uint256 amountY) external nonReentrant returns (uint256 liquidity) {... */\n    tag_117:\n        /* \"contracts/AMM.sol\":2910:2927  uint256 liquidity */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_253\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_183\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_253:\n        /* \"contracts/AMM.sol\":2939:2998  tokenX.safeTransferFrom(msg.sender, address(this), amountX) */\n      tag_255\n        /* \"contracts/AMM.sol\":2963:2973  msg.sender */\n      caller\n        /* \"contracts/AMM.sol\":2983:2987  this */\n      address\n        /* \"contracts/AMM.sol\":2990:2997  amountX */\n      dup6\n        /* \"contracts/AMM.sol\":2939:2945  tokenX */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AMM.sol\":2939:2962  tokenX.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_193\n      swap1\n        /* \"contracts/AMM.sol\":2939:2998  tokenX.safeTransferFrom(msg.sender, address(this), amountX) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_255:\n        /* \"contracts/AMM.sol\":3008:3067  tokenY.safeTransferFrom(msg.sender, address(this), amountY) */\n      tag_256\n        /* \"contracts/AMM.sol\":3032:3042  msg.sender */\n      caller\n        /* \"contracts/AMM.sol\":3052:3056  this */\n      address\n        /* \"contracts/AMM.sol\":3059:3066  amountY */\n      dup5\n        /* \"contracts/AMM.sol\":3008:3014  tokenY */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AMM.sol\":3008:3031  tokenY.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_193\n      swap1\n        /* \"contracts/AMM.sol\":3008:3067  tokenY.safeTransferFrom(msg.sender, address(this), amountY) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_256:\n        /* \"contracts/AMM.sol\":3093:3094  0 */\n      0x00\n        /* \"contracts/AMM.sol\":3082:3090  reserveX */\n      sload(0x08)\n        /* \"contracts/AMM.sol\":3082:3094  reserveX > 0 */\n      gt\n        /* \"contracts/AMM.sol\":3082:3110  reserveX > 0 || reserveY > 0 */\n      dup1\n      tag_257\n      jumpi\n      pop\n        /* \"contracts/AMM.sol\":3109:3110  0 */\n      0x00\n        /* \"contracts/AMM.sol\":3098:3106  reserveY */\n      sload(0x09)\n        /* \"contracts/AMM.sol\":3098:3110  reserveY > 0 */\n      gt\n        /* \"contracts/AMM.sol\":3082:3110  reserveX > 0 || reserveY > 0 */\n    tag_257:\n        /* \"contracts/AMM.sol\":3078:3224  if (reserveX > 0 || reserveY > 0) {... */\n      iszero\n      tag_258\n      jumpi\n        /* \"contracts/AMM.sol\":3166:3174  reserveX */\n      sload(0x08)\n        /* \"contracts/AMM.sol\":3156:3163  amountY */\n      dup3\n        /* \"contracts/AMM.sol\":3156:3174  amountY * reserveX */\n      tag_259\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_259:\n        /* \"contracts/AMM.sol\":3144:3152  reserveY */\n      sload(0x09)\n        /* \"contracts/AMM.sol\":3134:3141  amountX */\n      dup5\n        /* \"contracts/AMM.sol\":3134:3152  amountX * reserveY */\n      tag_260\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_260:\n        /* \"contracts/AMM.sol\":3134:3174  amountX * reserveY == amountY * reserveX */\n      eq\n        /* \"contracts/AMM.sol\":3126:3213  require(amountX * reserveY == amountY * reserveX, \"AMM: Unbalanced liquidity provided\") */\n      tag_261\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_262\n      swap1\n      tag_263\n      jump\t// in\n    tag_262:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_261:\n        /* \"contracts/AMM.sol\":3078:3224  if (reserveX > 0 || reserveY > 0) {... */\n    tag_258:\n        /* \"contracts/AMM.sol\":3255:3256  0 */\n      0x00\n        /* \"contracts/AMM.sol\":3238:3251  totalSupply() */\n      tag_264\n        /* \"contracts/AMM.sol\":3238:3249  totalSupply */\n      tag_75\n        /* \"contracts/AMM.sol\":3238:3251  totalSupply() */\n      jump\t// in\n    tag_264:\n        /* \"contracts/AMM.sol\":3238:3256  totalSupply() == 0 */\n      sub\n        /* \"contracts/AMM.sol\":3234:3440  if (totalSupply() == 0) {... */\n      tag_265\n      jumpi\n        /* \"contracts/AMM.sol\":3284:3307  sqrt(amountX * amountY) */\n      tag_266\n        /* \"contracts/AMM.sol\":3299:3306  amountY */\n      dup3\n        /* \"contracts/AMM.sol\":3289:3296  amountX */\n      dup5\n        /* \"contracts/AMM.sol\":3289:3306  amountX * amountY */\n      tag_267\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_267:\n        /* \"contracts/AMM.sol\":3284:3288  sqrt */\n      tag_268\n        /* \"contracts/AMM.sol\":3284:3307  sqrt(amountX * amountY) */\n      jump\t// in\n    tag_266:\n        /* \"contracts/AMM.sol\":3272:3307  liquidity = sqrt(amountX * amountY) */\n      swap1\n      pop\n        /* \"contracts/AMM.sol\":3234:3440  if (totalSupply() == 0) {... */\n      jump(tag_269)\n    tag_265:\n        /* \"contracts/AMM.sol\":3350:3429  min((amountX * totalSupply()) / reserveX, (amountY * totalSupply()) / reserveY) */\n      tag_270\n        /* \"contracts/AMM.sol\":3382:3390  reserveX */\n      sload(0x08)\n        /* \"contracts/AMM.sol\":3365:3378  totalSupply() */\n      tag_271\n        /* \"contracts/AMM.sol\":3365:3376  totalSupply */\n      tag_75\n        /* \"contracts/AMM.sol\":3365:3378  totalSupply() */\n      jump\t// in\n    tag_271:\n        /* \"contracts/AMM.sol\":3355:3362  amountX */\n      dup6\n        /* \"contracts/AMM.sol\":3355:3378  amountX * totalSupply() */\n      tag_272\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_272:\n        /* \"contracts/AMM.sol\":3354:3390  (amountX * totalSupply()) / reserveX */\n      tag_273\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_273:\n        /* \"contracts/AMM.sol\":3420:3428  reserveY */\n      sload(0x09)\n        /* \"contracts/AMM.sol\":3403:3416  totalSupply() */\n      tag_274\n        /* \"contracts/AMM.sol\":3403:3414  totalSupply */\n      tag_75\n        /* \"contracts/AMM.sol\":3403:3416  totalSupply() */\n      jump\t// in\n    tag_274:\n        /* \"contracts/AMM.sol\":3393:3400  amountY */\n      dup6\n        /* \"contracts/AMM.sol\":3393:3416  amountY * totalSupply() */\n      tag_275\n      swap2\n      swap1\n      tag_154\n      jump\t// in\n    tag_275:\n        /* \"contracts/AMM.sol\":3392:3428  (amountY * totalSupply()) / reserveY */\n      tag_276\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_276:\n        /* \"contracts/AMM.sol\":3350:3353  min */\n      tag_277\n        /* \"contracts/AMM.sol\":3350:3429  min((amountX * totalSupply()) / reserveX, (amountY * totalSupply()) / reserveY) */\n      jump\t// in\n    tag_270:\n        /* \"contracts/AMM.sol\":3338:3429  liquidity = min((amountX * totalSupply()) / reserveX, (amountY * totalSupply()) / reserveY) */\n      swap1\n      pop\n        /* \"contracts/AMM.sol\":3234:3440  if (totalSupply() == 0) {... */\n    tag_269:\n        /* \"contracts/AMM.sol\":3470:3471  0 */\n      0x00\n        /* \"contracts/AMM.sol\":3458:3467  liquidity */\n      dup2\n        /* \"contracts/AMM.sol\":3458:3471  liquidity > 0 */\n      gt\n        /* \"contracts/AMM.sol\":3450:3512  require(liquidity > 0, \"AMM: Insufficient liquidity provided\") */\n      tag_278\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_279\n      swap1\n      tag_280\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_278:\n        /* \"contracts/AMM.sol\":3523:3551  _mint(msg.sender, liquidity) */\n      tag_281\n        /* \"contracts/AMM.sol\":3529:3539  msg.sender */\n      caller\n        /* \"contracts/AMM.sol\":3541:3550  liquidity */\n      dup3\n        /* \"contracts/AMM.sol\":3523:3528  _mint */\n      tag_282\n        /* \"contracts/AMM.sol\":3523:3551  _mint(msg.sender, liquidity) */\n      jump\t// in\n    tag_281:\n        /* \"contracts/AMM.sol\":3574:3581  amountX */\n      dup3\n        /* \"contracts/AMM.sol\":3562:3570  reserveX */\n      0x08\n      0x00\n        /* \"contracts/AMM.sol\":3562:3581  reserveX += amountX */\n      dup3\n      dup3\n      sload\n      tag_283\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_283:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AMM.sol\":3603:3610  amountY */\n      dup2\n        /* \"contracts/AMM.sol\":3591:3599  reserveY */\n      0x09\n      0x00\n        /* \"contracts/AMM.sol\":3591:3610  reserveY += amountY */\n      dup3\n      dup3\n      sload\n      tag_284\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_284:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AMM.sol\":3641:3651  msg.sender */\n      caller\n        /* \"contracts/AMM.sol\":3626:3681  LiquidityAdded(msg.sender, amountX, amountY, liquidity) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e\n        /* \"contracts/AMM.sol\":3653:3660  amountX */\n      dup5\n        /* \"contracts/AMM.sol\":3662:3669  amountY */\n      dup5\n        /* \"contracts/AMM.sol\":3671:3680  liquidity */\n      dup5\n        /* \"contracts/AMM.sol\":3626:3681  LiquidityAdded(msg.sender, amountX, amountY, liquidity) */\n      mload(0x40)\n      tag_285\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_286\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_203\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_286:\n        /* \"contracts/AMM.sol\":2823:3688  function addLiquidity(uint256 amountX, uint256 amountY) external nonReentrant returns (uint256 liquidity) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/AMM.sol\":1318:1350  uint256 public lastTwapTimestamp */\n    tag_120:\n      sload(0x10)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3679:3683  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3708  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      tag_288\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3721  _msgSender */\n      tag_171\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3711:3723  _msgSender() */\n      jump\t// in\n    tag_288:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3695:3723  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      tag_289\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3743:3748  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3750:3752  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3754:3759  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3742  _transfer */\n      tag_180\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3733:3760  _transfer(owner, to, value) */\n      jump\t// in\n    tag_289:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3777:3781  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3770:3781  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3610:3788  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/AMM.sol\":773:793  IERC20 public tokenY */\n    tag_127:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/AMM.sol\":929:963  uint256 public feeBasisPoints = 30 */\n    tag_130:\n      sload(0x0a)\n      dup2\n      jump\t// out\n        /* \"contracts/AMM.sol\":4878:5506  function swapXForY(uint256 amountXIn, uint256 minAmountYOut) external nonReentrant returns (uint256 amountYOut) {... */\n    tag_134:\n        /* \"contracts/AMM.sol\":4970:4988  uint256 amountYOut */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_291\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_183\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_291:\n        /* \"contracts/AMM.sol\":5020:5021  0 */\n      0x00\n        /* \"contracts/AMM.sol\":5008:5017  amountXIn */\n      dup4\n        /* \"contracts/AMM.sol\":5008:5021  amountXIn > 0 */\n      gt\n        /* \"contracts/AMM.sol\":5000:5051  require(amountXIn > 0, \"AMM: Invalid input amount\") */\n      tag_293\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_294\n      swap1\n      tag_187\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_293:\n        /* \"contracts/AMM.sol\":5074:5117  getAmountOut(amountXIn, reserveX, reserveY) */\n      tag_295\n        /* \"contracts/AMM.sol\":5087:5096  amountXIn */\n      dup4\n        /* \"contracts/AMM.sol\":5098:5106  reserveX */\n      sload(0x08)\n        /* \"contracts/AMM.sol\":5108:5116  reserveY */\n      sload(0x09)\n        /* \"contracts/AMM.sol\":5074:5086  getAmountOut */\n      tag_47\n        /* \"contracts/AMM.sol\":5074:5117  getAmountOut(amountXIn, reserveX, reserveY) */\n      jump\t// in\n    tag_295:\n        /* \"contracts/AMM.sol\":5061:5117  amountYOut = getAmountOut(amountXIn, reserveX, reserveY) */\n      swap1\n      pop\n        /* \"contracts/AMM.sol\":5149:5162  minAmountYOut */\n      dup2\n        /* \"contracts/AMM.sol\":5135:5145  amountYOut */\n      dup2\n        /* \"contracts/AMM.sol\":5135:5162  amountYOut >= minAmountYOut */\n      lt\n      iszero\n        /* \"contracts/AMM.sol\":5127:5198  require(amountYOut >= minAmountYOut, \"AMM: Insufficient output amount\") */\n      tag_296\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_297\n      swap1\n      tag_191\n      jump\t// in\n    tag_297:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_296:\n        /* \"contracts/AMM.sol\":5209:5270  tokenX.safeTransferFrom(msg.sender, address(this), amountXIn) */\n      tag_298\n        /* \"contracts/AMM.sol\":5233:5243  msg.sender */\n      caller\n        /* \"contracts/AMM.sol\":5253:5257  this */\n      address\n        /* \"contracts/AMM.sol\":5260:5269  amountXIn */\n      dup6\n        /* \"contracts/AMM.sol\":5209:5215  tokenX */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AMM.sol\":5209:5232  tokenX.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_193\n      swap1\n        /* \"contracts/AMM.sol\":5209:5270  tokenX.safeTransferFrom(msg.sender, address(this), amountXIn) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_298:\n        /* \"contracts/AMM.sol\":5280:5323  tokenY.safeTransfer(msg.sender, amountYOut) */\n      tag_299\n        /* \"contracts/AMM.sol\":5300:5310  msg.sender */\n      caller\n        /* \"contracts/AMM.sol\":5312:5322  amountYOut */\n      dup3\n        /* \"contracts/AMM.sol\":5280:5286  tokenY */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AMM.sol\":5280:5299  tokenY.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_195\n      swap1\n        /* \"contracts/AMM.sol\":5280:5323  tokenY.safeTransfer(msg.sender, amountYOut) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_299:\n        /* \"contracts/AMM.sol\":5346:5355  amountXIn */\n      dup3\n        /* \"contracts/AMM.sol\":5334:5342  reserveX */\n      0x08\n      0x00\n        /* \"contracts/AMM.sol\":5334:5355  reserveX += amountXIn */\n      dup3\n      dup3\n      sload\n      tag_300\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_300:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AMM.sol\":5377:5387  amountYOut */\n      dup1\n        /* \"contracts/AMM.sol\":5365:5373  reserveY */\n      0x09\n      0x00\n        /* \"contracts/AMM.sol\":5365:5387  reserveY -= amountYOut */\n      dup3\n      dup3\n      sload\n      tag_301\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_301:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AMM.sol\":5398:5410  updateTwap() */\n      tag_302\n        /* \"contracts/AMM.sol\":5398:5408  updateTwap */\n      tag_199\n        /* \"contracts/AMM.sol\":5398:5410  updateTwap() */\n      jump\t// in\n    tag_302:\n        /* \"contracts/AMM.sol\":5431:5441  msg.sender */\n      caller\n        /* \"contracts/AMM.sol\":5426:5499  Swap(msg.sender, amountXIn, amountYOut, address(tokenX), address(tokenY)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x053d794b2310b8d186a24ae24a65ee066983a52a6efa6bd3df09a7601a3cb4f3\n        /* \"contracts/AMM.sol\":5443:5452  amountXIn */\n      dup5\n        /* \"contracts/AMM.sol\":5454:5464  amountYOut */\n      dup4\n        /* \"contracts/AMM.sol\":5474:5480  tokenX */\n      0x06\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AMM.sol\":5491:5497  tokenY */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AMM.sol\":5426:5499  Swap(msg.sender, amountXIn, amountYOut, address(tokenX), address(tokenY)) */\n      mload(0x40)\n      tag_303\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_201\n      jump\t// in\n    tag_303:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_304\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_203\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_304:\n        /* \"contracts/AMM.sol\":4878:5506  function swapXForY(uint256 amountXIn, uint256 minAmountYOut) external nonReentrant returns (uint256 amountYOut) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_139:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3926:3933  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3963  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3964:3969  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3970  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3971:3978  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3952:3979  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3945:3979  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3846:3986  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/AMM.sol\":1069:1110  mapping(address => bool) public governors */\n    tag_143:\n      mstore(0x20, 0x0b)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/AMM.sol\":8798:9347  function removeGovernor(address _governor) external onlyGovernor {... */\n    tag_147:\n        /* \"contracts/AMM.sol\":1971:1980  governors */\n      0x0b\n        /* \"contracts/AMM.sol\":1971:1992  governors[msg.sender] */\n      0x00\n        /* \"contracts/AMM.sol\":1981:1991  msg.sender */\n      caller\n        /* \"contracts/AMM.sol\":1971:1992  governors[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/AMM.sol\":1963:2026  require(governors[msg.sender], \"AMM: caller is not a governor\") */\n      tag_307\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_308\n      swap1\n      tag_208\n      jump\t// in\n    tag_308:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_307:\n        /* \"contracts/AMM.sol\":8902:8903  0 */\n      0x00\n        /* \"contracts/AMM.sol\":8881:8904  _governor != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AMM.sol\":8881:8890  _governor */\n      dup2\n        /* \"contracts/AMM.sol\":8881:8904  _governor != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/AMM.sol\":8873:8938  require(_governor != address(0), \"AMM: Invalid governor address\") */\n      tag_310\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_311\n      swap1\n      tag_212\n      jump\t// in\n    tag_311:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_310:\n        /* \"contracts/AMM.sol\":8956:8965  governors */\n      0x0b\n        /* \"contracts/AMM.sol\":8956:8976  governors[_governor] */\n      0x00\n        /* \"contracts/AMM.sol\":8966:8975  _governor */\n      dup3\n        /* \"contracts/AMM.sol\":8956:8976  governors[_governor] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/AMM.sol\":8948:9000  require(governors[_governor], \"AMM: Not a governor\") */\n      tag_312\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_313\n      swap1\n      tag_314\n      jump\t// in\n    tag_313:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_312:\n        /* \"contracts/AMM.sol\":9033:9038  false */\n      0x00\n        /* \"contracts/AMM.sol\":9010:9019  governors */\n      0x0b\n        /* \"contracts/AMM.sol\":9010:9030  governors[_governor] */\n      0x00\n        /* \"contracts/AMM.sol\":9020:9029  _governor */\n      dup4\n        /* \"contracts/AMM.sol\":9010:9030  governors[_governor] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/AMM.sol\":9010:9038  governors[_governor] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/AMM.sol\":9053:9059  uint i */\n      0x00\n        /* \"contracts/AMM.sol\":9048:9300  for (uint i = 0; i < governorList.length; i++) {... */\n    tag_315:\n        /* \"contracts/AMM.sol\":9069:9081  governorList */\n      0x0c\n        /* \"contracts/AMM.sol\":9069:9088  governorList.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/AMM.sol\":9065:9066  i */\n      dup2\n        /* \"contracts/AMM.sol\":9065:9088  i < governorList.length */\n      lt\n        /* \"contracts/AMM.sol\":9048:9300  for (uint i = 0; i < governorList.length; i++) {... */\n      iszero\n      tag_316\n      jumpi\n        /* \"contracts/AMM.sol\":9132:9141  _governor */\n      dup2\n        /* \"contracts/AMM.sol\":9113:9141  governorList[i] == _governor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AMM.sol\":9113:9125  governorList */\n      0x0c\n        /* \"contracts/AMM.sol\":9126:9127  i */\n      dup3\n        /* \"contracts/AMM.sol\":9113:9128  governorList[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_318\n      jumpi\n      tag_319\n      tag_320\n      jump\t// in\n    tag_319:\n    tag_318:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AMM.sol\":9113:9141  governorList[i] == _governor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/AMM.sol\":9109:9290  if (governorList[i] == _governor) {... */\n      tag_322\n      jumpi\n        /* \"contracts/AMM.sol\":9179:9191  governorList */\n      0x0c\n        /* \"contracts/AMM.sol\":9214:9215  1 */\n      0x01\n        /* \"contracts/AMM.sol\":9192:9204  governorList */\n      0x0c\n        /* \"contracts/AMM.sol\":9192:9211  governorList.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/AMM.sol\":9192:9215  governorList.length - 1 */\n      tag_323\n      swap2\n      swap1\n      tag_152\n      jump\t// in\n    tag_323:\n        /* \"contracts/AMM.sol\":9179:9216  governorList[governorList.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_324\n      jumpi\n      tag_325\n      tag_320\n      jump\t// in\n    tag_325:\n    tag_324:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/AMM.sol\":9161:9173  governorList */\n      0x0c\n        /* \"contracts/AMM.sol\":9174:9175  i */\n      dup3\n        /* \"contracts/AMM.sol\":9161:9176  governorList[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_327\n      jumpi\n      tag_328\n      tag_320\n      jump\t// in\n    tag_328:\n    tag_327:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"contracts/AMM.sol\":9161:9216  governorList[i] = governorList[governorList.length - 1] */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/AMM.sol\":9234:9246  governorList */\n      0x0c\n        /* \"contracts/AMM.sol\":9234:9252  governorList.pop() */\n      dup1\n      sload\n      dup1\n      tag_330\n      jumpi\n      tag_331\n      tag_332\n      jump\t// in\n    tag_331:\n    tag_330:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      exp(0x0100, 0x00)\n      dup2\n      sload\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"contracts/AMM.sol\":9270:9275  break */\n      jump(tag_316)\n        /* \"contracts/AMM.sol\":9109:9290  if (governorList[i] == _governor) {... */\n    tag_322:\n        /* \"contracts/AMM.sol\":9090:9093  i++ */\n      dup1\n      dup1\n      0x01\n      add\n      swap2\n      pop\n      pop\n        /* \"contracts/AMM.sol\":9048:9300  for (uint i = 0; i < governorList.length; i++) {... */\n      jump(tag_315)\n    tag_316:\n      pop\n        /* \"contracts/AMM.sol\":9330:9339  _governor */\n      dup1\n        /* \"contracts/AMM.sol\":9314:9340  GovernorRemoved(_governor) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x1ebe834e73d60a5fec822c1e1727d34bc79f2ad977ed504581cc1822fe20fb5b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/AMM.sol\":8798:9347  function removeGovernor(address _governor) external onlyGovernor {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_171:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_173:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      tag_336\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9082:9087  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9089:9096  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9098:9103  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9105:9109  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9081  _approve */\n      tag_337\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9073:9110  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_336:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8989:9117  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_178:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10786  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      tag_339\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10799:10804  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10806:10813  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10798  allowance */\n      tag_139\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10789:10814  allowance(owner, spender) */\n      jump\t// in\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10762:10814  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10865  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10844  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10828:10865  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n      tag_340\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10904:10909  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10901  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10885:10909  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n      iszero\n      tag_341\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10963:10970  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10972:10988  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10990:10995  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10936:10996  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_342\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_343\n      jump\t// in\n    tag_342:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10881:11011  if (currentAllowance < value) {... */\n    tag_341:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      tag_344\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11061:11066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11068:11075  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11096:11101  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11093  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11077:11101  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11103:11108  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11060  _approve */\n      tag_337\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":11052:11109  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_344:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10824:11134  if (currentAllowance != type(uint256).max) {... */\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10752:11140  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10663:11140  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5755:5756  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5743  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5739:5757  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n      tag_346\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5807:5808  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5780:5810  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_347\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_347:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5735:5821  if (from == address(0)) {... */\n    tag_346:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5848:5849  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5836  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5834:5850  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n      tag_348\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5902:5903  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5873:5905  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_349\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_349:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5830:5916  if (to == address(0)) {... */\n    tag_348:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      tag_350\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5933:5937  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5939:5941  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5943:5948  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5932  _update */\n      tag_351\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5925:5949  _update(from, to, value) */\n      jump\t// in\n    tag_350:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5656:5956  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_183:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x05)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_353\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_354\n      swap1\n      tag_355\n      jump\t// in\n    tag_354:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_353:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x05\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_357\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1849  token */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1865:1869  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1871:1873  to */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1875:1880  value */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_358\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_359\n      jump\t// in\n    tag_358:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_360\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_357:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_362\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1432  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1444:1446  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1448:1453  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_363\n      swap3\n      swap2\n      swap1\n      tag_364\n      jump\t// in\n    tag_363:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_360\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_362:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/AMM.sol\":7532:7855  function updateTwap() internal {... */\n    tag_199:\n        /* \"contracts/AMM.sol\":7616:7628  twapInterval */\n      sload(0x0d)\n        /* \"contracts/AMM.sol\":7596:7613  lastTwapTimestamp */\n      sload(0x10)\n        /* \"contracts/AMM.sol\":7596:7628  lastTwapTimestamp + twapInterval */\n      tag_366\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_366:\n        /* \"contracts/AMM.sol\":7577:7592  block.timestamp */\n      timestamp\n        /* \"contracts/AMM.sol\":7577:7628  block.timestamp >= lastTwapTimestamp + twapInterval */\n      lt\n        /* \"contracts/AMM.sol\":7573:7849  if (block.timestamp >= lastTwapTimestamp + twapInterval) {... */\n      tag_367\n      jumpi\n        /* \"contracts/AMM.sol\":7661:7669  reserveX */\n      sload(0x08)\n        /* \"contracts/AMM.sol\":7644:7658  lastTwapPriceX */\n      0x0e\n        /* \"contracts/AMM.sol\":7644:7669  lastTwapPriceX = reserveX */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AMM.sol\":7700:7708  reserveY */\n      sload(0x09)\n        /* \"contracts/AMM.sol\":7683:7697  lastTwapPriceY */\n      0x0f\n        /* \"contracts/AMM.sol\":7683:7708  lastTwapPriceY = reserveY */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AMM.sol\":7742:7757  block.timestamp */\n      timestamp\n        /* \"contracts/AMM.sol\":7722:7739  lastTwapTimestamp */\n      0x10\n        /* \"contracts/AMM.sol\":7722:7757  lastTwapTimestamp = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/AMM.sol\":7776:7838  TwapUpdated(lastTwapPriceX, lastTwapPriceY, lastTwapTimestamp) */\n      0x9cfe07a59ebb9a772e1fee2abd40b53001de7c2f0b2e713de333f564118c32c4\n        /* \"contracts/AMM.sol\":7788:7802  lastTwapPriceX */\n      sload(0x0e)\n        /* \"contracts/AMM.sol\":7804:7818  lastTwapPriceY */\n      sload(0x0f)\n        /* \"contracts/AMM.sol\":7820:7837  lastTwapTimestamp */\n      sload(0x10)\n        /* \"contracts/AMM.sol\":7776:7838  TwapUpdated(lastTwapPriceX, lastTwapPriceY, lastTwapTimestamp) */\n      mload(0x40)\n      tag_368\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_250\n      jump\t// in\n    tag_368:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/AMM.sol\":7573:7849  if (block.timestamp >= lastTwapTimestamp + twapInterval) {... */\n    tag_367:\n        /* \"contracts/AMM.sol\":7532:7855  function updateTwap() internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_203:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x05\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n    tag_244:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8336:8337  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8324  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8317:8338  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n      tag_371\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8388:8389  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8361:8391  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_372\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_372:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8313:8402  if (account == address(0)) {... */\n    tag_371:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      tag_373\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8419:8426  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8436:8437  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8440:8445  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8418  _update */\n      tag_351\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8411:8446  _update(account, address(0), value) */\n      jump\t// in\n    tag_373:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8247:8453  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/AMM.sol\":9544:9845  function sqrt(uint256 y) internal pure returns (uint256 z) {... */\n    tag_268:\n        /* \"contracts/AMM.sol\":9592:9601  uint256 z */\n      0x00\n        /* \"contracts/AMM.sol\":9621:9622  3 */\n      0x03\n        /* \"contracts/AMM.sol\":9617:9618  y */\n      dup3\n        /* \"contracts/AMM.sol\":9617:9622  y > 3 */\n      gt\n        /* \"contracts/AMM.sol\":9613:9839  if (y > 3) {... */\n      iszero\n      tag_375\n      jumpi\n        /* \"contracts/AMM.sol\":9642:9643  y */\n      dup2\n        /* \"contracts/AMM.sol\":9638:9643  z = y */\n      swap1\n      pop\n        /* \"contracts/AMM.sol\":9657:9666  uint256 x */\n      0x00\n        /* \"contracts/AMM.sol\":9677:9678  1 */\n      0x01\n        /* \"contracts/AMM.sol\":9673:9674  2 */\n      0x02\n        /* \"contracts/AMM.sol\":9669:9670  y */\n      dup5\n        /* \"contracts/AMM.sol\":9669:9674  y / 2 */\n      tag_376\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_376:\n        /* \"contracts/AMM.sol\":9669:9678  y / 2 + 1 */\n      tag_377\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_377:\n        /* \"contracts/AMM.sol\":9657:9678  uint256 x = y / 2 + 1 */\n      swap1\n      pop\n        /* \"contracts/AMM.sol\":9692:9781  while (x < z) {... */\n    tag_378:\n        /* \"contracts/AMM.sol\":9703:9704  z */\n      dup2\n        /* \"contracts/AMM.sol\":9699:9700  x */\n      dup2\n        /* \"contracts/AMM.sol\":9699:9704  x < z */\n      lt\n        /* \"contracts/AMM.sol\":9692:9781  while (x < z) {... */\n      iszero\n      tag_379\n      jumpi\n        /* \"contracts/AMM.sol\":9728:9729  x */\n      dup1\n        /* \"contracts/AMM.sol\":9724:9729  z = x */\n      swap2\n      pop\n        /* \"contracts/AMM.sol\":9765:9766  2 */\n      0x02\n        /* \"contracts/AMM.sol\":9760:9761  x */\n      dup2\n        /* \"contracts/AMM.sol\":9756:9757  x */\n      dup3\n        /* \"contracts/AMM.sol\":9752:9753  y */\n      dup6\n        /* \"contracts/AMM.sol\":9752:9757  y / x */\n      tag_380\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_380:\n        /* \"contracts/AMM.sol\":9752:9761  y / x + x */\n      tag_381\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_381:\n        /* \"contracts/AMM.sol\":9751:9766  (y / x + x) / 2 */\n      tag_382\n      swap2\n      swap1\n      tag_160\n      jump\t// in\n    tag_382:\n        /* \"contracts/AMM.sol\":9747:9766  x = (y / x + x) / 2 */\n      swap1\n      pop\n        /* \"contracts/AMM.sol\":9692:9781  while (x < z) {... */\n      jump(tag_378)\n    tag_379:\n        /* \"contracts/AMM.sol\":9624:9791  {... */\n      pop\n        /* \"contracts/AMM.sol\":9613:9839  if (y > 3) {... */\n      jump(tag_383)\n    tag_375:\n        /* \"contracts/AMM.sol\":9806:9807  0 */\n      0x00\n        /* \"contracts/AMM.sol\":9801:9802  y */\n      dup3\n        /* \"contracts/AMM.sol\":9801:9807  y != 0 */\n      eq\n        /* \"contracts/AMM.sol\":9797:9839  if (y != 0) {... */\n      tag_384\n      jumpi\n        /* \"contracts/AMM.sol\":9827:9828  1 */\n      0x01\n        /* \"contracts/AMM.sol\":9823:9828  z = 1 */\n      swap1\n      pop\n        /* \"contracts/AMM.sol\":9797:9839  if (y != 0) {... */\n    tag_384:\n        /* \"contracts/AMM.sol\":9613:9839  if (y > 3) {... */\n    tag_383:\n        /* \"contracts/AMM.sol\":9544:9845  function sqrt(uint256 y) internal pure returns (uint256 z) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/AMM.sol\":10034:10138  function min(uint256 x, uint256 y) internal pure returns (uint256) {... */\n    tag_277:\n        /* \"contracts/AMM.sol\":10092:10099  uint256 */\n      0x00\n        /* \"contracts/AMM.sol\":10122:10123  y */\n      dup2\n        /* \"contracts/AMM.sol\":10118:10119  x */\n      dup4\n        /* \"contracts/AMM.sol\":10118:10123  x < y */\n      lt\n        /* \"contracts/AMM.sol\":10118:10131  x < y ? x : y */\n      tag_386\n      jumpi\n        /* \"contracts/AMM.sol\":10130:10131  y */\n      dup2\n        /* \"contracts/AMM.sol\":10118:10131  x < y ? x : y */\n      jump(tag_387)\n    tag_386:\n        /* \"contracts/AMM.sol\":10126:10127  x */\n      dup3\n        /* \"contracts/AMM.sol\":10118:10131  x < y ? x : y */\n    tag_387:\n        /* \"contracts/AMM.sol\":10111:10131  return x < y ? x : y */\n      swap1\n      pop\n        /* \"contracts/AMM.sol\":10034:10138  function min(uint256 x, uint256 y) internal pure returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n    tag_282:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7810:7811  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7798  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7791:7812  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n      tag_389\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7864:7865  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7835:7867  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_390\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_390:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7787:7878  if (account == address(0)) {... */\n    tag_389:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      tag_391\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7903:7904  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7907:7914  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7916:7921  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7894  _update */\n      tag_351\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7887:7922  _update(address(0), account, value) */\n      jump\t// in\n    tag_391:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7721:7929  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_337:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10078:10079  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10066  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10061:10080  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n      tag_393\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10132:10133  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10103:10135  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_394\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_394:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10057:10146  if (owner == address(0)) {... */\n    tag_393:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10178:10179  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10166  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10159:10180  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n      tag_395\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10231:10232  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10203:10234  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_396\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_396:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10155:10245  if (spender == address(0)) {... */\n    tag_395:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10284:10289  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10265  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10266:10271  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10272  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10273:10280  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10281  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10254:10289  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10303:10312  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n      iszero\n      tag_397\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10349:10356  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10342:10347  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10358:10363  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10333:10364  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_398\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_398:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10299:10375  if (emitEvent) {... */\n    tag_397:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9949:10381  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_351:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6376:6377  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6364  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6360:6378  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      tag_400\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6512:6517  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6508  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6496:6517  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_401\n      swap2\n      swap1\n      tag_158\n      jump\t// in\n    tag_401:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n      jump(tag_402)\n    tag_400:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6567  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6579  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6580:6584  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6570:6585  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6548:6585  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6617:6622  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6614  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6622  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n      iszero\n      tag_403\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6674:6678  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6680:6691  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6693:6698  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6649:6699  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_404\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_343\n      jump\t// in\n    tag_404:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6599:6714  if (fromBalance < value) {... */\n    tag_403:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6866:6871  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6863  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6852:6871  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6843  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6844:6848  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6849  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6834:6871  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6534:6896  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6356:6896  if (from == address(0)) {... */\n    tag_402:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6924:6925  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6912  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6910:6926  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      tag_405\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7089:7094  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7085  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7073:7094  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n      jump(tag_406)\n    tag_405:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7301:7306  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7293  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7294:7296  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7297  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7284:7306  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6906:7331  if (to == address(0)) {... */\n    tag_406:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7361:7363  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7355:7359  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7365:7370  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7346:7371  Transfer(from, to, value) */\n      mload(0x40)\n      tag_407\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_407:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:7378  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_360:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_409\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_410\n      swap1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_409:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_411\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_412\n      swap2\n      swap1\n      tag_413\n      jump\t// in\n    tag_412:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_411:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_414\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_415\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_415:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_414:\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_410:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_417\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_418\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_417:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_418:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_420\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_421\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_421:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_420:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3435:3458  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_422\n      swap2\n      swap1\n      tag_423\n      jump\t// in\n    tag_422:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_426\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_425)\n    tag_426:\n      0x60\n      swap2\n      pop\n    tag_425:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_427\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_428\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_427:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_428:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_430\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_431\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_432\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_431:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_433)\n    tag_430:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_434\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_434:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_435\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_436\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_436:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_435:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_429)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_433:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_429:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_432:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_438\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_438:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":88:205   */\n    tag_441:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_443:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_444:\n        /* \"#utility.yul\":490:514   */\n      tag_502\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_443\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_503\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_503:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_445:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_505\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_444\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_40:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_508\n      tag_441\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":766:885   */\n    tag_507:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_509\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_445\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1151   */\n    tag_446:\n        /* \"#utility.yul\":1062:1069   */\n      0x00\n        /* \"#utility.yul\":1102:1144   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1095:1100   */\n      dup3\n        /* \"#utility.yul\":1091:1145   */\n      and\n        /* \"#utility.yul\":1080:1145   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1151   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1157:1253   */\n    tag_447:\n        /* \"#utility.yul\":1194:1201   */\n      0x00\n        /* \"#utility.yul\":1223:1247   */\n      tag_512\n        /* \"#utility.yul\":1241:1246   */\n      dup3\n        /* \"#utility.yul\":1223:1247   */\n      tag_446\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":1212:1247   */\n      swap1\n      pop\n        /* \"#utility.yul\":1157:1253   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1259:1377   */\n    tag_448:\n        /* \"#utility.yul\":1346:1370   */\n      tag_514\n        /* \"#utility.yul\":1364:1369   */\n      dup2\n        /* \"#utility.yul\":1346:1370   */\n      tag_447\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":1341:1344   */\n      dup3\n        /* \"#utility.yul\":1334:1371   */\n      mstore\n        /* \"#utility.yul\":1259:1377   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1383:1605   */\n    tag_43:\n        /* \"#utility.yul\":1476:1480   */\n      0x00\n        /* \"#utility.yul\":1514:1516   */\n      0x20\n        /* \"#utility.yul\":1503:1512   */\n      dup3\n        /* \"#utility.yul\":1499:1517   */\n      add\n        /* \"#utility.yul\":1491:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1527:1598   */\n      tag_516\n        /* \"#utility.yul\":1595:1596   */\n      0x00\n        /* \"#utility.yul\":1584:1593   */\n      dup4\n        /* \"#utility.yul\":1580:1597   */\n      add\n        /* \"#utility.yul\":1571:1577   */\n      dup5\n        /* \"#utility.yul\":1527:1598   */\n      tag_448\n      jump\t// in\n    tag_516:\n        /* \"#utility.yul\":1383:1605   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1611:2230   */\n    tag_46:\n        /* \"#utility.yul\":1688:1694   */\n      0x00\n        /* \"#utility.yul\":1696:1702   */\n      dup1\n        /* \"#utility.yul\":1704:1710   */\n      0x00\n        /* \"#utility.yul\":1753:1755   */\n      0x60\n        /* \"#utility.yul\":1741:1750   */\n      dup5\n        /* \"#utility.yul\":1732:1739   */\n      dup7\n        /* \"#utility.yul\":1728:1751   */\n      sub\n        /* \"#utility.yul\":1724:1756   */\n      slt\n        /* \"#utility.yul\":1721:1840   */\n      iszero\n      tag_518\n      jumpi\n        /* \"#utility.yul\":1759:1838   */\n      tag_519\n      tag_441\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":1721:1840   */\n    tag_518:\n        /* \"#utility.yul\":1879:1880   */\n      0x00\n        /* \"#utility.yul\":1904:1957   */\n      tag_520\n        /* \"#utility.yul\":1949:1956   */\n      dup7\n        /* \"#utility.yul\":1940:1946   */\n      dup3\n        /* \"#utility.yul\":1929:1938   */\n      dup8\n        /* \"#utility.yul\":1925:1947   */\n      add\n        /* \"#utility.yul\":1904:1957   */\n      tag_445\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":1894:1957   */\n      swap4\n      pop\n        /* \"#utility.yul\":1850:1967   */\n      pop\n        /* \"#utility.yul\":2006:2008   */\n      0x20\n        /* \"#utility.yul\":2032:2085   */\n      tag_521\n        /* \"#utility.yul\":2077:2084   */\n      dup7\n        /* \"#utility.yul\":2068:2074   */\n      dup3\n        /* \"#utility.yul\":2057:2066   */\n      dup8\n        /* \"#utility.yul\":2053:2075   */\n      add\n        /* \"#utility.yul\":2032:2085   */\n      tag_445\n      jump\t// in\n    tag_521:\n        /* \"#utility.yul\":2022:2085   */\n      swap3\n      pop\n        /* \"#utility.yul\":1977:2095   */\n      pop\n        /* \"#utility.yul\":2134:2136   */\n      0x40\n        /* \"#utility.yul\":2160:2213   */\n      tag_522\n        /* \"#utility.yul\":2205:2212   */\n      dup7\n        /* \"#utility.yul\":2196:2202   */\n      dup3\n        /* \"#utility.yul\":2185:2194   */\n      dup8\n        /* \"#utility.yul\":2181:2203   */\n      add\n        /* \"#utility.yul\":2160:2213   */\n      tag_445\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":2150:2213   */\n      swap2\n      pop\n        /* \"#utility.yul\":2105:2223   */\n      pop\n        /* \"#utility.yul\":1611:2230   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":2236:2354   */\n    tag_449:\n        /* \"#utility.yul\":2323:2347   */\n      tag_524\n        /* \"#utility.yul\":2341:2346   */\n      dup2\n        /* \"#utility.yul\":2323:2347   */\n      tag_443\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":2318:2321   */\n      dup3\n        /* \"#utility.yul\":2311:2348   */\n      mstore\n        /* \"#utility.yul\":2236:2354   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2360:2582   */\n    tag_49:\n        /* \"#utility.yul\":2453:2457   */\n      0x00\n        /* \"#utility.yul\":2491:2493   */\n      0x20\n        /* \"#utility.yul\":2480:2489   */\n      dup3\n        /* \"#utility.yul\":2476:2494   */\n      add\n        /* \"#utility.yul\":2468:2494   */\n      swap1\n      pop\n        /* \"#utility.yul\":2504:2575   */\n      tag_526\n        /* \"#utility.yul\":2572:2573   */\n      0x00\n        /* \"#utility.yul\":2561:2570   */\n      dup4\n        /* \"#utility.yul\":2557:2574   */\n      add\n        /* \"#utility.yul\":2548:2554   */\n      dup5\n        /* \"#utility.yul\":2504:2575   */\n      tag_449\n      jump\t// in\n    tag_526:\n        /* \"#utility.yul\":2360:2582   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2588:2687   */\n    tag_450:\n        /* \"#utility.yul\":2640:2646   */\n      0x00\n        /* \"#utility.yul\":2674:2679   */\n      dup2\n        /* \"#utility.yul\":2668:2680   */\n      mload\n        /* \"#utility.yul\":2658:2680   */\n      swap1\n      pop\n        /* \"#utility.yul\":2588:2687   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2693:2862   */\n    tag_451:\n        /* \"#utility.yul\":2777:2788   */\n      0x00\n        /* \"#utility.yul\":2811:2817   */\n      dup3\n        /* \"#utility.yul\":2806:2809   */\n      dup3\n        /* \"#utility.yul\":2799:2818   */\n      mstore\n        /* \"#utility.yul\":2851:2855   */\n      0x20\n        /* \"#utility.yul\":2846:2849   */\n      dup3\n        /* \"#utility.yul\":2842:2856   */\n      add\n        /* \"#utility.yul\":2827:2856   */\n      swap1\n      pop\n        /* \"#utility.yul\":2693:2862   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2868:3007   */\n    tag_452:\n        /* \"#utility.yul\":2957:2963   */\n      dup3\n        /* \"#utility.yul\":2952:2955   */\n      dup2\n        /* \"#utility.yul\":2947:2950   */\n      dup4\n        /* \"#utility.yul\":2941:2964   */\n      mcopy\n        /* \"#utility.yul\":2998:2999   */\n      0x00\n        /* \"#utility.yul\":2989:2995   */\n      dup4\n        /* \"#utility.yul\":2984:2987   */\n      dup4\n        /* \"#utility.yul\":2980:2996   */\n      add\n        /* \"#utility.yul\":2973:3000   */\n      mstore\n        /* \"#utility.yul\":2868:3007   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3013:3115   */\n    tag_453:\n        /* \"#utility.yul\":3054:3060   */\n      0x00\n        /* \"#utility.yul\":3105:3107   */\n      0x1f\n        /* \"#utility.yul\":3101:3108   */\n      not\n        /* \"#utility.yul\":3096:3098   */\n      0x1f\n        /* \"#utility.yul\":3089:3094   */\n      dup4\n        /* \"#utility.yul\":3085:3099   */\n      add\n        /* \"#utility.yul\":3081:3109   */\n      and\n        /* \"#utility.yul\":3071:3109   */\n      swap1\n      pop\n        /* \"#utility.yul\":3013:3115   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3121:3498   */\n    tag_454:\n        /* \"#utility.yul\":3209:3212   */\n      0x00\n        /* \"#utility.yul\":3237:3276   */\n      tag_532\n        /* \"#utility.yul\":3270:3275   */\n      dup3\n        /* \"#utility.yul\":3237:3276   */\n      tag_450\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":3292:3363   */\n      tag_533\n        /* \"#utility.yul\":3356:3362   */\n      dup2\n        /* \"#utility.yul\":3351:3354   */\n      dup6\n        /* \"#utility.yul\":3292:3363   */\n      tag_451\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":3285:3363   */\n      swap4\n      pop\n        /* \"#utility.yul\":3372:3437   */\n      tag_534\n        /* \"#utility.yul\":3430:3436   */\n      dup2\n        /* \"#utility.yul\":3425:3428   */\n      dup6\n        /* \"#utility.yul\":3418:3422   */\n      0x20\n        /* \"#utility.yul\":3411:3416   */\n      dup7\n        /* \"#utility.yul\":3407:3423   */\n      add\n        /* \"#utility.yul\":3372:3437   */\n      tag_452\n      jump\t// in\n    tag_534:\n        /* \"#utility.yul\":3462:3491   */\n      tag_535\n        /* \"#utility.yul\":3484:3490   */\n      dup2\n        /* \"#utility.yul\":3462:3491   */\n      tag_453\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":3457:3460   */\n      dup5\n        /* \"#utility.yul\":3453:3492   */\n      add\n        /* \"#utility.yul\":3446:3492   */\n      swap2\n      pop\n        /* \"#utility.yul\":3213:3498   */\n      pop\n        /* \"#utility.yul\":3121:3498   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3504:3817   */\n    tag_53:\n        /* \"#utility.yul\":3617:3621   */\n      0x00\n        /* \"#utility.yul\":3655:3657   */\n      0x20\n        /* \"#utility.yul\":3644:3653   */\n      dup3\n        /* \"#utility.yul\":3640:3658   */\n      add\n        /* \"#utility.yul\":3632:3658   */\n      swap1\n      pop\n        /* \"#utility.yul\":3704:3713   */\n      dup2\n        /* \"#utility.yul\":3698:3702   */\n      dup2\n        /* \"#utility.yul\":3694:3714   */\n      sub\n        /* \"#utility.yul\":3690:3691   */\n      0x00\n        /* \"#utility.yul\":3679:3688   */\n      dup4\n        /* \"#utility.yul\":3675:3692   */\n      add\n        /* \"#utility.yul\":3668:3715   */\n      mstore\n        /* \"#utility.yul\":3732:3810   */\n      tag_537\n        /* \"#utility.yul\":3805:3809   */\n      dup2\n        /* \"#utility.yul\":3796:3802   */\n      dup5\n        /* \"#utility.yul\":3732:3810   */\n      tag_454\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":3724:3810   */\n      swap1\n      pop\n        /* \"#utility.yul\":3504:3817   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3823:4155   */\n    tag_57:\n        /* \"#utility.yul\":3944:3948   */\n      0x00\n        /* \"#utility.yul\":3982:3984   */\n      0x40\n        /* \"#utility.yul\":3971:3980   */\n      dup3\n        /* \"#utility.yul\":3967:3985   */\n      add\n        /* \"#utility.yul\":3959:3985   */\n      swap1\n      pop\n        /* \"#utility.yul\":3995:4066   */\n      tag_539\n        /* \"#utility.yul\":4063:4064   */\n      0x00\n        /* \"#utility.yul\":4052:4061   */\n      dup4\n        /* \"#utility.yul\":4048:4065   */\n      add\n        /* \"#utility.yul\":4039:4045   */\n      dup6\n        /* \"#utility.yul\":3995:4066   */\n      tag_449\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":4076:4148   */\n      tag_540\n        /* \"#utility.yul\":4144:4146   */\n      0x20\n        /* \"#utility.yul\":4133:4142   */\n      dup4\n        /* \"#utility.yul\":4129:4147   */\n      add\n        /* \"#utility.yul\":4120:4126   */\n      dup5\n        /* \"#utility.yul\":4076:4148   */\n      tag_449\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":3823:4155   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4161:4283   */\n    tag_455:\n        /* \"#utility.yul\":4234:4258   */\n      tag_542\n        /* \"#utility.yul\":4252:4257   */\n      dup2\n        /* \"#utility.yul\":4234:4258   */\n      tag_447\n      jump\t// in\n    tag_542:\n        /* \"#utility.yul\":4227:4232   */\n      dup2\n        /* \"#utility.yul\":4224:4259   */\n      eq\n        /* \"#utility.yul\":4214:4277   */\n      tag_543\n      jumpi\n        /* \"#utility.yul\":4273:4274   */\n      0x00\n        /* \"#utility.yul\":4270:4271   */\n      dup1\n        /* \"#utility.yul\":4263:4275   */\n      revert\n        /* \"#utility.yul\":4214:4277   */\n    tag_543:\n        /* \"#utility.yul\":4161:4283   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4289:4428   */\n    tag_456:\n        /* \"#utility.yul\":4335:4340   */\n      0x00\n        /* \"#utility.yul\":4373:4379   */\n      dup2\n        /* \"#utility.yul\":4360:4380   */\n      calldataload\n        /* \"#utility.yul\":4351:4380   */\n      swap1\n      pop\n        /* \"#utility.yul\":4389:4422   */\n      tag_545\n        /* \"#utility.yul\":4416:4421   */\n      dup2\n        /* \"#utility.yul\":4389:4422   */\n      tag_455\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":4289:4428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4434:4908   */\n    tag_60:\n        /* \"#utility.yul\":4502:4508   */\n      0x00\n        /* \"#utility.yul\":4510:4516   */\n      dup1\n        /* \"#utility.yul\":4559:4561   */\n      0x40\n        /* \"#utility.yul\":4547:4556   */\n      dup4\n        /* \"#utility.yul\":4538:4545   */\n      dup6\n        /* \"#utility.yul\":4534:4557   */\n      sub\n        /* \"#utility.yul\":4530:4562   */\n      slt\n        /* \"#utility.yul\":4527:4646   */\n      iszero\n      tag_547\n      jumpi\n        /* \"#utility.yul\":4565:4644   */\n      tag_548\n      tag_441\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":4527:4646   */\n    tag_547:\n        /* \"#utility.yul\":4685:4686   */\n      0x00\n        /* \"#utility.yul\":4710:4763   */\n      tag_549\n        /* \"#utility.yul\":4755:4762   */\n      dup6\n        /* \"#utility.yul\":4746:4752   */\n      dup3\n        /* \"#utility.yul\":4735:4744   */\n      dup7\n        /* \"#utility.yul\":4731:4753   */\n      add\n        /* \"#utility.yul\":4710:4763   */\n      tag_456\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":4700:4763   */\n      swap3\n      pop\n        /* \"#utility.yul\":4656:4773   */\n      pop\n        /* \"#utility.yul\":4812:4814   */\n      0x20\n        /* \"#utility.yul\":4838:4891   */\n      tag_550\n        /* \"#utility.yul\":4883:4890   */\n      dup6\n        /* \"#utility.yul\":4874:4880   */\n      dup3\n        /* \"#utility.yul\":4863:4872   */\n      dup7\n        /* \"#utility.yul\":4859:4881   */\n      add\n        /* \"#utility.yul\":4838:4891   */\n      tag_445\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":4828:4891   */\n      swap2\n      pop\n        /* \"#utility.yul\":4783:4901   */\n      pop\n        /* \"#utility.yul\":4434:4908   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4914:5004   */\n    tag_457:\n        /* \"#utility.yul\":4948:4955   */\n      0x00\n        /* \"#utility.yul\":4991:4996   */\n      dup2\n        /* \"#utility.yul\":4984:4997   */\n      iszero\n        /* \"#utility.yul\":4977:4998   */\n      iszero\n        /* \"#utility.yul\":4966:4998   */\n      swap1\n      pop\n        /* \"#utility.yul\":4914:5004   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5010:5119   */\n    tag_458:\n        /* \"#utility.yul\":5091:5112   */\n      tag_553\n        /* \"#utility.yul\":5106:5111   */\n      dup2\n        /* \"#utility.yul\":5091:5112   */\n      tag_457\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":5086:5089   */\n      dup3\n        /* \"#utility.yul\":5079:5113   */\n      mstore\n        /* \"#utility.yul\":5010:5119   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5125:5335   */\n    tag_63:\n        /* \"#utility.yul\":5212:5216   */\n      0x00\n        /* \"#utility.yul\":5250:5252   */\n      0x20\n        /* \"#utility.yul\":5239:5248   */\n      dup3\n        /* \"#utility.yul\":5235:5253   */\n      add\n        /* \"#utility.yul\":5227:5253   */\n      swap1\n      pop\n        /* \"#utility.yul\":5263:5328   */\n      tag_555\n        /* \"#utility.yul\":5325:5326   */\n      0x00\n        /* \"#utility.yul\":5314:5323   */\n      dup4\n        /* \"#utility.yul\":5310:5327   */\n      add\n        /* \"#utility.yul\":5301:5307   */\n      dup5\n        /* \"#utility.yul\":5263:5328   */\n      tag_458\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":5125:5335   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5341:5401   */\n    tag_459:\n        /* \"#utility.yul\":5369:5372   */\n      0x00\n        /* \"#utility.yul\":5390:5395   */\n      dup2\n        /* \"#utility.yul\":5383:5395   */\n      swap1\n      pop\n        /* \"#utility.yul\":5341:5401   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5407:5549   */\n    tag_460:\n        /* \"#utility.yul\":5457:5466   */\n      0x00\n        /* \"#utility.yul\":5490:5543   */\n      tag_558\n        /* \"#utility.yul\":5508:5542   */\n      tag_559\n        /* \"#utility.yul\":5517:5541   */\n      tag_560\n        /* \"#utility.yul\":5535:5540   */\n      dup5\n        /* \"#utility.yul\":5517:5541   */\n      tag_446\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":5508:5542   */\n      tag_459\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":5490:5543   */\n      tag_446\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":5477:5543   */\n      swap1\n      pop\n        /* \"#utility.yul\":5407:5549   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5555:5681   */\n    tag_461:\n        /* \"#utility.yul\":5605:5614   */\n      0x00\n        /* \"#utility.yul\":5638:5675   */\n      tag_562\n        /* \"#utility.yul\":5669:5674   */\n      dup3\n        /* \"#utility.yul\":5638:5675   */\n      tag_460\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":5625:5675   */\n      swap1\n      pop\n        /* \"#utility.yul\":5555:5681   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5687:5827   */\n    tag_462:\n        /* \"#utility.yul\":5751:5760   */\n      0x00\n        /* \"#utility.yul\":5784:5821   */\n      tag_564\n        /* \"#utility.yul\":5815:5820   */\n      dup3\n        /* \"#utility.yul\":5784:5821   */\n      tag_461\n      jump\t// in\n    tag_564:\n        /* \"#utility.yul\":5771:5821   */\n      swap1\n      pop\n        /* \"#utility.yul\":5687:5827   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5833:5992   */\n    tag_463:\n        /* \"#utility.yul\":5934:5985   */\n      tag_566\n        /* \"#utility.yul\":5979:5984   */\n      dup2\n        /* \"#utility.yul\":5934:5985   */\n      tag_462\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":5929:5932   */\n      dup3\n        /* \"#utility.yul\":5922:5986   */\n      mstore\n        /* \"#utility.yul\":5833:5992   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5998:6248   */\n    tag_73:\n        /* \"#utility.yul\":6105:6109   */\n      0x00\n        /* \"#utility.yul\":6143:6145   */\n      0x20\n        /* \"#utility.yul\":6132:6141   */\n      dup3\n        /* \"#utility.yul\":6128:6146   */\n      add\n        /* \"#utility.yul\":6120:6146   */\n      swap1\n      pop\n        /* \"#utility.yul\":6156:6241   */\n      tag_568\n        /* \"#utility.yul\":6238:6239   */\n      0x00\n        /* \"#utility.yul\":6227:6236   */\n      dup4\n        /* \"#utility.yul\":6223:6240   */\n      add\n        /* \"#utility.yul\":6214:6220   */\n      dup5\n        /* \"#utility.yul\":6156:6241   */\n      tag_463\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":5998:6248   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6254:6873   */\n    tag_79:\n        /* \"#utility.yul\":6331:6337   */\n      0x00\n        /* \"#utility.yul\":6339:6345   */\n      dup1\n        /* \"#utility.yul\":6347:6353   */\n      0x00\n        /* \"#utility.yul\":6396:6398   */\n      0x60\n        /* \"#utility.yul\":6384:6393   */\n      dup5\n        /* \"#utility.yul\":6375:6382   */\n      dup7\n        /* \"#utility.yul\":6371:6394   */\n      sub\n        /* \"#utility.yul\":6367:6399   */\n      slt\n        /* \"#utility.yul\":6364:6483   */\n      iszero\n      tag_570\n      jumpi\n        /* \"#utility.yul\":6402:6481   */\n      tag_571\n      tag_441\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":6364:6483   */\n    tag_570:\n        /* \"#utility.yul\":6522:6523   */\n      0x00\n        /* \"#utility.yul\":6547:6600   */\n      tag_572\n        /* \"#utility.yul\":6592:6599   */\n      dup7\n        /* \"#utility.yul\":6583:6589   */\n      dup3\n        /* \"#utility.yul\":6572:6581   */\n      dup8\n        /* \"#utility.yul\":6568:6590   */\n      add\n        /* \"#utility.yul\":6547:6600   */\n      tag_456\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":6537:6600   */\n      swap4\n      pop\n        /* \"#utility.yul\":6493:6610   */\n      pop\n        /* \"#utility.yul\":6649:6651   */\n      0x20\n        /* \"#utility.yul\":6675:6728   */\n      tag_573\n        /* \"#utility.yul\":6720:6727   */\n      dup7\n        /* \"#utility.yul\":6711:6717   */\n      dup3\n        /* \"#utility.yul\":6700:6709   */\n      dup8\n        /* \"#utility.yul\":6696:6718   */\n      add\n        /* \"#utility.yul\":6675:6728   */\n      tag_456\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":6665:6728   */\n      swap3\n      pop\n        /* \"#utility.yul\":6620:6738   */\n      pop\n        /* \"#utility.yul\":6777:6779   */\n      0x40\n        /* \"#utility.yul\":6803:6856   */\n      tag_574\n        /* \"#utility.yul\":6848:6855   */\n      dup7\n        /* \"#utility.yul\":6839:6845   */\n      dup3\n        /* \"#utility.yul\":6828:6837   */\n      dup8\n        /* \"#utility.yul\":6824:6846   */\n      add\n        /* \"#utility.yul\":6803:6856   */\n      tag_445\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":6793:6856   */\n      swap2\n      pop\n        /* \"#utility.yul\":6748:6866   */\n      pop\n        /* \"#utility.yul\":6254:6873   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":6879:7353   */\n    tag_84:\n        /* \"#utility.yul\":6947:6953   */\n      0x00\n        /* \"#utility.yul\":6955:6961   */\n      dup1\n        /* \"#utility.yul\":7004:7006   */\n      0x40\n        /* \"#utility.yul\":6992:7001   */\n      dup4\n        /* \"#utility.yul\":6983:6990   */\n      dup6\n        /* \"#utility.yul\":6979:7002   */\n      sub\n        /* \"#utility.yul\":6975:7007   */\n      slt\n        /* \"#utility.yul\":6972:7091   */\n      iszero\n      tag_576\n      jumpi\n        /* \"#utility.yul\":7010:7089   */\n      tag_577\n      tag_441\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":6972:7091   */\n    tag_576:\n        /* \"#utility.yul\":7130:7131   */\n      0x00\n        /* \"#utility.yul\":7155:7208   */\n      tag_578\n        /* \"#utility.yul\":7200:7207   */\n      dup6\n        /* \"#utility.yul\":7191:7197   */\n      dup3\n        /* \"#utility.yul\":7180:7189   */\n      dup7\n        /* \"#utility.yul\":7176:7198   */\n      add\n        /* \"#utility.yul\":7155:7208   */\n      tag_445\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":7145:7208   */\n      swap3\n      pop\n        /* \"#utility.yul\":7101:7218   */\n      pop\n        /* \"#utility.yul\":7257:7259   */\n      0x20\n        /* \"#utility.yul\":7283:7336   */\n      tag_579\n        /* \"#utility.yul\":7328:7335   */\n      dup6\n        /* \"#utility.yul\":7319:7325   */\n      dup3\n        /* \"#utility.yul\":7308:7317   */\n      dup7\n        /* \"#utility.yul\":7304:7326   */\n      add\n        /* \"#utility.yul\":7283:7336   */\n      tag_445\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":7273:7336   */\n      swap2\n      pop\n        /* \"#utility.yul\":7228:7346   */\n      pop\n        /* \"#utility.yul\":6879:7353   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7359:7445   */\n    tag_464:\n        /* \"#utility.yul\":7394:7401   */\n      0x00\n        /* \"#utility.yul\":7434:7438   */\n      0xff\n        /* \"#utility.yul\":7427:7432   */\n      dup3\n        /* \"#utility.yul\":7423:7439   */\n      and\n        /* \"#utility.yul\":7412:7439   */\n      swap1\n      pop\n        /* \"#utility.yul\":7359:7445   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7451:7563   */\n    tag_465:\n        /* \"#utility.yul\":7534:7556   */\n      tag_582\n        /* \"#utility.yul\":7550:7555   */\n      dup2\n        /* \"#utility.yul\":7534:7556   */\n      tag_464\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":7529:7532   */\n      dup3\n        /* \"#utility.yul\":7522:7557   */\n      mstore\n        /* \"#utility.yul\":7451:7563   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7569:7783   */\n    tag_90:\n        /* \"#utility.yul\":7658:7662   */\n      0x00\n        /* \"#utility.yul\":7696:7698   */\n      0x20\n        /* \"#utility.yul\":7685:7694   */\n      dup3\n        /* \"#utility.yul\":7681:7699   */\n      add\n        /* \"#utility.yul\":7673:7699   */\n      swap1\n      pop\n        /* \"#utility.yul\":7709:7776   */\n      tag_584\n        /* \"#utility.yul\":7773:7774   */\n      0x00\n        /* \"#utility.yul\":7762:7771   */\n      dup4\n        /* \"#utility.yul\":7758:7775   */\n      add\n        /* \"#utility.yul\":7749:7755   */\n      dup5\n        /* \"#utility.yul\":7709:7776   */\n      tag_465\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":7569:7783   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7789:8118   */\n    tag_96:\n        /* \"#utility.yul\":7848:7854   */\n      0x00\n        /* \"#utility.yul\":7897:7899   */\n      0x20\n        /* \"#utility.yul\":7885:7894   */\n      dup3\n        /* \"#utility.yul\":7876:7883   */\n      dup5\n        /* \"#utility.yul\":7872:7895   */\n      sub\n        /* \"#utility.yul\":7868:7900   */\n      slt\n        /* \"#utility.yul\":7865:7984   */\n      iszero\n      tag_586\n      jumpi\n        /* \"#utility.yul\":7903:7982   */\n      tag_587\n      tag_441\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":7865:7984   */\n    tag_586:\n        /* \"#utility.yul\":8023:8024   */\n      0x00\n        /* \"#utility.yul\":8048:8101   */\n      tag_588\n        /* \"#utility.yul\":8093:8100   */\n      dup5\n        /* \"#utility.yul\":8084:8090   */\n      dup3\n        /* \"#utility.yul\":8073:8082   */\n      dup6\n        /* \"#utility.yul\":8069:8091   */\n      add\n        /* \"#utility.yul\":8048:8101   */\n      tag_456\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":8038:8101   */\n      swap2\n      pop\n        /* \"#utility.yul\":7994:8111   */\n      pop\n        /* \"#utility.yul\":7789:8118   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8124:8598   */\n    tag_138:\n        /* \"#utility.yul\":8192:8198   */\n      0x00\n        /* \"#utility.yul\":8200:8206   */\n      dup1\n        /* \"#utility.yul\":8249:8251   */\n      0x40\n        /* \"#utility.yul\":8237:8246   */\n      dup4\n        /* \"#utility.yul\":8228:8235   */\n      dup6\n        /* \"#utility.yul\":8224:8247   */\n      sub\n        /* \"#utility.yul\":8220:8252   */\n      slt\n        /* \"#utility.yul\":8217:8336   */\n      iszero\n      tag_590\n      jumpi\n        /* \"#utility.yul\":8255:8334   */\n      tag_591\n      tag_441\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":8217:8336   */\n    tag_590:\n        /* \"#utility.yul\":8375:8376   */\n      0x00\n        /* \"#utility.yul\":8400:8453   */\n      tag_592\n        /* \"#utility.yul\":8445:8452   */\n      dup6\n        /* \"#utility.yul\":8436:8442   */\n      dup3\n        /* \"#utility.yul\":8425:8434   */\n      dup7\n        /* \"#utility.yul\":8421:8443   */\n      add\n        /* \"#utility.yul\":8400:8453   */\n      tag_456\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":8390:8453   */\n      swap3\n      pop\n        /* \"#utility.yul\":8346:8463   */\n      pop\n        /* \"#utility.yul\":8502:8504   */\n      0x20\n        /* \"#utility.yul\":8528:8581   */\n      tag_593\n        /* \"#utility.yul\":8573:8580   */\n      dup6\n        /* \"#utility.yul\":8564:8570   */\n      dup3\n        /* \"#utility.yul\":8553:8562   */\n      dup7\n        /* \"#utility.yul\":8549:8571   */\n      add\n        /* \"#utility.yul\":8528:8581   */\n      tag_456\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":8518:8581   */\n      swap2\n      pop\n        /* \"#utility.yul\":8473:8591   */\n      pop\n        /* \"#utility.yul\":8124:8598   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8604:8784   */\n    tag_466:\n        /* \"#utility.yul\":8652:8729   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8649:8650   */\n      0x00\n        /* \"#utility.yul\":8642:8730   */\n      mstore\n        /* \"#utility.yul\":8749:8753   */\n      0x11\n        /* \"#utility.yul\":8746:8747   */\n      0x04\n        /* \"#utility.yul\":8739:8754   */\n      mstore\n        /* \"#utility.yul\":8773:8777   */\n      0x24\n        /* \"#utility.yul\":8770:8771   */\n      0x00\n        /* \"#utility.yul\":8763:8778   */\n      revert\n        /* \"#utility.yul\":8790:8984   */\n    tag_152:\n        /* \"#utility.yul\":8830:8834   */\n      0x00\n        /* \"#utility.yul\":8850:8870   */\n      tag_596\n        /* \"#utility.yul\":8868:8869   */\n      dup3\n        /* \"#utility.yul\":8850:8870   */\n      tag_443\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":8845:8870   */\n      swap2\n      pop\n        /* \"#utility.yul\":8884:8904   */\n      tag_597\n        /* \"#utility.yul\":8902:8903   */\n      dup4\n        /* \"#utility.yul\":8884:8904   */\n      tag_443\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":8879:8904   */\n      swap3\n      pop\n        /* \"#utility.yul\":8928:8929   */\n      dup3\n        /* \"#utility.yul\":8925:8926   */\n      dup3\n        /* \"#utility.yul\":8921:8930   */\n      sub\n        /* \"#utility.yul\":8913:8930   */\n      swap1\n      pop\n        /* \"#utility.yul\":8952:8953   */\n      dup2\n        /* \"#utility.yul\":8946:8950   */\n      dup2\n        /* \"#utility.yul\":8943:8954   */\n      gt\n        /* \"#utility.yul\":8940:8977   */\n      iszero\n      tag_598\n      jumpi\n        /* \"#utility.yul\":8957:8975   */\n      tag_599\n      tag_466\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":8940:8977   */\n    tag_598:\n        /* \"#utility.yul\":8790:8984   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8990:9400   */\n    tag_154:\n        /* \"#utility.yul\":9030:9037   */\n      0x00\n        /* \"#utility.yul\":9053:9073   */\n      tag_601\n        /* \"#utility.yul\":9071:9072   */\n      dup3\n        /* \"#utility.yul\":9053:9073   */\n      tag_443\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":9048:9073   */\n      swap2\n      pop\n        /* \"#utility.yul\":9087:9107   */\n      tag_602\n        /* \"#utility.yul\":9105:9106   */\n      dup4\n        /* \"#utility.yul\":9087:9107   */\n      tag_443\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":9082:9107   */\n      swap3\n      pop\n        /* \"#utility.yul\":9142:9143   */\n      dup3\n        /* \"#utility.yul\":9139:9140   */\n      dup3\n        /* \"#utility.yul\":9135:9144   */\n      mul\n        /* \"#utility.yul\":9164:9194   */\n      tag_603\n        /* \"#utility.yul\":9182:9193   */\n      dup2\n        /* \"#utility.yul\":9164:9194   */\n      tag_443\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":9153:9194   */\n      swap2\n      pop\n        /* \"#utility.yul\":9343:9344   */\n      dup3\n        /* \"#utility.yul\":9334:9341   */\n      dup3\n        /* \"#utility.yul\":9330:9345   */\n      div\n        /* \"#utility.yul\":9327:9328   */\n      dup5\n        /* \"#utility.yul\":9324:9346   */\n      eq\n        /* \"#utility.yul\":9304:9305   */\n      dup4\n        /* \"#utility.yul\":9297:9306   */\n      iszero\n        /* \"#utility.yul\":9277:9360   */\n      or\n        /* \"#utility.yul\":9254:9393   */\n      tag_604\n      jumpi\n        /* \"#utility.yul\":9373:9391   */\n      tag_605\n      tag_466\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":9254:9393   */\n    tag_604:\n        /* \"#utility.yul\":9038:9400   */\n      pop\n        /* \"#utility.yul\":8990:9400   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9406:9597   */\n    tag_158:\n        /* \"#utility.yul\":9446:9449   */\n      0x00\n        /* \"#utility.yul\":9465:9485   */\n      tag_607\n        /* \"#utility.yul\":9483:9484   */\n      dup3\n        /* \"#utility.yul\":9465:9485   */\n      tag_443\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":9460:9485   */\n      swap2\n      pop\n        /* \"#utility.yul\":9499:9519   */\n      tag_608\n        /* \"#utility.yul\":9517:9518   */\n      dup4\n        /* \"#utility.yul\":9499:9519   */\n      tag_443\n      jump\t// in\n    tag_608:\n        /* \"#utility.yul\":9494:9519   */\n      swap3\n      pop\n        /* \"#utility.yul\":9542:9543   */\n      dup3\n        /* \"#utility.yul\":9539:9540   */\n      dup3\n        /* \"#utility.yul\":9535:9544   */\n      add\n        /* \"#utility.yul\":9528:9544   */\n      swap1\n      pop\n        /* \"#utility.yul\":9563:9566   */\n      dup1\n        /* \"#utility.yul\":9560:9561   */\n      dup3\n        /* \"#utility.yul\":9557:9567   */\n      gt\n        /* \"#utility.yul\":9554:9590   */\n      iszero\n      tag_609\n      jumpi\n        /* \"#utility.yul\":9570:9588   */\n      tag_610\n      tag_466\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":9554:9590   */\n    tag_609:\n        /* \"#utility.yul\":9406:9597   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9603:9783   */\n    tag_467:\n        /* \"#utility.yul\":9651:9728   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9648:9649   */\n      0x00\n        /* \"#utility.yul\":9641:9729   */\n      mstore\n        /* \"#utility.yul\":9748:9752   */\n      0x12\n        /* \"#utility.yul\":9745:9746   */\n      0x04\n        /* \"#utility.yul\":9738:9753   */\n      mstore\n        /* \"#utility.yul\":9772:9776   */\n      0x24\n        /* \"#utility.yul\":9769:9770   */\n      0x00\n        /* \"#utility.yul\":9762:9777   */\n      revert\n        /* \"#utility.yul\":9789:9974   */\n    tag_160:\n        /* \"#utility.yul\":9829:9830   */\n      0x00\n        /* \"#utility.yul\":9846:9866   */\n      tag_613\n        /* \"#utility.yul\":9864:9865   */\n      dup3\n        /* \"#utility.yul\":9846:9866   */\n      tag_443\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":9841:9866   */\n      swap2\n      pop\n        /* \"#utility.yul\":9880:9900   */\n      tag_614\n        /* \"#utility.yul\":9898:9899   */\n      dup4\n        /* \"#utility.yul\":9880:9900   */\n      tag_443\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":9875:9900   */\n      swap3\n      pop\n        /* \"#utility.yul\":9919:9920   */\n      dup3\n        /* \"#utility.yul\":9909:9944   */\n      tag_615\n      jumpi\n        /* \"#utility.yul\":9924:9942   */\n      tag_616\n      tag_467\n      jump\t// in\n    tag_616:\n        /* \"#utility.yul\":9909:9944   */\n    tag_615:\n        /* \"#utility.yul\":9966:9967   */\n      dup3\n        /* \"#utility.yul\":9963:9964   */\n      dup3\n        /* \"#utility.yul\":9959:9968   */\n      div\n        /* \"#utility.yul\":9954:9968   */\n      swap1\n      pop\n        /* \"#utility.yul\":9789:9974   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9980:10160   */\n    tag_468:\n        /* \"#utility.yul\":10028:10105   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10025:10026   */\n      0x00\n        /* \"#utility.yul\":10018:10106   */\n      mstore\n        /* \"#utility.yul\":10125:10129   */\n      0x22\n        /* \"#utility.yul\":10122:10123   */\n      0x04\n        /* \"#utility.yul\":10115:10130   */\n      mstore\n        /* \"#utility.yul\":10149:10153   */\n      0x24\n        /* \"#utility.yul\":10146:10147   */\n      0x00\n        /* \"#utility.yul\":10139:10154   */\n      revert\n        /* \"#utility.yul\":10166:10486   */\n    tag_163:\n        /* \"#utility.yul\":10210:10216   */\n      0x00\n        /* \"#utility.yul\":10247:10248   */\n      0x02\n        /* \"#utility.yul\":10241:10245   */\n      dup3\n        /* \"#utility.yul\":10237:10249   */\n      div\n        /* \"#utility.yul\":10227:10249   */\n      swap1\n      pop\n        /* \"#utility.yul\":10294:10295   */\n      0x01\n        /* \"#utility.yul\":10288:10292   */\n      dup3\n        /* \"#utility.yul\":10284:10296   */\n      and\n        /* \"#utility.yul\":10315:10333   */\n      dup1\n        /* \"#utility.yul\":10305:10386   */\n      tag_619\n      jumpi\n        /* \"#utility.yul\":10371:10375   */\n      0x7f\n        /* \"#utility.yul\":10363:10369   */\n      dup3\n        /* \"#utility.yul\":10359:10376   */\n      and\n        /* \"#utility.yul\":10349:10376   */\n      swap2\n      pop\n        /* \"#utility.yul\":10305:10386   */\n    tag_619:\n        /* \"#utility.yul\":10433:10435   */\n      0x20\n        /* \"#utility.yul\":10425:10431   */\n      dup3\n        /* \"#utility.yul\":10422:10436   */\n      lt\n        /* \"#utility.yul\":10402:10420   */\n      dup2\n        /* \"#utility.yul\":10399:10437   */\n      sub\n        /* \"#utility.yul\":10396:10480   */\n      tag_620\n      jumpi\n        /* \"#utility.yul\":10452:10470   */\n      tag_621\n      tag_468\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":10396:10480   */\n    tag_620:\n        /* \"#utility.yul\":10217:10486   */\n      pop\n        /* \"#utility.yul\":10166:10486   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10492:10667   */\n    tag_469:\n        /* \"#utility.yul\":10632:10659   */\n      0x414d4d3a20496e76616c696420696e70757420616d6f756e7400000000000000\n        /* \"#utility.yul\":10628:10629   */\n      0x00\n        /* \"#utility.yul\":10620:10626   */\n      dup3\n        /* \"#utility.yul\":10616:10630   */\n      add\n        /* \"#utility.yul\":10609:10660   */\n      mstore\n        /* \"#utility.yul\":10492:10667   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10673:11039   */\n    tag_470:\n        /* \"#utility.yul\":10815:10818   */\n      0x00\n        /* \"#utility.yul\":10836:10903   */\n      tag_624\n        /* \"#utility.yul\":10900:10902   */\n      0x19\n        /* \"#utility.yul\":10895:10898   */\n      dup4\n        /* \"#utility.yul\":10836:10903   */\n      tag_451\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":10829:10903   */\n      swap2\n      pop\n        /* \"#utility.yul\":10912:11005   */\n      tag_625\n        /* \"#utility.yul\":11001:11004   */\n      dup3\n        /* \"#utility.yul\":10912:11005   */\n      tag_469\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":11030:11032   */\n      0x20\n        /* \"#utility.yul\":11025:11028   */\n      dup3\n        /* \"#utility.yul\":11021:11033   */\n      add\n        /* \"#utility.yul\":11014:11033   */\n      swap1\n      pop\n        /* \"#utility.yul\":10673:11039   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11045:11464   */\n    tag_187:\n        /* \"#utility.yul\":11211:11215   */\n      0x00\n        /* \"#utility.yul\":11249:11251   */\n      0x20\n        /* \"#utility.yul\":11238:11247   */\n      dup3\n        /* \"#utility.yul\":11234:11252   */\n      add\n        /* \"#utility.yul\":11226:11252   */\n      swap1\n      pop\n        /* \"#utility.yul\":11298:11307   */\n      dup2\n        /* \"#utility.yul\":11292:11296   */\n      dup2\n        /* \"#utility.yul\":11288:11308   */\n      sub\n        /* \"#utility.yul\":11284:11285   */\n      0x00\n        /* \"#utility.yul\":11273:11282   */\n      dup4\n        /* \"#utility.yul\":11269:11286   */\n      add\n        /* \"#utility.yul\":11262:11309   */\n      mstore\n        /* \"#utility.yul\":11326:11457   */\n      tag_627\n        /* \"#utility.yul\":11452:11456   */\n      dup2\n        /* \"#utility.yul\":11326:11457   */\n      tag_470\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":11318:11457   */\n      swap1\n      pop\n        /* \"#utility.yul\":11045:11464   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11470:11651   */\n    tag_471:\n        /* \"#utility.yul\":11610:11643   */\n      0x414d4d3a20496e73756666696369656e74206f757470757420616d6f756e7400\n        /* \"#utility.yul\":11606:11607   */\n      0x00\n        /* \"#utility.yul\":11598:11604   */\n      dup3\n        /* \"#utility.yul\":11594:11608   */\n      add\n        /* \"#utility.yul\":11587:11644   */\n      mstore\n        /* \"#utility.yul\":11470:11651   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11657:12023   */\n    tag_472:\n        /* \"#utility.yul\":11799:11802   */\n      0x00\n        /* \"#utility.yul\":11820:11887   */\n      tag_630\n        /* \"#utility.yul\":11884:11886   */\n      0x1f\n        /* \"#utility.yul\":11879:11882   */\n      dup4\n        /* \"#utility.yul\":11820:11887   */\n      tag_451\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":11813:11887   */\n      swap2\n      pop\n        /* \"#utility.yul\":11896:11989   */\n      tag_631\n        /* \"#utility.yul\":11985:11988   */\n      dup3\n        /* \"#utility.yul\":11896:11989   */\n      tag_471\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":12014:12016   */\n      0x20\n        /* \"#utility.yul\":12009:12012   */\n      dup3\n        /* \"#utility.yul\":12005:12017   */\n      add\n        /* \"#utility.yul\":11998:12017   */\n      swap1\n      pop\n        /* \"#utility.yul\":11657:12023   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12029:12448   */\n    tag_191:\n        /* \"#utility.yul\":12195:12199   */\n      0x00\n        /* \"#utility.yul\":12233:12235   */\n      0x20\n        /* \"#utility.yul\":12222:12231   */\n      dup3\n        /* \"#utility.yul\":12218:12236   */\n      add\n        /* \"#utility.yul\":12210:12236   */\n      swap1\n      pop\n        /* \"#utility.yul\":12282:12291   */\n      dup2\n        /* \"#utility.yul\":12276:12280   */\n      dup2\n        /* \"#utility.yul\":12272:12292   */\n      sub\n        /* \"#utility.yul\":12268:12269   */\n      0x00\n        /* \"#utility.yul\":12257:12266   */\n      dup4\n        /* \"#utility.yul\":12253:12270   */\n      add\n        /* \"#utility.yul\":12246:12293   */\n      mstore\n        /* \"#utility.yul\":12310:12441   */\n      tag_633\n        /* \"#utility.yul\":12436:12440   */\n      dup2\n        /* \"#utility.yul\":12310:12441   */\n      tag_472\n      jump\t// in\n    tag_633:\n        /* \"#utility.yul\":12302:12441   */\n      swap1\n      pop\n        /* \"#utility.yul\":12029:12448   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12454:13007   */\n    tag_201:\n        /* \"#utility.yul\":12631:12635   */\n      0x00\n        /* \"#utility.yul\":12669:12672   */\n      0x80\n        /* \"#utility.yul\":12658:12667   */\n      dup3\n        /* \"#utility.yul\":12654:12673   */\n      add\n        /* \"#utility.yul\":12646:12673   */\n      swap1\n      pop\n        /* \"#utility.yul\":12683:12754   */\n      tag_635\n        /* \"#utility.yul\":12751:12752   */\n      0x00\n        /* \"#utility.yul\":12740:12749   */\n      dup4\n        /* \"#utility.yul\":12736:12753   */\n      add\n        /* \"#utility.yul\":12727:12733   */\n      dup8\n        /* \"#utility.yul\":12683:12754   */\n      tag_449\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":12764:12836   */\n      tag_636\n        /* \"#utility.yul\":12832:12834   */\n      0x20\n        /* \"#utility.yul\":12821:12830   */\n      dup4\n        /* \"#utility.yul\":12817:12835   */\n      add\n        /* \"#utility.yul\":12808:12814   */\n      dup7\n        /* \"#utility.yul\":12764:12836   */\n      tag_449\n      jump\t// in\n    tag_636:\n        /* \"#utility.yul\":12846:12918   */\n      tag_637\n        /* \"#utility.yul\":12914:12916   */\n      0x40\n        /* \"#utility.yul\":12903:12912   */\n      dup4\n        /* \"#utility.yul\":12899:12917   */\n      add\n        /* \"#utility.yul\":12890:12896   */\n      dup6\n        /* \"#utility.yul\":12846:12918   */\n      tag_448\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":12928:13000   */\n      tag_638\n        /* \"#utility.yul\":12996:12998   */\n      0x60\n        /* \"#utility.yul\":12985:12994   */\n      dup4\n        /* \"#utility.yul\":12981:12999   */\n      add\n        /* \"#utility.yul\":12972:12978   */\n      dup5\n        /* \"#utility.yul\":12928:13000   */\n      tag_448\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":12454:13007   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13013:13192   */\n    tag_473:\n        /* \"#utility.yul\":13153:13184   */\n      0x414d4d3a2063616c6c6572206973206e6f74206120676f7665726e6f72000000\n        /* \"#utility.yul\":13149:13150   */\n      0x00\n        /* \"#utility.yul\":13141:13147   */\n      dup3\n        /* \"#utility.yul\":13137:13151   */\n      add\n        /* \"#utility.yul\":13130:13185   */\n      mstore\n        /* \"#utility.yul\":13013:13192   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13198:13564   */\n    tag_474:\n        /* \"#utility.yul\":13340:13343   */\n      0x00\n        /* \"#utility.yul\":13361:13428   */\n      tag_641\n        /* \"#utility.yul\":13425:13427   */\n      0x1d\n        /* \"#utility.yul\":13420:13423   */\n      dup4\n        /* \"#utility.yul\":13361:13428   */\n      tag_451\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":13354:13428   */\n      swap2\n      pop\n        /* \"#utility.yul\":13437:13530   */\n      tag_642\n        /* \"#utility.yul\":13526:13529   */\n      dup3\n        /* \"#utility.yul\":13437:13530   */\n      tag_473\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":13555:13557   */\n      0x20\n        /* \"#utility.yul\":13550:13553   */\n      dup3\n        /* \"#utility.yul\":13546:13558   */\n      add\n        /* \"#utility.yul\":13539:13558   */\n      swap1\n      pop\n        /* \"#utility.yul\":13198:13564   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13570:13989   */\n    tag_208:\n        /* \"#utility.yul\":13736:13740   */\n      0x00\n        /* \"#utility.yul\":13774:13776   */\n      0x20\n        /* \"#utility.yul\":13763:13772   */\n      dup3\n        /* \"#utility.yul\":13759:13777   */\n      add\n        /* \"#utility.yul\":13751:13777   */\n      swap1\n      pop\n        /* \"#utility.yul\":13823:13832   */\n      dup2\n        /* \"#utility.yul\":13817:13821   */\n      dup2\n        /* \"#utility.yul\":13813:13833   */\n      sub\n        /* \"#utility.yul\":13809:13810   */\n      0x00\n        /* \"#utility.yul\":13798:13807   */\n      dup4\n        /* \"#utility.yul\":13794:13811   */\n      add\n        /* \"#utility.yul\":13787:13834   */\n      mstore\n        /* \"#utility.yul\":13851:13982   */\n      tag_644\n        /* \"#utility.yul\":13977:13981   */\n      dup2\n        /* \"#utility.yul\":13851:13982   */\n      tag_474\n      jump\t// in\n    tag_644:\n        /* \"#utility.yul\":13843:13982   */\n      swap1\n      pop\n        /* \"#utility.yul\":13570:13989   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13995:14174   */\n    tag_475:\n        /* \"#utility.yul\":14135:14166   */\n      0x414d4d3a20496e76616c696420676f7665726e6f722061646472657373000000\n        /* \"#utility.yul\":14131:14132   */\n      0x00\n        /* \"#utility.yul\":14123:14129   */\n      dup3\n        /* \"#utility.yul\":14119:14133   */\n      add\n        /* \"#utility.yul\":14112:14167   */\n      mstore\n        /* \"#utility.yul\":13995:14174   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14180:14546   */\n    tag_476:\n        /* \"#utility.yul\":14322:14325   */\n      0x00\n        /* \"#utility.yul\":14343:14410   */\n      tag_647\n        /* \"#utility.yul\":14407:14409   */\n      0x1d\n        /* \"#utility.yul\":14402:14405   */\n      dup4\n        /* \"#utility.yul\":14343:14410   */\n      tag_451\n      jump\t// in\n    tag_647:\n        /* \"#utility.yul\":14336:14410   */\n      swap2\n      pop\n        /* \"#utility.yul\":14419:14512   */\n      tag_648\n        /* \"#utility.yul\":14508:14511   */\n      dup3\n        /* \"#utility.yul\":14419:14512   */\n      tag_475\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":14537:14539   */\n      0x20\n        /* \"#utility.yul\":14532:14535   */\n      dup3\n        /* \"#utility.yul\":14528:14540   */\n      add\n        /* \"#utility.yul\":14521:14540   */\n      swap1\n      pop\n        /* \"#utility.yul\":14180:14546   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14552:14971   */\n    tag_212:\n        /* \"#utility.yul\":14718:14722   */\n      0x00\n        /* \"#utility.yul\":14756:14758   */\n      0x20\n        /* \"#utility.yul\":14745:14754   */\n      dup3\n        /* \"#utility.yul\":14741:14759   */\n      add\n        /* \"#utility.yul\":14733:14759   */\n      swap1\n      pop\n        /* \"#utility.yul\":14805:14814   */\n      dup2\n        /* \"#utility.yul\":14799:14803   */\n      dup2\n        /* \"#utility.yul\":14795:14815   */\n      sub\n        /* \"#utility.yul\":14791:14792   */\n      0x00\n        /* \"#utility.yul\":14780:14789   */\n      dup4\n        /* \"#utility.yul\":14776:14793   */\n      add\n        /* \"#utility.yul\":14769:14816   */\n      mstore\n        /* \"#utility.yul\":14833:14964   */\n      tag_650\n        /* \"#utility.yul\":14959:14963   */\n      dup2\n        /* \"#utility.yul\":14833:14964   */\n      tag_476\n      jump\t// in\n    tag_650:\n        /* \"#utility.yul\":14825:14964   */\n      swap1\n      pop\n        /* \"#utility.yul\":14552:14971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14977:15150   */\n    tag_477:\n        /* \"#utility.yul\":15117:15142   */\n      0x414d4d3a20416c7265616479206120676f7665726e6f72000000000000000000\n        /* \"#utility.yul\":15113:15114   */\n      0x00\n        /* \"#utility.yul\":15105:15111   */\n      dup3\n        /* \"#utility.yul\":15101:15115   */\n      add\n        /* \"#utility.yul\":15094:15143   */\n      mstore\n        /* \"#utility.yul\":14977:15150   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15156:15522   */\n    tag_478:\n        /* \"#utility.yul\":15298:15301   */\n      0x00\n        /* \"#utility.yul\":15319:15386   */\n      tag_653\n        /* \"#utility.yul\":15383:15385   */\n      0x17\n        /* \"#utility.yul\":15378:15381   */\n      dup4\n        /* \"#utility.yul\":15319:15386   */\n      tag_451\n      jump\t// in\n    tag_653:\n        /* \"#utility.yul\":15312:15386   */\n      swap2\n      pop\n        /* \"#utility.yul\":15395:15488   */\n      tag_654\n        /* \"#utility.yul\":15484:15487   */\n      dup3\n        /* \"#utility.yul\":15395:15488   */\n      tag_477\n      jump\t// in\n    tag_654:\n        /* \"#utility.yul\":15513:15515   */\n      0x20\n        /* \"#utility.yul\":15508:15511   */\n      dup3\n        /* \"#utility.yul\":15504:15516   */\n      add\n        /* \"#utility.yul\":15497:15516   */\n      swap1\n      pop\n        /* \"#utility.yul\":15156:15522   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15528:15947   */\n    tag_215:\n        /* \"#utility.yul\":15694:15698   */\n      0x00\n        /* \"#utility.yul\":15732:15734   */\n      0x20\n        /* \"#utility.yul\":15721:15730   */\n      dup3\n        /* \"#utility.yul\":15717:15735   */\n      add\n        /* \"#utility.yul\":15709:15735   */\n      swap1\n      pop\n        /* \"#utility.yul\":15781:15790   */\n      dup2\n        /* \"#utility.yul\":15775:15779   */\n      dup2\n        /* \"#utility.yul\":15771:15791   */\n      sub\n        /* \"#utility.yul\":15767:15768   */\n      0x00\n        /* \"#utility.yul\":15756:15765   */\n      dup4\n        /* \"#utility.yul\":15752:15769   */\n      add\n        /* \"#utility.yul\":15745:15792   */\n      mstore\n        /* \"#utility.yul\":15809:15940   */\n      tag_656\n        /* \"#utility.yul\":15935:15939   */\n      dup2\n        /* \"#utility.yul\":15809:15940   */\n      tag_478\n      jump\t// in\n    tag_656:\n        /* \"#utility.yul\":15801:15940   */\n      swap1\n      pop\n        /* \"#utility.yul\":15528:15947   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15953:16119   */\n    tag_479:\n        /* \"#utility.yul\":16093:16111   */\n      0x414d4d3a20496e76616c69642066656500000000000000000000000000000000\n        /* \"#utility.yul\":16089:16090   */\n      0x00\n        /* \"#utility.yul\":16081:16087   */\n      dup3\n        /* \"#utility.yul\":16077:16091   */\n      add\n        /* \"#utility.yul\":16070:16112   */\n      mstore\n        /* \"#utility.yul\":15953:16119   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16125:16491   */\n    tag_480:\n        /* \"#utility.yul\":16267:16270   */\n      0x00\n        /* \"#utility.yul\":16288:16355   */\n      tag_659\n        /* \"#utility.yul\":16352:16354   */\n      0x10\n        /* \"#utility.yul\":16347:16350   */\n      dup4\n        /* \"#utility.yul\":16288:16355   */\n      tag_451\n      jump\t// in\n    tag_659:\n        /* \"#utility.yul\":16281:16355   */\n      swap2\n      pop\n        /* \"#utility.yul\":16364:16457   */\n      tag_660\n        /* \"#utility.yul\":16453:16456   */\n      dup3\n        /* \"#utility.yul\":16364:16457   */\n      tag_479\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":16482:16484   */\n      0x20\n        /* \"#utility.yul\":16477:16480   */\n      dup3\n        /* \"#utility.yul\":16473:16485   */\n      add\n        /* \"#utility.yul\":16466:16485   */\n      swap1\n      pop\n        /* \"#utility.yul\":16125:16491   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16497:16916   */\n    tag_223:\n        /* \"#utility.yul\":16663:16667   */\n      0x00\n        /* \"#utility.yul\":16701:16703   */\n      0x20\n        /* \"#utility.yul\":16690:16699   */\n      dup3\n        /* \"#utility.yul\":16686:16704   */\n      add\n        /* \"#utility.yul\":16678:16704   */\n      swap1\n      pop\n        /* \"#utility.yul\":16750:16759   */\n      dup2\n        /* \"#utility.yul\":16744:16748   */\n      dup2\n        /* \"#utility.yul\":16740:16760   */\n      sub\n        /* \"#utility.yul\":16736:16737   */\n      0x00\n        /* \"#utility.yul\":16725:16734   */\n      dup4\n        /* \"#utility.yul\":16721:16738   */\n      add\n        /* \"#utility.yul\":16714:16761   */\n      mstore\n        /* \"#utility.yul\":16778:16909   */\n      tag_662\n        /* \"#utility.yul\":16904:16908   */\n      dup2\n        /* \"#utility.yul\":16778:16909   */\n      tag_480\n      jump\t// in\n    tag_662:\n        /* \"#utility.yul\":16770:16909   */\n      swap1\n      pop\n        /* \"#utility.yul\":16497:16916   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16922:17101   */\n    tag_481:\n        /* \"#utility.yul\":17062:17093   */\n      0x414d4d3a20496e76616c6964206c697175696469747920616d6f756e74000000\n        /* \"#utility.yul\":17058:17059   */\n      0x00\n        /* \"#utility.yul\":17050:17056   */\n      dup3\n        /* \"#utility.yul\":17046:17060   */\n      add\n        /* \"#utility.yul\":17039:17094   */\n      mstore\n        /* \"#utility.yul\":16922:17101   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17107:17473   */\n    tag_482:\n        /* \"#utility.yul\":17249:17252   */\n      0x00\n        /* \"#utility.yul\":17270:17337   */\n      tag_665\n        /* \"#utility.yul\":17334:17336   */\n      0x1d\n        /* \"#utility.yul\":17329:17332   */\n      dup4\n        /* \"#utility.yul\":17270:17337   */\n      tag_451\n      jump\t// in\n    tag_665:\n        /* \"#utility.yul\":17263:17337   */\n      swap2\n      pop\n        /* \"#utility.yul\":17346:17439   */\n      tag_666\n        /* \"#utility.yul\":17435:17438   */\n      dup3\n        /* \"#utility.yul\":17346:17439   */\n      tag_481\n      jump\t// in\n    tag_666:\n        /* \"#utility.yul\":17464:17466   */\n      0x20\n        /* \"#utility.yul\":17459:17462   */\n      dup3\n        /* \"#utility.yul\":17455:17467   */\n      add\n        /* \"#utility.yul\":17448:17467   */\n      swap1\n      pop\n        /* \"#utility.yul\":17107:17473   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17479:17898   */\n    tag_237:\n        /* \"#utility.yul\":17645:17649   */\n      0x00\n        /* \"#utility.yul\":17683:17685   */\n      0x20\n        /* \"#utility.yul\":17672:17681   */\n      dup3\n        /* \"#utility.yul\":17668:17686   */\n      add\n        /* \"#utility.yul\":17660:17686   */\n      swap1\n      pop\n        /* \"#utility.yul\":17732:17741   */\n      dup2\n        /* \"#utility.yul\":17726:17730   */\n      dup2\n        /* \"#utility.yul\":17722:17742   */\n      sub\n        /* \"#utility.yul\":17718:17719   */\n      0x00\n        /* \"#utility.yul\":17707:17716   */\n      dup4\n        /* \"#utility.yul\":17703:17720   */\n      add\n        /* \"#utility.yul\":17696:17743   */\n      mstore\n        /* \"#utility.yul\":17760:17891   */\n      tag_668\n        /* \"#utility.yul\":17886:17890   */\n      dup2\n        /* \"#utility.yul\":17760:17891   */\n      tag_482\n      jump\t// in\n    tag_668:\n        /* \"#utility.yul\":17752:17891   */\n      swap1\n      pop\n        /* \"#utility.yul\":17479:17898   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17904:18346   */\n    tag_250:\n        /* \"#utility.yul\":18053:18057   */\n      0x00\n        /* \"#utility.yul\":18091:18093   */\n      0x60\n        /* \"#utility.yul\":18080:18089   */\n      dup3\n        /* \"#utility.yul\":18076:18094   */\n      add\n        /* \"#utility.yul\":18068:18094   */\n      swap1\n      pop\n        /* \"#utility.yul\":18104:18175   */\n      tag_670\n        /* \"#utility.yul\":18172:18173   */\n      0x00\n        /* \"#utility.yul\":18161:18170   */\n      dup4\n        /* \"#utility.yul\":18157:18174   */\n      add\n        /* \"#utility.yul\":18148:18154   */\n      dup7\n        /* \"#utility.yul\":18104:18175   */\n      tag_449\n      jump\t// in\n    tag_670:\n        /* \"#utility.yul\":18185:18257   */\n      tag_671\n        /* \"#utility.yul\":18253:18255   */\n      0x20\n        /* \"#utility.yul\":18242:18251   */\n      dup4\n        /* \"#utility.yul\":18238:18256   */\n      add\n        /* \"#utility.yul\":18229:18235   */\n      dup6\n        /* \"#utility.yul\":18185:18257   */\n      tag_449\n      jump\t// in\n    tag_671:\n        /* \"#utility.yul\":18267:18339   */\n      tag_672\n        /* \"#utility.yul\":18335:18337   */\n      0x40\n        /* \"#utility.yul\":18324:18333   */\n      dup4\n        /* \"#utility.yul\":18320:18338   */\n      add\n        /* \"#utility.yul\":18311:18317   */\n      dup5\n        /* \"#utility.yul\":18267:18339   */\n      tag_449\n      jump\t// in\n    tag_672:\n        /* \"#utility.yul\":17904:18346   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18352:18573   */\n    tag_483:\n        /* \"#utility.yul\":18492:18526   */\n      0x414d4d3a20556e62616c616e636564206c69717569646974792070726f766964\n        /* \"#utility.yul\":18488:18489   */\n      0x00\n        /* \"#utility.yul\":18480:18486   */\n      dup3\n        /* \"#utility.yul\":18476:18490   */\n      add\n        /* \"#utility.yul\":18469:18527   */\n      mstore\n        /* \"#utility.yul\":18561:18565   */\n      0x6564000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":18556:18558   */\n      0x20\n        /* \"#utility.yul\":18548:18554   */\n      dup3\n        /* \"#utility.yul\":18544:18559   */\n      add\n        /* \"#utility.yul\":18537:18566   */\n      mstore\n        /* \"#utility.yul\":18352:18573   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18579:18945   */\n    tag_484:\n        /* \"#utility.yul\":18721:18724   */\n      0x00\n        /* \"#utility.yul\":18742:18809   */\n      tag_675\n        /* \"#utility.yul\":18806:18808   */\n      0x22\n        /* \"#utility.yul\":18801:18804   */\n      dup4\n        /* \"#utility.yul\":18742:18809   */\n      tag_451\n      jump\t// in\n    tag_675:\n        /* \"#utility.yul\":18735:18809   */\n      swap2\n      pop\n        /* \"#utility.yul\":18818:18911   */\n      tag_676\n        /* \"#utility.yul\":18907:18910   */\n      dup3\n        /* \"#utility.yul\":18818:18911   */\n      tag_483\n      jump\t// in\n    tag_676:\n        /* \"#utility.yul\":18936:18938   */\n      0x40\n        /* \"#utility.yul\":18931:18934   */\n      dup3\n        /* \"#utility.yul\":18927:18939   */\n      add\n        /* \"#utility.yul\":18920:18939   */\n      swap1\n      pop\n        /* \"#utility.yul\":18579:18945   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18951:19370   */\n    tag_263:\n        /* \"#utility.yul\":19117:19121   */\n      0x00\n        /* \"#utility.yul\":19155:19157   */\n      0x20\n        /* \"#utility.yul\":19144:19153   */\n      dup3\n        /* \"#utility.yul\":19140:19158   */\n      add\n        /* \"#utility.yul\":19132:19158   */\n      swap1\n      pop\n        /* \"#utility.yul\":19204:19213   */\n      dup2\n        /* \"#utility.yul\":19198:19202   */\n      dup2\n        /* \"#utility.yul\":19194:19214   */\n      sub\n        /* \"#utility.yul\":19190:19191   */\n      0x00\n        /* \"#utility.yul\":19179:19188   */\n      dup4\n        /* \"#utility.yul\":19175:19192   */\n      add\n        /* \"#utility.yul\":19168:19215   */\n      mstore\n        /* \"#utility.yul\":19232:19363   */\n      tag_678\n        /* \"#utility.yul\":19358:19362   */\n      dup2\n        /* \"#utility.yul\":19232:19363   */\n      tag_484\n      jump\t// in\n    tag_678:\n        /* \"#utility.yul\":19224:19363   */\n      swap1\n      pop\n        /* \"#utility.yul\":18951:19370   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19376:19599   */\n    tag_485:\n        /* \"#utility.yul\":19516:19550   */\n      0x414d4d3a20496e73756666696369656e74206c69717569646974792070726f76\n        /* \"#utility.yul\":19512:19513   */\n      0x00\n        /* \"#utility.yul\":19504:19510   */\n      dup3\n        /* \"#utility.yul\":19500:19514   */\n      add\n        /* \"#utility.yul\":19493:19551   */\n      mstore\n        /* \"#utility.yul\":19585:19591   */\n      0x6964656400000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":19580:19582   */\n      0x20\n        /* \"#utility.yul\":19572:19578   */\n      dup3\n        /* \"#utility.yul\":19568:19583   */\n      add\n        /* \"#utility.yul\":19561:19592   */\n      mstore\n        /* \"#utility.yul\":19376:19599   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19605:19971   */\n    tag_486:\n        /* \"#utility.yul\":19747:19750   */\n      0x00\n        /* \"#utility.yul\":19768:19835   */\n      tag_681\n        /* \"#utility.yul\":19832:19834   */\n      0x24\n        /* \"#utility.yul\":19827:19830   */\n      dup4\n        /* \"#utility.yul\":19768:19835   */\n      tag_451\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":19761:19835   */\n      swap2\n      pop\n        /* \"#utility.yul\":19844:19937   */\n      tag_682\n        /* \"#utility.yul\":19933:19936   */\n      dup3\n        /* \"#utility.yul\":19844:19937   */\n      tag_485\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":19962:19964   */\n      0x40\n        /* \"#utility.yul\":19957:19960   */\n      dup3\n        /* \"#utility.yul\":19953:19965   */\n      add\n        /* \"#utility.yul\":19946:19965   */\n      swap1\n      pop\n        /* \"#utility.yul\":19605:19971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19977:20396   */\n    tag_280:\n        /* \"#utility.yul\":20143:20147   */\n      0x00\n        /* \"#utility.yul\":20181:20183   */\n      0x20\n        /* \"#utility.yul\":20170:20179   */\n      dup3\n        /* \"#utility.yul\":20166:20184   */\n      add\n        /* \"#utility.yul\":20158:20184   */\n      swap1\n      pop\n        /* \"#utility.yul\":20230:20239   */\n      dup2\n        /* \"#utility.yul\":20224:20228   */\n      dup2\n        /* \"#utility.yul\":20220:20240   */\n      sub\n        /* \"#utility.yul\":20216:20217   */\n      0x00\n        /* \"#utility.yul\":20205:20214   */\n      dup4\n        /* \"#utility.yul\":20201:20218   */\n      add\n        /* \"#utility.yul\":20194:20241   */\n      mstore\n        /* \"#utility.yul\":20258:20389   */\n      tag_684\n        /* \"#utility.yul\":20384:20388   */\n      dup2\n        /* \"#utility.yul\":20258:20389   */\n      tag_486\n      jump\t// in\n    tag_684:\n        /* \"#utility.yul\":20250:20389   */\n      swap1\n      pop\n        /* \"#utility.yul\":19977:20396   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20402:20571   */\n    tag_487:\n        /* \"#utility.yul\":20542:20563   */\n      0x414d4d3a204e6f74206120676f7665726e6f7200000000000000000000000000\n        /* \"#utility.yul\":20538:20539   */\n      0x00\n        /* \"#utility.yul\":20530:20536   */\n      dup3\n        /* \"#utility.yul\":20526:20540   */\n      add\n        /* \"#utility.yul\":20519:20564   */\n      mstore\n        /* \"#utility.yul\":20402:20571   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20577:20943   */\n    tag_488:\n        /* \"#utility.yul\":20719:20722   */\n      0x00\n        /* \"#utility.yul\":20740:20807   */\n      tag_687\n        /* \"#utility.yul\":20804:20806   */\n      0x13\n        /* \"#utility.yul\":20799:20802   */\n      dup4\n        /* \"#utility.yul\":20740:20807   */\n      tag_451\n      jump\t// in\n    tag_687:\n        /* \"#utility.yul\":20733:20807   */\n      swap2\n      pop\n        /* \"#utility.yul\":20816:20909   */\n      tag_688\n        /* \"#utility.yul\":20905:20908   */\n      dup3\n        /* \"#utility.yul\":20816:20909   */\n      tag_487\n      jump\t// in\n    tag_688:\n        /* \"#utility.yul\":20934:20936   */\n      0x20\n        /* \"#utility.yul\":20929:20932   */\n      dup3\n        /* \"#utility.yul\":20925:20937   */\n      add\n        /* \"#utility.yul\":20918:20937   */\n      swap1\n      pop\n        /* \"#utility.yul\":20577:20943   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20949:21368   */\n    tag_314:\n        /* \"#utility.yul\":21115:21119   */\n      0x00\n        /* \"#utility.yul\":21153:21155   */\n      0x20\n        /* \"#utility.yul\":21142:21151   */\n      dup3\n        /* \"#utility.yul\":21138:21156   */\n      add\n        /* \"#utility.yul\":21130:21156   */\n      swap1\n      pop\n        /* \"#utility.yul\":21202:21211   */\n      dup2\n        /* \"#utility.yul\":21196:21200   */\n      dup2\n        /* \"#utility.yul\":21192:21212   */\n      sub\n        /* \"#utility.yul\":21188:21189   */\n      0x00\n        /* \"#utility.yul\":21177:21186   */\n      dup4\n        /* \"#utility.yul\":21173:21190   */\n      add\n        /* \"#utility.yul\":21166:21213   */\n      mstore\n        /* \"#utility.yul\":21230:21361   */\n      tag_690\n        /* \"#utility.yul\":21356:21360   */\n      dup2\n        /* \"#utility.yul\":21230:21361   */\n      tag_488\n      jump\t// in\n    tag_690:\n        /* \"#utility.yul\":21222:21361   */\n      swap1\n      pop\n        /* \"#utility.yul\":20949:21368   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21374:21554   */\n    tag_320:\n        /* \"#utility.yul\":21422:21499   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21419:21420   */\n      0x00\n        /* \"#utility.yul\":21412:21500   */\n      mstore\n        /* \"#utility.yul\":21519:21523   */\n      0x32\n        /* \"#utility.yul\":21516:21517   */\n      0x04\n        /* \"#utility.yul\":21509:21524   */\n      mstore\n        /* \"#utility.yul\":21543:21547   */\n      0x24\n        /* \"#utility.yul\":21540:21541   */\n      0x00\n        /* \"#utility.yul\":21533:21548   */\n      revert\n        /* \"#utility.yul\":21560:21740   */\n    tag_332:\n        /* \"#utility.yul\":21608:21685   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":21605:21606   */\n      0x00\n        /* \"#utility.yul\":21598:21686   */\n      mstore\n        /* \"#utility.yul\":21705:21709   */\n      0x31\n        /* \"#utility.yul\":21702:21703   */\n      0x04\n        /* \"#utility.yul\":21695:21710   */\n      mstore\n        /* \"#utility.yul\":21729:21733   */\n      0x24\n        /* \"#utility.yul\":21726:21727   */\n      0x00\n        /* \"#utility.yul\":21719:21734   */\n      revert\n        /* \"#utility.yul\":21746:22188   */\n    tag_343:\n        /* \"#utility.yul\":21895:21899   */\n      0x00\n        /* \"#utility.yul\":21933:21935   */\n      0x60\n        /* \"#utility.yul\":21922:21931   */\n      dup3\n        /* \"#utility.yul\":21918:21936   */\n      add\n        /* \"#utility.yul\":21910:21936   */\n      swap1\n      pop\n        /* \"#utility.yul\":21946:22017   */\n      tag_694\n        /* \"#utility.yul\":22014:22015   */\n      0x00\n        /* \"#utility.yul\":22003:22012   */\n      dup4\n        /* \"#utility.yul\":21999:22016   */\n      add\n        /* \"#utility.yul\":21990:21996   */\n      dup7\n        /* \"#utility.yul\":21946:22017   */\n      tag_448\n      jump\t// in\n    tag_694:\n        /* \"#utility.yul\":22027:22099   */\n      tag_695\n        /* \"#utility.yul\":22095:22097   */\n      0x20\n        /* \"#utility.yul\":22084:22093   */\n      dup4\n        /* \"#utility.yul\":22080:22098   */\n      add\n        /* \"#utility.yul\":22071:22077   */\n      dup6\n        /* \"#utility.yul\":22027:22099   */\n      tag_449\n      jump\t// in\n    tag_695:\n        /* \"#utility.yul\":22109:22181   */\n      tag_696\n        /* \"#utility.yul\":22177:22179   */\n      0x40\n        /* \"#utility.yul\":22166:22175   */\n      dup4\n        /* \"#utility.yul\":22162:22180   */\n      add\n        /* \"#utility.yul\":22153:22159   */\n      dup5\n        /* \"#utility.yul\":22109:22181   */\n      tag_449\n      jump\t// in\n    tag_696:\n        /* \"#utility.yul\":21746:22188   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22194:22375   */\n    tag_489:\n        /* \"#utility.yul\":22334:22367   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":22330:22331   */\n      0x00\n        /* \"#utility.yul\":22322:22328   */\n      dup3\n        /* \"#utility.yul\":22318:22332   */\n      add\n        /* \"#utility.yul\":22311:22368   */\n      mstore\n        /* \"#utility.yul\":22194:22375   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22381:22747   */\n    tag_490:\n        /* \"#utility.yul\":22523:22526   */\n      0x00\n        /* \"#utility.yul\":22544:22611   */\n      tag_699\n        /* \"#utility.yul\":22608:22610   */\n      0x1f\n        /* \"#utility.yul\":22603:22606   */\n      dup4\n        /* \"#utility.yul\":22544:22611   */\n      tag_451\n      jump\t// in\n    tag_699:\n        /* \"#utility.yul\":22537:22611   */\n      swap2\n      pop\n        /* \"#utility.yul\":22620:22713   */\n      tag_700\n        /* \"#utility.yul\":22709:22712   */\n      dup3\n        /* \"#utility.yul\":22620:22713   */\n      tag_489\n      jump\t// in\n    tag_700:\n        /* \"#utility.yul\":22738:22740   */\n      0x20\n        /* \"#utility.yul\":22733:22736   */\n      dup3\n        /* \"#utility.yul\":22729:22741   */\n      add\n        /* \"#utility.yul\":22722:22741   */\n      swap1\n      pop\n        /* \"#utility.yul\":22381:22747   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":22753:23172   */\n    tag_355:\n        /* \"#utility.yul\":22919:22923   */\n      0x00\n        /* \"#utility.yul\":22957:22959   */\n      0x20\n        /* \"#utility.yul\":22946:22955   */\n      dup3\n        /* \"#utility.yul\":22942:22960   */\n      add\n        /* \"#utility.yul\":22934:22960   */\n      swap1\n      pop\n        /* \"#utility.yul\":23006:23015   */\n      dup2\n        /* \"#utility.yul\":23000:23004   */\n      dup2\n        /* \"#utility.yul\":22996:23016   */\n      sub\n        /* \"#utility.yul\":22992:22993   */\n      0x00\n        /* \"#utility.yul\":22981:22990   */\n      dup4\n        /* \"#utility.yul\":22977:22994   */\n      add\n        /* \"#utility.yul\":22970:23017   */\n      mstore\n        /* \"#utility.yul\":23034:23165   */\n      tag_702\n        /* \"#utility.yul\":23160:23164   */\n      dup2\n        /* \"#utility.yul\":23034:23165   */\n      tag_490\n      jump\t// in\n    tag_702:\n        /* \"#utility.yul\":23026:23165   */\n      swap1\n      pop\n        /* \"#utility.yul\":22753:23172   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23178:23620   */\n    tag_359:\n        /* \"#utility.yul\":23327:23331   */\n      0x00\n        /* \"#utility.yul\":23365:23367   */\n      0x60\n        /* \"#utility.yul\":23354:23363   */\n      dup3\n        /* \"#utility.yul\":23350:23368   */\n      add\n        /* \"#utility.yul\":23342:23368   */\n      swap1\n      pop\n        /* \"#utility.yul\":23378:23449   */\n      tag_704\n        /* \"#utility.yul\":23446:23447   */\n      0x00\n        /* \"#utility.yul\":23435:23444   */\n      dup4\n        /* \"#utility.yul\":23431:23448   */\n      add\n        /* \"#utility.yul\":23422:23428   */\n      dup7\n        /* \"#utility.yul\":23378:23449   */\n      tag_448\n      jump\t// in\n    tag_704:\n        /* \"#utility.yul\":23459:23531   */\n      tag_705\n        /* \"#utility.yul\":23527:23529   */\n      0x20\n        /* \"#utility.yul\":23516:23525   */\n      dup4\n        /* \"#utility.yul\":23512:23530   */\n      add\n        /* \"#utility.yul\":23503:23509   */\n      dup6\n        /* \"#utility.yul\":23459:23531   */\n      tag_448\n      jump\t// in\n    tag_705:\n        /* \"#utility.yul\":23541:23613   */\n      tag_706\n        /* \"#utility.yul\":23609:23611   */\n      0x40\n        /* \"#utility.yul\":23598:23607   */\n      dup4\n        /* \"#utility.yul\":23594:23612   */\n      add\n        /* \"#utility.yul\":23585:23591   */\n      dup5\n        /* \"#utility.yul\":23541:23613   */\n      tag_449\n      jump\t// in\n    tag_706:\n        /* \"#utility.yul\":23178:23620   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23626:23958   */\n    tag_364:\n        /* \"#utility.yul\":23747:23751   */\n      0x00\n        /* \"#utility.yul\":23785:23787   */\n      0x40\n        /* \"#utility.yul\":23774:23783   */\n      dup3\n        /* \"#utility.yul\":23770:23788   */\n      add\n        /* \"#utility.yul\":23762:23788   */\n      swap1\n      pop\n        /* \"#utility.yul\":23798:23869   */\n      tag_708\n        /* \"#utility.yul\":23866:23867   */\n      0x00\n        /* \"#utility.yul\":23855:23864   */\n      dup4\n        /* \"#utility.yul\":23851:23868   */\n      add\n        /* \"#utility.yul\":23842:23848   */\n      dup6\n        /* \"#utility.yul\":23798:23869   */\n      tag_448\n      jump\t// in\n    tag_708:\n        /* \"#utility.yul\":23879:23951   */\n      tag_709\n        /* \"#utility.yul\":23947:23949   */\n      0x20\n        /* \"#utility.yul\":23936:23945   */\n      dup4\n        /* \"#utility.yul\":23932:23950   */\n      add\n        /* \"#utility.yul\":23923:23929   */\n      dup5\n        /* \"#utility.yul\":23879:23951   */\n      tag_449\n      jump\t// in\n    tag_709:\n        /* \"#utility.yul\":23626:23958   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":23964:24080   */\n    tag_491:\n        /* \"#utility.yul\":24034:24055   */\n      tag_711\n        /* \"#utility.yul\":24049:24054   */\n      dup2\n        /* \"#utility.yul\":24034:24055   */\n      tag_457\n      jump\t// in\n    tag_711:\n        /* \"#utility.yul\":24027:24032   */\n      dup2\n        /* \"#utility.yul\":24024:24056   */\n      eq\n        /* \"#utility.yul\":24014:24074   */\n      tag_712\n      jumpi\n        /* \"#utility.yul\":24070:24071   */\n      0x00\n        /* \"#utility.yul\":24067:24068   */\n      dup1\n        /* \"#utility.yul\":24060:24072   */\n      revert\n        /* \"#utility.yul\":24014:24074   */\n    tag_712:\n        /* \"#utility.yul\":23964:24080   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24086:24223   */\n    tag_492:\n        /* \"#utility.yul\":24140:24145   */\n      0x00\n        /* \"#utility.yul\":24171:24177   */\n      dup2\n        /* \"#utility.yul\":24165:24178   */\n      mload\n        /* \"#utility.yul\":24156:24178   */\n      swap1\n      pop\n        /* \"#utility.yul\":24187:24217   */\n      tag_714\n        /* \"#utility.yul\":24211:24216   */\n      dup2\n        /* \"#utility.yul\":24187:24217   */\n      tag_491\n      jump\t// in\n    tag_714:\n        /* \"#utility.yul\":24086:24223   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24229:24574   */\n    tag_413:\n        /* \"#utility.yul\":24296:24302   */\n      0x00\n        /* \"#utility.yul\":24345:24347   */\n      0x20\n        /* \"#utility.yul\":24333:24342   */\n      dup3\n        /* \"#utility.yul\":24324:24331   */\n      dup5\n        /* \"#utility.yul\":24320:24343   */\n      sub\n        /* \"#utility.yul\":24316:24348   */\n      slt\n        /* \"#utility.yul\":24313:24432   */\n      iszero\n      tag_716\n      jumpi\n        /* \"#utility.yul\":24351:24430   */\n      tag_717\n      tag_441\n      jump\t// in\n    tag_717:\n        /* \"#utility.yul\":24313:24432   */\n    tag_716:\n        /* \"#utility.yul\":24471:24472   */\n      0x00\n        /* \"#utility.yul\":24496:24557   */\n      tag_718\n        /* \"#utility.yul\":24549:24556   */\n      dup5\n        /* \"#utility.yul\":24540:24546   */\n      dup3\n        /* \"#utility.yul\":24529:24538   */\n      dup6\n        /* \"#utility.yul\":24525:24547   */\n      add\n        /* \"#utility.yul\":24496:24557   */\n      tag_492\n      jump\t// in\n    tag_718:\n        /* \"#utility.yul\":24486:24557   */\n      swap2\n      pop\n        /* \"#utility.yul\":24442:24567   */\n      pop\n        /* \"#utility.yul\":24229:24574   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24580:24678   */\n    tag_493:\n        /* \"#utility.yul\":24631:24637   */\n      0x00\n        /* \"#utility.yul\":24665:24670   */\n      dup2\n        /* \"#utility.yul\":24659:24671   */\n      mload\n        /* \"#utility.yul\":24649:24671   */\n      swap1\n      pop\n        /* \"#utility.yul\":24580:24678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24684:24831   */\n    tag_494:\n        /* \"#utility.yul\":24785:24796   */\n      0x00\n        /* \"#utility.yul\":24822:24825   */\n      dup2\n        /* \"#utility.yul\":24807:24825   */\n      swap1\n      pop\n        /* \"#utility.yul\":24684:24831   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":24837:25223   */\n    tag_495:\n        /* \"#utility.yul\":24941:24944   */\n      0x00\n        /* \"#utility.yul\":24969:25007   */\n      tag_722\n        /* \"#utility.yul\":25001:25006   */\n      dup3\n        /* \"#utility.yul\":24969:25007   */\n      tag_493\n      jump\t// in\n    tag_722:\n        /* \"#utility.yul\":25023:25111   */\n      tag_723\n        /* \"#utility.yul\":25104:25110   */\n      dup2\n        /* \"#utility.yul\":25099:25102   */\n      dup6\n        /* \"#utility.yul\":25023:25111   */\n      tag_494\n      jump\t// in\n    tag_723:\n        /* \"#utility.yul\":25016:25111   */\n      swap4\n      pop\n        /* \"#utility.yul\":25120:25185   */\n      tag_724\n        /* \"#utility.yul\":25178:25184   */\n      dup2\n        /* \"#utility.yul\":25173:25176   */\n      dup6\n        /* \"#utility.yul\":25166:25170   */\n      0x20\n        /* \"#utility.yul\":25159:25164   */\n      dup7\n        /* \"#utility.yul\":25155:25171   */\n      add\n        /* \"#utility.yul\":25120:25185   */\n      tag_452\n      jump\t// in\n    tag_724:\n        /* \"#utility.yul\":25210:25216   */\n      dup1\n        /* \"#utility.yul\":25205:25208   */\n      dup5\n        /* \"#utility.yul\":25201:25217   */\n      add\n        /* \"#utility.yul\":25194:25217   */\n      swap2\n      pop\n        /* \"#utility.yul\":24945:25223   */\n      pop\n        /* \"#utility.yul\":24837:25223   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":25229:25500   */\n    tag_423:\n        /* \"#utility.yul\":25359:25362   */\n      0x00\n        /* \"#utility.yul\":25381:25474   */\n      tag_726\n        /* \"#utility.yul\":25470:25473   */\n      dup3\n        /* \"#utility.yul\":25461:25467   */\n      dup5\n        /* \"#utility.yul\":25381:25474   */\n      tag_495\n      jump\t// in\n    tag_726:\n        /* \"#utility.yul\":25374:25474   */\n      swap2\n      pop\n        /* \"#utility.yul\":25491:25494   */\n      dup2\n        /* \"#utility.yul\":25484:25494   */\n      swap1\n      pop\n        /* \"#utility.yul\":25229:25500   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220a085248112c02c3272b66eb04c4c555c4a703db89e5ded1e477594eed216c23864736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_155": {
									"entryPoint": null,
									"id": 155,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_1584": {
									"entryPoint": null,
									"id": 1584,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_253": {
									"entryPoint": null,
									"id": 253,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 600,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 682,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1115,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 561,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 530,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1081,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1252,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 848,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 782,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1225,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1197,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 737,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 692,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1007,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 526,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 863,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1057,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 875,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1016,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1053,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:6582:10",
										"nodeType": "YulBlock",
										"src": "0:6582:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:81:10",
													"nodeType": "YulBlock",
													"src": "379:81:10",
													"statements": [
														{
															"nativeSrc": "389:65:10",
															"nodeType": "YulAssignment",
															"src": "389:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:10",
																		"nodeType": "YulLiteral",
																		"src": "411:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:10"
																},
																"nativeSrc": "400:54:10",
																"nodeType": "YulFunctionCall",
																"src": "400:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:126:10"
											},
											{
												"body": {
													"nativeSrc": "511:51:10",
													"nodeType": "YulBlock",
													"src": "511:51:10",
													"statements": [
														{
															"nativeSrc": "521:35:10",
															"nodeType": "YulAssignment",
															"src": "521:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:10"
																},
																"nativeSrc": "532:24:10",
																"nodeType": "YulFunctionCall",
																"src": "532:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:10",
														"nodeType": "YulTypedName",
														"src": "493:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:10",
														"nodeType": "YulTypedName",
														"src": "503:7:10",
														"type": ""
													}
												],
												"src": "466:96:10"
											},
											{
												"body": {
													"nativeSrc": "611:79:10",
													"nodeType": "YulBlock",
													"src": "611:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:10",
																"nodeType": "YulBlock",
																"src": "668:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:10",
																					"nodeType": "YulLiteral",
																					"src": "677:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:10",
																					"nodeType": "YulLiteral",
																					"src": "680:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:10"
																			},
																			"nativeSrc": "670:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:10"
																		},
																		"nativeSrc": "670:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:10"
																				},
																				"nativeSrc": "641:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:10"
																		},
																		"nativeSrc": "631:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:10"
																},
																"nativeSrc": "624:43:10",
																"nodeType": "YulFunctionCall",
																"src": "624:43:10"
															},
															"nativeSrc": "621:63:10",
															"nodeType": "YulIf",
															"src": "621:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:10",
														"nodeType": "YulTypedName",
														"src": "604:5:10",
														"type": ""
													}
												],
												"src": "568:122:10"
											},
											{
												"body": {
													"nativeSrc": "759:80:10",
													"nodeType": "YulBlock",
													"src": "759:80:10",
													"statements": [
														{
															"nativeSrc": "769:22:10",
															"nodeType": "YulAssignment",
															"src": "769:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:10"
																},
																"nativeSrc": "778:13:10",
																"nodeType": "YulFunctionCall",
																"src": "778:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:10"
																},
																"nativeSrc": "800:33:10",
																"nodeType": "YulFunctionCall",
																"src": "800:33:10"
															},
															"nativeSrc": "800:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:10"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:10",
														"nodeType": "YulTypedName",
														"src": "737:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:10",
														"nodeType": "YulTypedName",
														"src": "745:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:10",
														"nodeType": "YulTypedName",
														"src": "753:5:10",
														"type": ""
													}
												],
												"src": "696:143:10"
											},
											{
												"body": {
													"nativeSrc": "939:413:10",
													"nodeType": "YulBlock",
													"src": "939:413:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "985:83:10",
																"nodeType": "YulBlock",
																"src": "985:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "987:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "987:77:10"
																			},
																			"nativeSrc": "987:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "987:79:10"
																		},
																		"nativeSrc": "987:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "987:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "960:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "960:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "969:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "969:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "956:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "956:3:10"
																		},
																		"nativeSrc": "956:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "956:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "981:2:10",
																		"nodeType": "YulLiteral",
																		"src": "981:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "952:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "952:3:10"
																},
																"nativeSrc": "952:32:10",
																"nodeType": "YulFunctionCall",
																"src": "952:32:10"
															},
															"nativeSrc": "949:119:10",
															"nodeType": "YulIf",
															"src": "949:119:10"
														},
														{
															"nativeSrc": "1078:128:10",
															"nodeType": "YulBlock",
															"src": "1078:128:10",
															"statements": [
																{
																	"nativeSrc": "1093:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1093:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1107:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1107:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1097:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1097:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1122:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1122:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1168:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1168:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1179:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1179:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1164:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1164:3:10"
																				},
																				"nativeSrc": "1164:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1164:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1188:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1188:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1132:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1132:31:10"
																		},
																		"nativeSrc": "1132:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1132:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1122:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1122:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1216:129:10",
															"nodeType": "YulBlock",
															"src": "1216:129:10",
															"statements": [
																{
																	"nativeSrc": "1231:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1231:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1245:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1245:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1235:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1235:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1261:74:10",
																	"nodeType": "YulAssignment",
																	"src": "1261:74:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1307:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1307:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1318:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1318:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1303:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1303:3:10"
																				},
																				"nativeSrc": "1303:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1303:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1271:31:10",
																			"nodeType": "YulIdentifier",
																			"src": "1271:31:10"
																		},
																		"nativeSrc": "1271:64:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1271:64:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1261:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1261:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nativeSrc": "845:507:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "901:9:10",
														"nodeType": "YulTypedName",
														"src": "901:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "912:7:10",
														"nodeType": "YulTypedName",
														"src": "912:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "924:6:10",
														"nodeType": "YulTypedName",
														"src": "924:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "932:6:10",
														"nodeType": "YulTypedName",
														"src": "932:6:10",
														"type": ""
													}
												],
												"src": "845:507:10"
											},
											{
												"body": {
													"nativeSrc": "1417:40:10",
													"nodeType": "YulBlock",
													"src": "1417:40:10",
													"statements": [
														{
															"nativeSrc": "1428:22:10",
															"nodeType": "YulAssignment",
															"src": "1428:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1444:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1444:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1438:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1438:5:10"
																},
																"nativeSrc": "1438:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1438:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1428:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1428:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1358:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1400:5:10",
														"nodeType": "YulTypedName",
														"src": "1400:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1410:6:10",
														"nodeType": "YulTypedName",
														"src": "1410:6:10",
														"type": ""
													}
												],
												"src": "1358:99:10"
											},
											{
												"body": {
													"nativeSrc": "1491:152:10",
													"nodeType": "YulBlock",
													"src": "1491:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1508:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1511:77:10",
																		"nodeType": "YulLiteral",
																		"src": "1511:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1501:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1501:6:10"
																},
																"nativeSrc": "1501:88:10",
																"nodeType": "YulFunctionCall",
																"src": "1501:88:10"
															},
															"nativeSrc": "1501:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "1501:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1605:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1605:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1608:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1608:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1598:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1598:6:10"
																},
																"nativeSrc": "1598:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1598:15:10"
															},
															"nativeSrc": "1598:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "1598:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1629:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1629:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1632:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1632:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1622:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1622:6:10"
																},
																"nativeSrc": "1622:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1622:15:10"
															},
															"nativeSrc": "1622:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "1622:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1463:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1463:180:10"
											},
											{
												"body": {
													"nativeSrc": "1677:152:10",
													"nodeType": "YulBlock",
													"src": "1677:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1694:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1694:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1697:77:10",
																		"nodeType": "YulLiteral",
																		"src": "1697:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1687:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1687:6:10"
																},
																"nativeSrc": "1687:88:10",
																"nodeType": "YulFunctionCall",
																"src": "1687:88:10"
															},
															"nativeSrc": "1687:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "1687:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1791:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1791:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1794:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1794:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1784:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1784:6:10"
																},
																"nativeSrc": "1784:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1784:15:10"
															},
															"nativeSrc": "1784:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "1784:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1815:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1815:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1818:4:10",
																		"nodeType": "YulLiteral",
																		"src": "1818:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1808:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1808:6:10"
																},
																"nativeSrc": "1808:15:10",
																"nodeType": "YulFunctionCall",
																"src": "1808:15:10"
															},
															"nativeSrc": "1808:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "1808:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1649:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1649:180:10"
											},
											{
												"body": {
													"nativeSrc": "1886:269:10",
													"nodeType": "YulBlock",
													"src": "1886:269:10",
													"statements": [
														{
															"nativeSrc": "1896:22:10",
															"nodeType": "YulAssignment",
															"src": "1896:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1910:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1910:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1916:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1916:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1906:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1906:3:10"
																},
																"nativeSrc": "1906:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1906:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1896:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1896:6:10"
																}
															]
														},
														{
															"nativeSrc": "1927:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1927:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1957:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1957:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1963:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1963:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1953:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:10"
																},
																"nativeSrc": "1953:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1953:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1931:18:10",
																	"nodeType": "YulTypedName",
																	"src": "1931:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2004:51:10",
																"nodeType": "YulBlock",
																"src": "2004:51:10",
																"statements": [
																	{
																		"nativeSrc": "2018:27:10",
																		"nodeType": "YulAssignment",
																		"src": "2018:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "2032:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "2032:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2040:4:10",
																					"nodeType": "YulLiteral",
																					"src": "2040:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "2028:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2028:3:10"
																			},
																			"nativeSrc": "2028:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2028:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "2018:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2018:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1984:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "1984:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1977:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1977:6:10"
																},
																"nativeSrc": "1977:26:10",
																"nodeType": "YulFunctionCall",
																"src": "1977:26:10"
															},
															"nativeSrc": "1974:81:10",
															"nodeType": "YulIf",
															"src": "1974:81:10"
														},
														{
															"body": {
																"nativeSrc": "2107:42:10",
																"nodeType": "YulBlock",
																"src": "2107:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "2121:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "2121:16:10"
																			},
																			"nativeSrc": "2121:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2121:18:10"
																		},
																		"nativeSrc": "2121:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2121:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "2071:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "2071:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2094:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2094:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2102:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2102:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2091:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2091:2:10"
																		},
																		"nativeSrc": "2091:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2091:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "2068:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2068:2:10"
																},
																"nativeSrc": "2068:38:10",
																"nodeType": "YulFunctionCall",
																"src": "2068:38:10"
															},
															"nativeSrc": "2065:84:10",
															"nodeType": "YulIf",
															"src": "2065:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1835:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1870:4:10",
														"nodeType": "YulTypedName",
														"src": "1870:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1879:6:10",
														"nodeType": "YulTypedName",
														"src": "1879:6:10",
														"type": ""
													}
												],
												"src": "1835:320:10"
											},
											{
												"body": {
													"nativeSrc": "2215:87:10",
													"nodeType": "YulBlock",
													"src": "2215:87:10",
													"statements": [
														{
															"nativeSrc": "2225:11:10",
															"nodeType": "YulAssignment",
															"src": "2225:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "2233:3:10",
																"nodeType": "YulIdentifier",
																"src": "2233:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2225:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2225:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2253:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2253:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2256:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2256:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2246:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2246:6:10"
																},
																"nativeSrc": "2246:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2246:14:10"
															},
															"nativeSrc": "2246:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "2246:14:10"
														},
														{
															"nativeSrc": "2269:26:10",
															"nodeType": "YulAssignment",
															"src": "2269:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2287:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2287:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2290:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2290:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2277:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "2277:9:10"
																},
																"nativeSrc": "2277:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2277:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2269:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2269:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "2161:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "2202:3:10",
														"nodeType": "YulTypedName",
														"src": "2202:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "2210:4:10",
														"nodeType": "YulTypedName",
														"src": "2210:4:10",
														"type": ""
													}
												],
												"src": "2161:141:10"
											},
											{
												"body": {
													"nativeSrc": "2352:49:10",
													"nodeType": "YulBlock",
													"src": "2352:49:10",
													"statements": [
														{
															"nativeSrc": "2362:33:10",
															"nodeType": "YulAssignment",
															"src": "2362:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2380:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2380:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2387:2:10",
																				"nodeType": "YulLiteral",
																				"src": "2387:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2376:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2376:3:10"
																		},
																		"nativeSrc": "2376:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2376:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2392:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2392:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2372:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2372:3:10"
																},
																"nativeSrc": "2372:23:10",
																"nodeType": "YulFunctionCall",
																"src": "2372:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2362:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2362:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2308:93:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2335:5:10",
														"nodeType": "YulTypedName",
														"src": "2335:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2345:6:10",
														"nodeType": "YulTypedName",
														"src": "2345:6:10",
														"type": ""
													}
												],
												"src": "2308:93:10"
											},
											{
												"body": {
													"nativeSrc": "2460:54:10",
													"nodeType": "YulBlock",
													"src": "2460:54:10",
													"statements": [
														{
															"nativeSrc": "2470:37:10",
															"nodeType": "YulAssignment",
															"src": "2470:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2495:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2495:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2501:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2501:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2491:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2491:3:10"
																},
																"nativeSrc": "2491:16:10",
																"nodeType": "YulFunctionCall",
																"src": "2491:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2470:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "2470:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2407:107:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2435:4:10",
														"nodeType": "YulTypedName",
														"src": "2435:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2441:5:10",
														"nodeType": "YulTypedName",
														"src": "2441:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2451:8:10",
														"nodeType": "YulTypedName",
														"src": "2451:8:10",
														"type": ""
													}
												],
												"src": "2407:107:10"
											},
											{
												"body": {
													"nativeSrc": "2596:317:10",
													"nodeType": "YulBlock",
													"src": "2596:317:10",
													"statements": [
														{
															"nativeSrc": "2606:35:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2606:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2627:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "2627:10:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2639:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2639:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2623:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2623:3:10"
																},
																"nativeSrc": "2623:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2623:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2610:9:10",
																	"nodeType": "YulTypedName",
																	"src": "2610:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2650:109:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2650:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2681:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2681:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2692:66:10",
																		"nodeType": "YulLiteral",
																		"src": "2692:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2662:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "2662:18:10"
																},
																"nativeSrc": "2662:97:10",
																"nodeType": "YulFunctionCall",
																"src": "2662:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2654:4:10",
																	"nodeType": "YulTypedName",
																	"src": "2654:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2768:51:10",
															"nodeType": "YulAssignment",
															"src": "2768:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2799:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2799:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2810:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "2810:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2780:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "2780:18:10"
																},
																"nativeSrc": "2780:39:10",
																"nodeType": "YulFunctionCall",
																"src": "2780:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2768:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "2768:8:10"
																}
															]
														},
														{
															"nativeSrc": "2828:30:10",
															"nodeType": "YulAssignment",
															"src": "2828:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2841:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2841:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2852:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2852:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2848:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2848:3:10"
																		},
																		"nativeSrc": "2848:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2848:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2837:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2837:3:10"
																},
																"nativeSrc": "2837:21:10",
																"nodeType": "YulFunctionCall",
																"src": "2837:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2828:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2828:5:10"
																}
															]
														},
														{
															"nativeSrc": "2867:40:10",
															"nodeType": "YulAssignment",
															"src": "2867:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2880:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2880:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2891:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "2891:8:10"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2901:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "2901:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2887:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2887:3:10"
																		},
																		"nativeSrc": "2887:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2887:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2877:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2877:2:10"
																},
																"nativeSrc": "2877:30:10",
																"nodeType": "YulFunctionCall",
																"src": "2877:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2867:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2867:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2520:393:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2557:5:10",
														"nodeType": "YulTypedName",
														"src": "2557:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2564:10:10",
														"nodeType": "YulTypedName",
														"src": "2564:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2576:8:10",
														"nodeType": "YulTypedName",
														"src": "2576:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2589:6:10",
														"nodeType": "YulTypedName",
														"src": "2589:6:10",
														"type": ""
													}
												],
												"src": "2520:393:10"
											},
											{
												"body": {
													"nativeSrc": "2964:32:10",
													"nodeType": "YulBlock",
													"src": "2964:32:10",
													"statements": [
														{
															"nativeSrc": "2974:16:10",
															"nodeType": "YulAssignment",
															"src": "2974:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "2985:5:10",
																"nodeType": "YulIdentifier",
																"src": "2985:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2974:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2974:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2919:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2946:5:10",
														"nodeType": "YulTypedName",
														"src": "2946:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2956:7:10",
														"nodeType": "YulTypedName",
														"src": "2956:7:10",
														"type": ""
													}
												],
												"src": "2919:77:10"
											},
											{
												"body": {
													"nativeSrc": "3034:28:10",
													"nodeType": "YulBlock",
													"src": "3034:28:10",
													"statements": [
														{
															"nativeSrc": "3044:12:10",
															"nodeType": "YulAssignment",
															"src": "3044:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "3051:5:10",
																"nodeType": "YulIdentifier",
																"src": "3051:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3044:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3044:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "3002:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3020:5:10",
														"nodeType": "YulTypedName",
														"src": "3020:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3030:3:10",
														"nodeType": "YulTypedName",
														"src": "3030:3:10",
														"type": ""
													}
												],
												"src": "3002:60:10"
											},
											{
												"body": {
													"nativeSrc": "3128:82:10",
													"nodeType": "YulBlock",
													"src": "3128:82:10",
													"statements": [
														{
															"nativeSrc": "3138:66:10",
															"nodeType": "YulAssignment",
															"src": "3138:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3196:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3196:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "3178:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "3178:17:10"
																				},
																				"nativeSrc": "3178:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3178:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "3169:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "3169:8:10"
																		},
																		"nativeSrc": "3169:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3169:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "3151:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "3151:17:10"
																},
																"nativeSrc": "3151:53:10",
																"nodeType": "YulFunctionCall",
																"src": "3151:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "3138:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "3138:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "3068:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3108:5:10",
														"nodeType": "YulTypedName",
														"src": "3108:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "3118:9:10",
														"nodeType": "YulTypedName",
														"src": "3118:9:10",
														"type": ""
													}
												],
												"src": "3068:142:10"
											},
											{
												"body": {
													"nativeSrc": "3263:28:10",
													"nodeType": "YulBlock",
													"src": "3263:28:10",
													"statements": [
														{
															"nativeSrc": "3273:12:10",
															"nodeType": "YulAssignment",
															"src": "3273:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "3280:5:10",
																"nodeType": "YulIdentifier",
																"src": "3280:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3273:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3273:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "3216:75:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3249:5:10",
														"nodeType": "YulTypedName",
														"src": "3249:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3259:3:10",
														"nodeType": "YulTypedName",
														"src": "3259:3:10",
														"type": ""
													}
												],
												"src": "3216:75:10"
											},
											{
												"body": {
													"nativeSrc": "3373:193:10",
													"nodeType": "YulBlock",
													"src": "3373:193:10",
													"statements": [
														{
															"nativeSrc": "3383:63:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3383:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3438:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "3438:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3407:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "3407:30:10"
																},
																"nativeSrc": "3407:39:10",
																"nodeType": "YulFunctionCall",
																"src": "3407:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "3387:16:10",
																	"nodeType": "YulTypedName",
																	"src": "3387:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3462:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3462:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3502:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "3502:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3496:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "3496:5:10"
																				},
																				"nativeSrc": "3496:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3496:11:10"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3509:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3509:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3541:16:10",
																						"nodeType": "YulIdentifier",
																						"src": "3541:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3517:23:10",
																					"nodeType": "YulIdentifier",
																					"src": "3517:23:10"
																				},
																				"nativeSrc": "3517:41:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3517:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3468:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "3468:27:10"
																		},
																		"nativeSrc": "3468:91:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3468:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3455:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3455:6:10"
																},
																"nativeSrc": "3455:105:10",
																"nodeType": "YulFunctionCall",
																"src": "3455:105:10"
															},
															"nativeSrc": "3455:105:10",
															"nodeType": "YulExpressionStatement",
															"src": "3455:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "3297:269:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3350:4:10",
														"nodeType": "YulTypedName",
														"src": "3350:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3356:6:10",
														"nodeType": "YulTypedName",
														"src": "3356:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "3364:7:10",
														"nodeType": "YulTypedName",
														"src": "3364:7:10",
														"type": ""
													}
												],
												"src": "3297:269:10"
											},
											{
												"body": {
													"nativeSrc": "3621:24:10",
													"nodeType": "YulBlock",
													"src": "3621:24:10",
													"statements": [
														{
															"nativeSrc": "3631:8:10",
															"nodeType": "YulAssignment",
															"src": "3631:8:10",
															"value": {
																"kind": "number",
																"nativeSrc": "3638:1:10",
																"nodeType": "YulLiteral",
																"src": "3638:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3631:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3631:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3572:73:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3617:3:10",
														"nodeType": "YulTypedName",
														"src": "3617:3:10",
														"type": ""
													}
												],
												"src": "3572:73:10"
											},
											{
												"body": {
													"nativeSrc": "3704:136:10",
													"nodeType": "YulBlock",
													"src": "3704:136:10",
													"statements": [
														{
															"nativeSrc": "3714:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3714:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3728:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "3728:30:10"
																},
																"nativeSrc": "3728:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3728:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3718:6:10",
																	"nodeType": "YulTypedName",
																	"src": "3718:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3813:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3813:4:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3819:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3819:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3827:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3827:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3769:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3769:43:10"
																},
																"nativeSrc": "3769:65:10",
																"nodeType": "YulFunctionCall",
																"src": "3769:65:10"
															},
															"nativeSrc": "3769:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "3769:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3651:189:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3690:4:10",
														"nodeType": "YulTypedName",
														"src": "3690:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3696:6:10",
														"nodeType": "YulTypedName",
														"src": "3696:6:10",
														"type": ""
													}
												],
												"src": "3651:189:10"
											},
											{
												"body": {
													"nativeSrc": "3896:136:10",
													"nodeType": "YulBlock",
													"src": "3896:136:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3963:63:10",
																"nodeType": "YulBlock",
																"src": "3963:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "4007:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "4007:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4014:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4014:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3977:29:10",
																				"nodeType": "YulIdentifier",
																				"src": "3977:29:10"
																			},
																			"nativeSrc": "3977:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3977:39:10"
																		},
																		"nativeSrc": "3977:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3977:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3916:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3916:5:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3923:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3923:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3913:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3913:2:10"
																},
																"nativeSrc": "3913:14:10",
																"nodeType": "YulFunctionCall",
																"src": "3913:14:10"
															},
															"nativeSrc": "3906:120:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3928:26:10",
																"nodeType": "YulBlock",
																"src": "3928:26:10",
																"statements": [
																	{
																		"nativeSrc": "3930:22:10",
																		"nodeType": "YulAssignment",
																		"src": "3930:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3943:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "3943:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3950:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3950:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3939:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3939:3:10"
																			},
																			"nativeSrc": "3939:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3939:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3930:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3930:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3910:2:10",
																"nodeType": "YulBlock",
																"src": "3910:2:10",
																"statements": []
															},
															"src": "3906:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3846:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3884:5:10",
														"nodeType": "YulTypedName",
														"src": "3884:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3891:3:10",
														"nodeType": "YulTypedName",
														"src": "3891:3:10",
														"type": ""
													}
												],
												"src": "3846:186:10"
											},
											{
												"body": {
													"nativeSrc": "4117:464:10",
													"nodeType": "YulBlock",
													"src": "4117:464:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4143:431:10",
																"nodeType": "YulBlock",
																"src": "4143:431:10",
																"statements": [
																	{
																		"nativeSrc": "4157:54:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4157:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "4205:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "4205:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "4173:31:10",
																				"nodeType": "YulIdentifier",
																				"src": "4173:31:10"
																			},
																			"nativeSrc": "4173:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4173:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "4161:8:10",
																				"nodeType": "YulTypedName",
																				"src": "4161:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "4224:63:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "4224:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "4247:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "4247:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "4275:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "4275:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "4257:17:10",
																						"nodeType": "YulIdentifier",
																						"src": "4257:17:10"
																					},
																					"nativeSrc": "4257:29:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4257:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "4243:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "4243:3:10"
																			},
																			"nativeSrc": "4243:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4243:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "4228:11:10",
																				"nodeType": "YulTypedName",
																				"src": "4228:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4444:27:10",
																			"nodeType": "YulBlock",
																			"src": "4444:27:10",
																			"statements": [
																				{
																					"nativeSrc": "4446:23:10",
																					"nodeType": "YulAssignment",
																					"src": "4446:23:10",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4461:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "4461:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4446:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "4446:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4428:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "4428:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4440:2:10",
																					"nodeType": "YulLiteral",
																					"src": "4440:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4425:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "4425:2:10"
																			},
																			"nativeSrc": "4425:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4425:18:10"
																		},
																		"nativeSrc": "4422:49:10",
																		"nodeType": "YulIf",
																		"src": "4422:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4513:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "4513:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4530:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "4530:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4558:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "4558:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4540:17:10",
																								"nodeType": "YulIdentifier",
																								"src": "4540:17:10"
																							},
																							"nativeSrc": "4540:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "4540:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4526:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "4526:3:10"
																					},
																					"nativeSrc": "4526:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4526:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4484:28:10",
																				"nodeType": "YulIdentifier",
																				"src": "4484:28:10"
																			},
																			"nativeSrc": "4484:80:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4484:80:10"
																		},
																		"nativeSrc": "4484:80:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4484:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "4134:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4134:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4139:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4139:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4131:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4131:2:10"
																},
																"nativeSrc": "4131:11:10",
																"nodeType": "YulFunctionCall",
																"src": "4131:11:10"
															},
															"nativeSrc": "4128:446:10",
															"nodeType": "YulIf",
															"src": "4128:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "4038:543:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "4093:5:10",
														"nodeType": "YulTypedName",
														"src": "4093:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4100:3:10",
														"nodeType": "YulTypedName",
														"src": "4100:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "4105:10:10",
														"nodeType": "YulTypedName",
														"src": "4105:10:10",
														"type": ""
													}
												],
												"src": "4038:543:10"
											},
											{
												"body": {
													"nativeSrc": "4650:54:10",
													"nodeType": "YulBlock",
													"src": "4650:54:10",
													"statements": [
														{
															"nativeSrc": "4660:37:10",
															"nodeType": "YulAssignment",
															"src": "4660:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4685:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4685:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4691:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4691:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4681:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4681:3:10"
																},
																"nativeSrc": "4681:16:10",
																"nodeType": "YulFunctionCall",
																"src": "4681:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4660:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "4660:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4587:117:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4625:4:10",
														"nodeType": "YulTypedName",
														"src": "4625:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4631:5:10",
														"nodeType": "YulTypedName",
														"src": "4631:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4641:8:10",
														"nodeType": "YulTypedName",
														"src": "4641:8:10",
														"type": ""
													}
												],
												"src": "4587:117:10"
											},
											{
												"body": {
													"nativeSrc": "4761:118:10",
													"nodeType": "YulBlock",
													"src": "4761:118:10",
													"statements": [
														{
															"nativeSrc": "4771:68:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4771:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4820:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4820:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4823:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4823:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4816:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4816:3:10"
																				},
																				"nativeSrc": "4816:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4816:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4835:1:10",
																						"nodeType": "YulLiteral",
																						"src": "4835:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4831:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4831:3:10"
																				},
																				"nativeSrc": "4831:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4831:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4787:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "4787:28:10"
																		},
																		"nativeSrc": "4787:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4787:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4783:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4783:3:10"
																},
																"nativeSrc": "4783:56:10",
																"nodeType": "YulFunctionCall",
																"src": "4783:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4775:4:10",
																	"nodeType": "YulTypedName",
																	"src": "4775:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4848:25:10",
															"nodeType": "YulAssignment",
															"src": "4848:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4862:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4862:4:10"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4868:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4868:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4858:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4858:3:10"
																},
																"nativeSrc": "4858:15:10",
																"nodeType": "YulFunctionCall",
																"src": "4858:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4848:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4848:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4710:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4738:4:10",
														"nodeType": "YulTypedName",
														"src": "4738:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4744:5:10",
														"nodeType": "YulTypedName",
														"src": "4744:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4754:6:10",
														"nodeType": "YulTypedName",
														"src": "4754:6:10",
														"type": ""
													}
												],
												"src": "4710:169:10"
											},
											{
												"body": {
													"nativeSrc": "4965:214:10",
													"nodeType": "YulBlock",
													"src": "4965:214:10",
													"statements": [
														{
															"nativeSrc": "5098:37:10",
															"nodeType": "YulAssignment",
															"src": "5098:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5125:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5125:4:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "5131:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5131:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "5106:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "5106:18:10"
																},
																"nativeSrc": "5106:29:10",
																"nodeType": "YulFunctionCall",
																"src": "5106:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "5098:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5098:4:10"
																}
															]
														},
														{
															"nativeSrc": "5144:29:10",
															"nodeType": "YulAssignment",
															"src": "5144:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5155:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5155:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "5165:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5165:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "5168:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "5168:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "5161:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5161:3:10"
																		},
																		"nativeSrc": "5161:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5161:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "5152:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5152:2:10"
																},
																"nativeSrc": "5152:21:10",
																"nodeType": "YulFunctionCall",
																"src": "5152:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "5144:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5144:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4884:295:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4946:4:10",
														"nodeType": "YulTypedName",
														"src": "4946:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4952:3:10",
														"nodeType": "YulTypedName",
														"src": "4952:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4960:4:10",
														"nodeType": "YulTypedName",
														"src": "4960:4:10",
														"type": ""
													}
												],
												"src": "4884:295:10"
											},
											{
												"body": {
													"nativeSrc": "5276:1303:10",
													"nodeType": "YulBlock",
													"src": "5276:1303:10",
													"statements": [
														{
															"nativeSrc": "5287:51:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5287:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "5334:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5334:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "5301:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "5301:32:10"
																},
																"nativeSrc": "5301:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5301:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "5291:6:10",
																	"nodeType": "YulTypedName",
																	"src": "5291:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5423:22:10",
																"nodeType": "YulBlock",
																"src": "5423:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5425:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "5425:16:10"
																			},
																			"nativeSrc": "5425:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5425:18:10"
																		},
																		"nativeSrc": "5425:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5425:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5395:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5395:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5403:18:10",
																		"nodeType": "YulLiteral",
																		"src": "5403:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5392:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5392:2:10"
																},
																"nativeSrc": "5392:30:10",
																"nodeType": "YulFunctionCall",
																"src": "5392:30:10"
															},
															"nativeSrc": "5389:56:10",
															"nodeType": "YulIf",
															"src": "5389:56:10"
														},
														{
															"nativeSrc": "5455:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5455:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5501:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "5501:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5495:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "5495:5:10"
																		},
																		"nativeSrc": "5495:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5495:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5469:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "5469:25:10"
																},
																"nativeSrc": "5469:38:10",
																"nodeType": "YulFunctionCall",
																"src": "5469:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5459:6:10",
																	"nodeType": "YulTypedName",
																	"src": "5459:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5600:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "5600:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5606:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5606:6:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5614:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5614:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5554:45:10",
																	"nodeType": "YulIdentifier",
																	"src": "5554:45:10"
																},
																"nativeSrc": "5554:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5554:67:10"
															},
															"nativeSrc": "5554:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "5554:67:10"
														},
														{
															"nativeSrc": "5631:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "5631:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "5648:1:10",
																"nodeType": "YulLiteral",
																"src": "5648:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5635:9:10",
																	"nodeType": "YulTypedName",
																	"src": "5635:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5659:17:10",
															"nodeType": "YulAssignment",
															"src": "5659:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "5672:4:10",
																"nodeType": "YulLiteral",
																"src": "5672:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5659:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "5659:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5723:611:10",
																		"nodeType": "YulBlock",
																		"src": "5723:611:10",
																		"statements": [
																			{
																				"nativeSrc": "5737:37:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5737:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5756:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "5756:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5768:4:10",
																									"nodeType": "YulLiteral",
																									"src": "5768:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5764:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "5764:3:10"
																							},
																							"nativeSrc": "5764:9:10",
																							"nodeType": "YulFunctionCall",
																							"src": "5764:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5752:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "5752:3:10"
																					},
																					"nativeSrc": "5752:22:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5752:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5741:7:10",
																						"nodeType": "YulTypedName",
																						"src": "5741:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5788:51:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5788:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5834:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "5834:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5802:31:10",
																						"nodeType": "YulIdentifier",
																						"src": "5802:31:10"
																					},
																					"nativeSrc": "5802:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5802:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5792:6:10",
																						"nodeType": "YulTypedName",
																						"src": "5792:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5852:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5852:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5861:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5861:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5856:1:10",
																						"nodeType": "YulTypedName",
																						"src": "5856:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5920:163:10",
																					"nodeType": "YulBlock",
																					"src": "5920:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5945:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "5945:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5963:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "5963:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5968:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "5968:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5959:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "5959:3:10"
																												},
																												"nativeSrc": "5959:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "5959:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5953:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "5953:5:10"
																										},
																										"nativeSrc": "5953:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "5953:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5938:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "5938:6:10"
																								},
																								"nativeSrc": "5938:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "5938:42:10"
																							},
																							"nativeSrc": "5938:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "5938:42:10"
																						},
																						{
																							"nativeSrc": "5997:24:10",
																							"nodeType": "YulAssignment",
																							"src": "5997:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6011:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "6011:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6019:1:10",
																										"nodeType": "YulLiteral",
																										"src": "6019:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6007:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "6007:3:10"
																								},
																								"nativeSrc": "6007:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6007:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5997:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "5997:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "6038:31:10",
																							"nodeType": "YulAssignment",
																							"src": "6038:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "6055:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "6055:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "6066:2:10",
																										"nodeType": "YulLiteral",
																										"src": "6066:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "6051:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "6051:3:10"
																								},
																								"nativeSrc": "6051:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6051:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "6038:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "6038:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5886:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "5886:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5889:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "5889:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5883:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "5883:2:10"
																					},
																					"nativeSrc": "5883:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5883:14:10"
																				},
																				"nativeSrc": "5875:208:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5898:21:10",
																					"nodeType": "YulBlock",
																					"src": "5898:21:10",
																					"statements": [
																						{
																							"nativeSrc": "5900:17:10",
																							"nodeType": "YulAssignment",
																							"src": "5900:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5909:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "5909:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5912:4:10",
																										"nodeType": "YulLiteral",
																										"src": "5912:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5905:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "5905:3:10"
																								},
																								"nativeSrc": "5905:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "5905:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5900:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "5900:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5879:3:10",
																					"nodeType": "YulBlock",
																					"src": "5879:3:10",
																					"statements": []
																				},
																				"src": "5875:208:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "6119:156:10",
																					"nodeType": "YulBlock",
																					"src": "6119:156:10",
																					"statements": [
																						{
																							"nativeSrc": "6137:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "6137:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6164:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "6164:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6169:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "6169:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6160:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "6160:3:10"
																										},
																										"nativeSrc": "6160:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "6160:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6154:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "6154:5:10"
																								},
																								"nativeSrc": "6154:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6154:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "6141:9:10",
																									"nodeType": "YulTypedName",
																									"src": "6141:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "6204:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "6204:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "6231:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "6231:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "6246:6:10",
																														"nodeType": "YulIdentifier",
																														"src": "6246:6:10"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "6254:4:10",
																														"nodeType": "YulLiteral",
																														"src": "6254:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "6242:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "6242:3:10"
																												},
																												"nativeSrc": "6242:17:10",
																												"nodeType": "YulFunctionCall",
																												"src": "6242:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "6212:18:10",
																											"nodeType": "YulIdentifier",
																											"src": "6212:18:10"
																										},
																										"nativeSrc": "6212:48:10",
																										"nodeType": "YulFunctionCall",
																										"src": "6212:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "6197:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "6197:6:10"
																								},
																								"nativeSrc": "6197:64:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6197:64:10"
																							},
																							"nativeSrc": "6197:64:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "6197:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "6102:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "6102:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "6111:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "6111:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "6099:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "6099:2:10"
																					},
																					"nativeSrc": "6099:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6099:19:10"
																				},
																				"nativeSrc": "6096:179:10",
																				"nodeType": "YulIf",
																				"src": "6096:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6295:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "6295:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "6309:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "6309:6:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "6317:1:10",
																											"nodeType": "YulLiteral",
																											"src": "6317:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "6305:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "6305:3:10"
																									},
																									"nativeSrc": "6305:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "6305:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "6321:1:10",
																									"nodeType": "YulLiteral",
																									"src": "6321:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "6301:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "6301:3:10"
																							},
																							"nativeSrc": "6301:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "6301:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6288:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6288:6:10"
																					},
																					"nativeSrc": "6288:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6288:36:10"
																				},
																				"nativeSrc": "6288:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "6288:36:10"
																			}
																		]
																	},
																	"nativeSrc": "5716:618:10",
																	"nodeType": "YulCase",
																	"src": "5716:618:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5721:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5721:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "6351:222:10",
																		"nodeType": "YulBlock",
																		"src": "6351:222:10",
																		"statements": [
																			{
																				"nativeSrc": "6365:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "6365:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "6378:1:10",
																					"nodeType": "YulLiteral",
																					"src": "6378:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "6369:5:10",
																						"nodeType": "YulTypedName",
																						"src": "6369:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6402:67:10",
																					"nodeType": "YulBlock",
																					"src": "6402:67:10",
																					"statements": [
																						{
																							"nativeSrc": "6420:35:10",
																							"nodeType": "YulAssignment",
																							"src": "6420:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6439:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "6439:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6444:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "6444:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6435:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "6435:3:10"
																										},
																										"nativeSrc": "6435:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "6435:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6429:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "6429:5:10"
																								},
																								"nativeSrc": "6429:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "6429:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6420:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "6420:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6395:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "6395:6:10"
																				},
																				"nativeSrc": "6392:77:10",
																				"nodeType": "YulIf",
																				"src": "6392:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6489:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "6489:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6548:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "6548:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6555:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "6555:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6495:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "6495:52:10"
																							},
																							"nativeSrc": "6495:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "6495:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6482:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6482:6:10"
																					},
																					"nativeSrc": "6482:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6482:81:10"
																				},
																				"nativeSrc": "6482:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "6482:81:10"
																			}
																		]
																	},
																	"nativeSrc": "6343:230:10",
																	"nodeType": "YulCase",
																	"src": "6343:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5696:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5696:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5704:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5704:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5693:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "5693:2:10"
																},
																"nativeSrc": "5693:14:10",
																"nodeType": "YulFunctionCall",
																"src": "5693:14:10"
															},
															"nativeSrc": "5686:887:10",
															"nodeType": "YulSwitch",
															"src": "5686:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "5184:1395:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5265:4:10",
														"nodeType": "YulTypedName",
														"src": "5265:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "5271:3:10",
														"nodeType": "YulTypedName",
														"src": "5271:3:10",
														"type": ""
													}
												],
												"src": "5184:1395:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052601e600a55610e10600d5534801561001a575f80fd5b50604051613695380380613695833981810160405281019061003c919061026c565b6040518060400160405280601381526020017f414d4d204c697175696469747920546f6b656e000000000000000000000000008152506040518060400160405280600581526020017f414d4d4c5400000000000000000000000000000000000000000000000000000081525081600390816100b791906104e4565b5080600490816100c791906104e4565b50505060016005819055508160065f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060075f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600c33908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506105b3565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61023b82610212565b9050919050565b61024b81610231565b8114610255575f80fd5b50565b5f8151905061026681610242565b92915050565b5f80604083850312156102825761028161020e565b5b5f61028f85828601610258565b92505060206102a085828601610258565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061032557607f821691505b602082108103610338576103376102e1565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f6008830261039a7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261035f565b6103a4868361035f565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6103e86103e36103de846103bc565b6103c5565b6103bc565b9050919050565b5f819050919050565b610401836103ce565b61041561040d826103ef565b84845461036b565b825550505050565b5f90565b61042961041d565b6104348184846103f8565b505050565b5b818110156104575761044c5f82610421565b60018101905061043a565b5050565b601f82111561049c5761046d8161033e565b61047684610350565b81016020851015610485578190505b61049961049185610350565b830182610439565b50505b505050565b5f82821c905092915050565b5f6104bc5f19846008026104a1565b1980831691505092915050565b5f6104d483836104ad565b9150826002028217905092915050565b6104ed826102aa565b67ffffffffffffffff811115610506576105056102b4565b5b610510825461030e565b61051b82828561045b565b5f60209050601f83116001811461054c575f841561053a578287015190505b61054485826104c9565b8655506105ab565b601f19841661055a8661033e565b5f5b828110156105815784890151825560018201915060208501945060208101905061055c565b8683101561059e578489015161059a601f8916826104ad565b8355505b6001600288020188555050505b505050505050565b6130d5806105c05f395ff3fe608060405234801561000f575f80fd5b50600436106101c2575f3560e01c806358d50f0a116100f7578063a9059cbb11610095578063c7f8a78d1161006f578063c7f8a78d14610536578063dd62ed3e14610566578063e3eece2614610596578063eecdac88146105c6576101c2565b8063a9059cbb146104ca578063b7d19fc4146104fa578063b8606eef14610518576101c2565b806395d89b41116100d157806395d89b411461042d5780639c8f9f231461044b5780639cd441da1461047c5780639d6f09c1146104ac576101c2565b806358d50f0a146103c357806369fe0e2d146103e157806370a08231146103fd576101c2565b806316dc165b11610164578063310183391161013e578063310183391461033b578063313ce5671461036b5780633c1d5df0146103895780633c4a25d0146103a7576101c2565b806316dc165b146102cf57806318160ddd146102ed57806323b872dd1461030b576101c2565b80630902f1ac116101a05780630902f1ac14610244578063095ea7b31461026357806310f669b314610293578063126082cf146102b1576101c2565b806302aac7b2146101c6578063054d50d4146101f657806306fdde0314610226575b5f80fd5b6101e060048036038101906101db919061244f565b6105e2565b6040516101ed91906124b9565b60405180910390f35b610210600480360381019061020b91906124d2565b61061d565b60405161021d9190612531565b60405180910390f35b61022e61067f565b60405161023b91906125ba565b60405180910390f35b61024c61070f565b60405161025a9291906125da565b60405180910390f35b61027d6004803603810190610278919061262b565b61071f565b60405161028a9190612683565b60405180910390f35b61029b610741565b6040516102a89190612531565b60405180910390f35b6102b9610747565b6040516102c69190612531565b60405180910390f35b6102d761074d565b6040516102e491906126f7565b60405180910390f35b6102f5610772565b6040516103029190612531565b60405180910390f35b61032560048036038101906103209190612710565b61077b565b6040516103329190612683565b60405180910390f35b61035560048036038101906103509190612760565b6107a9565b6040516103629190612531565b60405180910390f35b6103736109be565b60405161038091906127b9565b60405180910390f35b6103916109c6565b60405161039e9190612531565b60405180910390f35b6103c160048036038101906103bc91906127d2565b6109cc565b005b6103cb610c48565b6040516103d89190612531565b60405180910390f35b6103fb60048036038101906103f6919061244f565b610c4e565b005b610417600480360381019061041291906127d2565b610d60565b6040516104249190612531565b60405180910390f35b610435610da5565b60405161044291906125ba565b60405180910390f35b6104656004803603810190610460919061244f565b610e35565b6040516104739291906125da565b60405180910390f35b61049660048036038101906104919190612760565b610ff4565b6040516104a39190612531565b60405180910390f35b6104b461125c565b6040516104c19190612531565b60405180910390f35b6104e460048036038101906104df919061262b565b611262565b6040516104f19190612683565b60405180910390f35b610502611284565b60405161050f91906126f7565b60405180910390f35b6105206112a9565b60405161052d9190612531565b60405180910390f35b610550600480360381019061054b9190612760565b6112af565b60405161055d9190612531565b60405180910390f35b610580600480360381019061057b91906127fd565b6114c4565b60405161058d9190612531565b60405180910390f35b6105b060048036038101906105ab91906127d2565b611546565b6040516105bd9190612683565b60405180910390f35b6105e060048036038101906105db91906127d2565b611563565b005b600c81815481106105f1575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80600a5461271061062f9190612868565b8561063a919061289b565b90505f8382610649919061289b565b90505f826127108761065b919061289b565b61066591906128dc565b90508082610673919061293c565b93505050509392505050565b60606003805461068e90612999565b80601f01602080910402602001604051908101604052809291908181526020018280546106ba90612999565b80156107055780601f106106dc57610100808354040283529160200191610705565b820191905f5260205f20905b8154815290600101906020018083116106e857829003601f168201915b5050505050905090565b5f80600854600954915091509091565b5f806107296118f7565b90506107368185856118fe565b600191505092915050565b600f5481565b61271081565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f600254905090565b5f806107856118f7565b9050610792858285611910565b61079d8585856119a2565b60019150509392505050565b5f6107b2611a92565b5f83116107f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107eb90612a13565b60405180910390fd5b6108038360095460085461061d565b905081811015610848576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083f90612a7b565b60405180910390fd5b61089633308560075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611ae1909392919063ffffffff16565b6108e2338260065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611b639092919063ffffffff16565b8260095f8282546108f391906128dc565b925050819055508060085f82825461090b9190612868565b9250508190555061091a611be2565b3373ffffffffffffffffffffffffffffffffffffffff167f053d794b2310b8d186a24ae24a65ee066983a52a6efa6bd3df09a7601a3cb4f3848360075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516109a89493929190612a99565b60405180910390a26109b8611c55565b92915050565b5f6012905090565b600d5481565b600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610a55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4c90612b26565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ac3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aba90612b8e565b60405180910390fd5b600b5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610b4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4490612bf6565b60405180910390fd5b6001600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600c81908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fdc5a48d79e2e147530ff63ecdbed5a5a66adb9d5cf339384d5d076da197c40b560405160405180910390a250565b600e5481565b600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610cd7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cce90612b26565b60405180910390fd5b6127108110610d1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1290612c5e565b60405180910390fd5b7f528d9479e9f9889a87a3c30c7f7ba537e5e59c4c85a37733b16e57c62df61302600a5482604051610d4e9291906125da565b60405180910390a180600a8190555050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b606060048054610db490612999565b80601f0160208091040260200160405190810160405280929190818152602001828054610de090612999565b8015610e2b5780601f10610e0257610100808354040283529160200191610e2b565b820191905f5260205f20905b815481529060010190602001808311610e0e57829003601f168201915b5050505050905090565b5f80610e3f611a92565b5f8311610e81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7890612cc6565b60405180910390fd5b5f610e8a610772565b90508060085485610e9b919061289b565b610ea5919061293c565b92508060095485610eb6919061289b565b610ec0919061293c565b9150610ecc3385611c5f565b8260085f828254610edd9190612868565b925050819055508160095f828254610ef59190612868565b92505081905550610f48338460065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611b639092919063ffffffff16565b610f94338360075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611b639092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f1dc8bb69df2b8e91fbdcbfcf93d951b3f0000f085a95fe3f7946d6161439245d848487604051610fde93929190612ce4565b60405180910390a250610fef611c55565b915091565b5f610ffd611a92565b61104b33308560065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611ae1909392919063ffffffff16565b61109933308460075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611ae1909392919063ffffffff16565b5f60085411806110aa57505f600954115b1561110c57600854826110bd919061289b565b600954846110cb919061289b565b1461110b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110290612d89565b60405180910390fd5b5b5f611115610772565b036111355761112e8284611129919061289b565b611cde565b9050611180565b61117d600854611143610772565b8561114e919061289b565b611158919061293c565b600954611163610772565b8561116e919061289b565b611178919061293c565b611d55565b90505b5f81116111c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b990612e17565b60405180910390fd5b6111cc3382611d6d565b8260085f8282546111dd91906128dc565b925050819055508160095f8282546111f591906128dc565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e84848460405161124693929190612ce4565b60405180910390a2611256611c55565b92915050565b60105481565b5f8061126c6118f7565b90506112798185856119a2565b600191505092915050565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b5f6112b8611a92565b5f83116112fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f190612a13565b60405180910390fd5b6113098360085460095461061d565b90508181101561134e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134590612a7b565b60405180910390fd5b61139c33308560065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611ae1909392919063ffffffff16565b6113e8338260075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611b639092919063ffffffff16565b8260085f8282546113f991906128dc565b925050819055508060095f8282546114119190612868565b92505081905550611420611be2565b3373ffffffffffffffffffffffffffffffffffffffff167f053d794b2310b8d186a24ae24a65ee066983a52a6efa6bd3df09a7601a3cb4f3848360065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516114ae9493929190612a99565b60405180910390a26114be611c55565b92915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b600b602052805f5260405f205f915054906101000a900460ff1681565b600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166115ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e390612b26565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361165a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165190612b8e565b60405180910390fd5b600b5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166116e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116da90612e7f565b60405180910390fd5b5f600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505f5b600c805490508110156118b0578173ffffffffffffffffffffffffffffffffffffffff16600c828154811061177157611770612e9d565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036118a357600c6001600c805490506117c89190612868565b815481106117d9576117d8612e9d565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600c828154811061181557611814612e9d565b5b905f5260205f20015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600c80548061186c5761186b612eca565b5b600190038181905f5260205f20015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556118b0565b8080600101915050611739565b508073ffffffffffffffffffffffffffffffffffffffff167f1ebe834e73d60a5fec822c1e1727d34bc79f2ad977ed504581cc1822fe20fb5b60405160405180910390a250565b5f33905090565b61190b8383836001611dec565b505050565b5f61191b84846114c4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461199c578181101561198d578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161198493929190612ef7565b60405180910390fd5b61199b84848484035f611dec565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a12575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611a0991906124b9565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a82575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611a7991906124b9565b60405180910390fd5b611a8d838383611fbb565b505050565b600260055403611ad7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ace90612f76565b60405180910390fd5b6002600581905550565b611b5d848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611b1693929190612f94565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506121d4565b50505050565b611bdd838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611b96929190612fc9565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506121d4565b505050565b600d54601054611bf291906128dc565b4210611c5357600854600e81905550600954600f81905550426010819055507f9cfe07a59ebb9a772e1fee2abd40b53001de7c2f0b2e713de333f564118c32c4600e54600f54601054604051611c4a93929190612ce4565b60405180910390a15b565b6001600581905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611ccf575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611cc691906124b9565b60405180910390fd5b611cda825f83611fbb565b5050565b5f6003821115611d43578190505f6001600284611cfb919061293c565b611d0591906128dc565b90505b81811015611d3d578091506002818285611d22919061293c565b611d2c91906128dc565b611d36919061293c565b9050611d08565b50611d50565b5f8214611d4f57600190505b5b919050565b5f818310611d635781611d65565b825b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611ddd575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611dd491906124b9565b60405180910390fd5b611de85f8383611fbb565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611e5c575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611e5391906124b9565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611ecc575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611ec391906124b9565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611fb5578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611fac9190612531565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361200b578060025f828254611fff91906128dc565b925050819055506120d9565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015612094578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161208b93929190612ef7565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612120578060025f828254039250508190555061216a565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516121c79190612531565b60405180910390a3505050565b5f6121fe828473ffffffffffffffffffffffffffffffffffffffff1661226990919063ffffffff16565b90505f815114158015612222575080806020019051810190612220919061301a565b155b1561226457826040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161225b91906124b9565b60405180910390fd5b505050565b606061227683835f61227e565b905092915050565b6060814710156122c557306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016122bc91906124b9565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1684866040516122ed9190613089565b5f6040518083038185875af1925050503d805f8114612327576040519150601f19603f3d011682016040523d82523d5f602084013e61232c565b606091505b509150915061233c868383612347565b925050509392505050565b60608261235c57612357826123d4565b6123cc565b5f825114801561238257505f8473ffffffffffffffffffffffffffffffffffffffff163b145b156123c457836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016123bb91906124b9565b60405180910390fd5b8190506123cd565b5b9392505050565b5f815111156123e65780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80fd5b5f819050919050565b61242e8161241c565b8114612438575f80fd5b50565b5f8135905061244981612425565b92915050565b5f6020828403121561246457612463612418565b5b5f6124718482850161243b565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6124a38261247a565b9050919050565b6124b381612499565b82525050565b5f6020820190506124cc5f8301846124aa565b92915050565b5f805f606084860312156124e9576124e8612418565b5b5f6124f68682870161243b565b93505060206125078682870161243b565b92505060406125188682870161243b565b9150509250925092565b61252b8161241c565b82525050565b5f6020820190506125445f830184612522565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61258c8261254a565b6125968185612554565b93506125a6818560208601612564565b6125af81612572565b840191505092915050565b5f6020820190508181035f8301526125d28184612582565b905092915050565b5f6040820190506125ed5f830185612522565b6125fa6020830184612522565b9392505050565b61260a81612499565b8114612614575f80fd5b50565b5f8135905061262581612601565b92915050565b5f806040838503121561264157612640612418565b5b5f61264e85828601612617565b925050602061265f8582860161243b565b9150509250929050565b5f8115159050919050565b61267d81612669565b82525050565b5f6020820190506126965f830184612674565b92915050565b5f819050919050565b5f6126bf6126ba6126b58461247a565b61269c565b61247a565b9050919050565b5f6126d0826126a5565b9050919050565b5f6126e1826126c6565b9050919050565b6126f1816126d7565b82525050565b5f60208201905061270a5f8301846126e8565b92915050565b5f805f6060848603121561272757612726612418565b5b5f61273486828701612617565b935050602061274586828701612617565b92505060406127568682870161243b565b9150509250925092565b5f806040838503121561277657612775612418565b5b5f6127838582860161243b565b92505060206127948582860161243b565b9150509250929050565b5f60ff82169050919050565b6127b38161279e565b82525050565b5f6020820190506127cc5f8301846127aa565b92915050565b5f602082840312156127e7576127e6612418565b5b5f6127f484828501612617565b91505092915050565b5f806040838503121561281357612812612418565b5b5f61282085828601612617565b925050602061283185828601612617565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6128728261241c565b915061287d8361241c565b92508282039050818111156128955761289461283b565b5b92915050565b5f6128a58261241c565b91506128b08361241c565b92508282026128be8161241c565b915082820484148315176128d5576128d461283b565b5b5092915050565b5f6128e68261241c565b91506128f18361241c565b92508282019050808211156129095761290861283b565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6129468261241c565b91506129518361241c565b9250826129615761296061290f565b5b828204905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806129b057607f821691505b6020821081036129c3576129c261296c565b5b50919050565b7f414d4d3a20496e76616c696420696e70757420616d6f756e74000000000000005f82015250565b5f6129fd601983612554565b9150612a08826129c9565b602082019050919050565b5f6020820190508181035f830152612a2a816129f1565b9050919050565b7f414d4d3a20496e73756666696369656e74206f757470757420616d6f756e74005f82015250565b5f612a65601f83612554565b9150612a7082612a31565b602082019050919050565b5f6020820190508181035f830152612a9281612a59565b9050919050565b5f608082019050612aac5f830187612522565b612ab96020830186612522565b612ac660408301856124aa565b612ad360608301846124aa565b95945050505050565b7f414d4d3a2063616c6c6572206973206e6f74206120676f7665726e6f720000005f82015250565b5f612b10601d83612554565b9150612b1b82612adc565b602082019050919050565b5f6020820190508181035f830152612b3d81612b04565b9050919050565b7f414d4d3a20496e76616c696420676f7665726e6f7220616464726573730000005f82015250565b5f612b78601d83612554565b9150612b8382612b44565b602082019050919050565b5f6020820190508181035f830152612ba581612b6c565b9050919050565b7f414d4d3a20416c7265616479206120676f7665726e6f720000000000000000005f82015250565b5f612be0601783612554565b9150612beb82612bac565b602082019050919050565b5f6020820190508181035f830152612c0d81612bd4565b9050919050565b7f414d4d3a20496e76616c696420666565000000000000000000000000000000005f82015250565b5f612c48601083612554565b9150612c5382612c14565b602082019050919050565b5f6020820190508181035f830152612c7581612c3c565b9050919050565b7f414d4d3a20496e76616c6964206c697175696469747920616d6f756e740000005f82015250565b5f612cb0601d83612554565b9150612cbb82612c7c565b602082019050919050565b5f6020820190508181035f830152612cdd81612ca4565b9050919050565b5f606082019050612cf75f830186612522565b612d046020830185612522565b612d116040830184612522565b949350505050565b7f414d4d3a20556e62616c616e636564206c69717569646974792070726f7669645f8201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b5f612d73602283612554565b9150612d7e82612d19565b604082019050919050565b5f6020820190508181035f830152612da081612d67565b9050919050565b7f414d4d3a20496e73756666696369656e74206c69717569646974792070726f765f8201527f6964656400000000000000000000000000000000000000000000000000000000602082015250565b5f612e01602483612554565b9150612e0c82612da7565b604082019050919050565b5f6020820190508181035f830152612e2e81612df5565b9050919050565b7f414d4d3a204e6f74206120676f7665726e6f72000000000000000000000000005f82015250565b5f612e69601383612554565b9150612e7482612e35565b602082019050919050565b5f6020820190508181035f830152612e9681612e5d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffd5b5f606082019050612f0a5f8301866124aa565b612f176020830185612522565b612f246040830184612522565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612f60601f83612554565b9150612f6b82612f2c565b602082019050919050565b5f6020820190508181035f830152612f8d81612f54565b9050919050565b5f606082019050612fa75f8301866124aa565b612fb460208301856124aa565b612fc16040830184612522565b949350505050565b5f604082019050612fdc5f8301856124aa565b612fe96020830184612522565b9392505050565b612ff981612669565b8114613003575f80fd5b50565b5f8151905061301481612ff0565b92915050565b5f6020828403121561302f5761302e612418565b5b5f61303c84828501613006565b91505092915050565b5f81519050919050565b5f81905092915050565b5f61306382613045565b61306d818561304f565b935061307d818560208601612564565b80840191505092915050565b5f6130948284613059565b91508190509291505056fea2646970667358221220a085248112c02c3272b66eb04c4c555c4a703db89e5ded1e477594eed216c23864736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x1E PUSH1 0xA SSTORE PUSH2 0xE10 PUSH1 0xD SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x1A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x3695 CODESIZE SUB DUP1 PUSH2 0x3695 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x3C SWAP2 SWAP1 PUSH2 0x26C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x13 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x414D4D204C697175696469747920546F6B656E00000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x414D4D4C54000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0xB7 SWAP2 SWAP1 PUSH2 0x4E4 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x4E4 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x6 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x7 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC CALLER SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x5B3 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x23B DUP3 PUSH2 0x212 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24B DUP2 PUSH2 0x231 JUMP JUMPDEST DUP2 EQ PUSH2 0x255 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x266 DUP2 PUSH2 0x242 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x282 JUMPI PUSH2 0x281 PUSH2 0x20E JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28F DUP6 DUP3 DUP7 ADD PUSH2 0x258 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2A0 DUP6 DUP3 DUP7 ADD PUSH2 0x258 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x325 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x338 JUMPI PUSH2 0x337 PUSH2 0x2E1 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x39A PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x35F JUMP JUMPDEST PUSH2 0x3A4 DUP7 DUP4 PUSH2 0x35F JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3E8 PUSH2 0x3E3 PUSH2 0x3DE DUP5 PUSH2 0x3BC JUMP JUMPDEST PUSH2 0x3C5 JUMP JUMPDEST PUSH2 0x3BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x401 DUP4 PUSH2 0x3CE JUMP JUMPDEST PUSH2 0x415 PUSH2 0x40D DUP3 PUSH2 0x3EF JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x36B JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x429 PUSH2 0x41D JUMP JUMPDEST PUSH2 0x434 DUP2 DUP5 DUP5 PUSH2 0x3F8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x457 JUMPI PUSH2 0x44C PUSH0 DUP3 PUSH2 0x421 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x43A JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x49C JUMPI PUSH2 0x46D DUP2 PUSH2 0x33E JUMP JUMPDEST PUSH2 0x476 DUP5 PUSH2 0x350 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x485 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x499 PUSH2 0x491 DUP6 PUSH2 0x350 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x439 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4BC PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x4A1 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4D4 DUP4 DUP4 PUSH2 0x4AD JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x4ED DUP3 PUSH2 0x2AA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x506 JUMPI PUSH2 0x505 PUSH2 0x2B4 JUMP JUMPDEST JUMPDEST PUSH2 0x510 DUP3 SLOAD PUSH2 0x30E JUMP JUMPDEST PUSH2 0x51B DUP3 DUP3 DUP6 PUSH2 0x45B JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x54C JUMPI PUSH0 DUP5 ISZERO PUSH2 0x53A JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x544 DUP6 DUP3 PUSH2 0x4C9 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x5AB JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x55A DUP7 PUSH2 0x33E JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x581 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x55C JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x59E JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x59A PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x4AD JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x30D5 DUP1 PUSH2 0x5C0 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x58D50F0A GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC7F8A78D GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC7F8A78D EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x566 JUMPI DUP1 PUSH4 0xE3EECE26 EQ PUSH2 0x596 JUMPI DUP1 PUSH4 0xEECDAC88 EQ PUSH2 0x5C6 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0xB7D19FC4 EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0xB8606EEF EQ PUSH2 0x518 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0x9D6F09C1 EQ PUSH2 0x4AC JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x58D50F0A EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x69FE0E2D EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3FD JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x16DC165B GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x31018339 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x31018339 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0x3C1D5DF0 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x3C4A25D0 EQ PUSH2 0x3A7 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x16DC165B EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x30B JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x902F1AC GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x10F669B3 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x126082CF EQ PUSH2 0x2B1 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x2AAC7B2 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x54D50D4 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x226 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x244F JUMP JUMPDEST PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x24B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x24D2 JUMP JUMPDEST PUSH2 0x61D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH2 0x67F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x25BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24C PUSH2 0x70F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP3 SWAP2 SWAP1 PUSH2 0x25DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x262B JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x2683 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH2 0x741 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B9 PUSH2 0x747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D7 PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x26F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH2 0x772 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x2710 JUMP JUMPDEST PUSH2 0x77B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x2683 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x2760 JUMP JUMPDEST PUSH2 0x7A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x373 PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x27B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x391 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x27D2 JUMP JUMPDEST PUSH2 0x9CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CB PUSH2 0xC48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x244F JUMP JUMPDEST PUSH2 0xC4E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x417 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x27D2 JUMP JUMPDEST PUSH2 0xD60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x435 PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x442 SWAP2 SWAP1 PUSH2 0x25BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x465 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x244F JUMP JUMPDEST PUSH2 0xE35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x473 SWAP3 SWAP2 SWAP1 PUSH2 0x25DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x496 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x2760 JUMP JUMPDEST PUSH2 0xFF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B4 PUSH2 0x125C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x262B JUMP JUMPDEST PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F1 SWAP2 SWAP1 PUSH2 0x2683 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x502 PUSH2 0x1284 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x26F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x520 PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52D SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x550 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x2760 JUMP JUMPDEST PUSH2 0x12AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x580 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57B SWAP2 SWAP1 PUSH2 0x27FD JUMP JUMPDEST PUSH2 0x14C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58D SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5AB SWAP2 SWAP1 PUSH2 0x27D2 JUMP JUMPDEST PUSH2 0x1546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5BD SWAP2 SWAP1 PUSH2 0x2683 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0x27D2 JUMP JUMPDEST PUSH2 0x1563 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x5F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xA SLOAD PUSH2 0x2710 PUSH2 0x62F SWAP2 SWAP1 PUSH2 0x2868 JUMP JUMPDEST DUP6 PUSH2 0x63A SWAP2 SWAP1 PUSH2 0x289B JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 DUP3 PUSH2 0x649 SWAP2 SWAP1 PUSH2 0x289B JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0x2710 DUP8 PUSH2 0x65B SWAP2 SWAP1 PUSH2 0x289B JUMP JUMPDEST PUSH2 0x665 SWAP2 SWAP1 PUSH2 0x28DC JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x673 SWAP2 SWAP1 PUSH2 0x293C JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x68E SWAP1 PUSH2 0x2999 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6BA SWAP1 PUSH2 0x2999 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x705 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x705 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6E8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x729 PUSH2 0x18F7 JUMP JUMPDEST SWAP1 POP PUSH2 0x736 DUP2 DUP6 DUP6 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x785 PUSH2 0x18F7 JUMP JUMPDEST SWAP1 POP PUSH2 0x792 DUP6 DUP3 DUP6 PUSH2 0x1910 JUMP JUMPDEST PUSH2 0x79D DUP6 DUP6 DUP6 PUSH2 0x19A2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7B2 PUSH2 0x1A92 JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0x7F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EB SWAP1 PUSH2 0x2A13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x803 DUP4 PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH2 0x61D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x848 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83F SWAP1 PUSH2 0x2A7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x896 CALLER ADDRESS DUP6 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AE1 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x8E2 CALLER DUP3 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B63 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8F3 SWAP2 SWAP1 PUSH2 0x28DC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x90B SWAP2 SWAP1 PUSH2 0x2868 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x91A PUSH2 0x1BE2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x53D794B2310B8D186A24AE24A65EE066983A52A6EFA6BD3DF09A7601A3CB4F3 DUP5 DUP4 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x9A8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x9B8 PUSH2 0x1C55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4C SWAP1 PUSH2 0x2B26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABA SWAP1 PUSH2 0x2B8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB44 SWAP1 PUSH2 0x2BF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDC5A48D79E2E147530FF63ECDBED5A5A66ADB9D5CF339384D5D076DA197C40B5 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xCD7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCE SWAP1 PUSH2 0x2B26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP2 LT PUSH2 0xD1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD12 SWAP1 PUSH2 0x2C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x528D9479E9F9889A87A3C30C7F7BA537E5E59C4C85A37733B16E57C62DF61302 PUSH1 0xA SLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0xD4E SWAP3 SWAP2 SWAP1 PUSH2 0x25DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0xA DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xDB4 SWAP1 PUSH2 0x2999 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDE0 SWAP1 PUSH2 0x2999 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE2B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE02 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE2B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE0E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE3F PUSH2 0x1A92 JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0xE81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE78 SWAP1 PUSH2 0x2CC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xE8A PUSH2 0x772 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x8 SLOAD DUP6 PUSH2 0xE9B SWAP2 SWAP1 PUSH2 0x289B JUMP JUMPDEST PUSH2 0xEA5 SWAP2 SWAP1 PUSH2 0x293C JUMP JUMPDEST SWAP3 POP DUP1 PUSH1 0x9 SLOAD DUP6 PUSH2 0xEB6 SWAP2 SWAP1 PUSH2 0x289B JUMP JUMPDEST PUSH2 0xEC0 SWAP2 SWAP1 PUSH2 0x293C JUMP JUMPDEST SWAP2 POP PUSH2 0xECC CALLER DUP6 PUSH2 0x1C5F JUMP JUMPDEST DUP3 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xEDD SWAP2 SWAP1 PUSH2 0x2868 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xEF5 SWAP2 SWAP1 PUSH2 0x2868 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF48 CALLER DUP5 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B63 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF94 CALLER DUP4 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B63 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1DC8BB69DF2B8E91FBDCBFCF93D951B3F0000F085A95FE3F7946D6161439245D DUP5 DUP5 DUP8 PUSH1 0x40 MLOAD PUSH2 0xFDE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xFEF PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH2 0xFFD PUSH2 0x1A92 JUMP JUMPDEST PUSH2 0x104B CALLER ADDRESS DUP6 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AE1 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1099 CALLER ADDRESS DUP5 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AE1 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD GT DUP1 PUSH2 0x10AA JUMPI POP PUSH0 PUSH1 0x9 SLOAD GT JUMPDEST ISZERO PUSH2 0x110C JUMPI PUSH1 0x8 SLOAD DUP3 PUSH2 0x10BD SWAP2 SWAP1 PUSH2 0x289B JUMP JUMPDEST PUSH1 0x9 SLOAD DUP5 PUSH2 0x10CB SWAP2 SWAP1 PUSH2 0x289B JUMP JUMPDEST EQ PUSH2 0x110B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1102 SWAP1 PUSH2 0x2D89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH0 PUSH2 0x1115 PUSH2 0x772 JUMP JUMPDEST SUB PUSH2 0x1135 JUMPI PUSH2 0x112E DUP3 DUP5 PUSH2 0x1129 SWAP2 SWAP1 PUSH2 0x289B JUMP JUMPDEST PUSH2 0x1CDE JUMP JUMPDEST SWAP1 POP PUSH2 0x1180 JUMP JUMPDEST PUSH2 0x117D PUSH1 0x8 SLOAD PUSH2 0x1143 PUSH2 0x772 JUMP JUMPDEST DUP6 PUSH2 0x114E SWAP2 SWAP1 PUSH2 0x289B JUMP JUMPDEST PUSH2 0x1158 SWAP2 SWAP1 PUSH2 0x293C JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1163 PUSH2 0x772 JUMP JUMPDEST DUP6 PUSH2 0x116E SWAP2 SWAP1 PUSH2 0x289B JUMP JUMPDEST PUSH2 0x1178 SWAP2 SWAP1 PUSH2 0x293C JUMP JUMPDEST PUSH2 0x1D55 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 DUP2 GT PUSH2 0x11C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B9 SWAP1 PUSH2 0x2E17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11CC CALLER DUP3 PUSH2 0x1D6D JUMP JUMPDEST DUP3 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11DD SWAP2 SWAP1 PUSH2 0x28DC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11F5 SWAP2 SWAP1 PUSH2 0x28DC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x64B83944E79C3CE8D4C297411DE637C3E102D064677AAC0C163976EBDCD6F50E DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1246 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1256 PUSH2 0x1C55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x126C PUSH2 0x18F7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1279 DUP2 DUP6 DUP6 PUSH2 0x19A2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x12B8 PUSH2 0x1A92 JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0x12FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F1 SWAP1 PUSH2 0x2A13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1309 DUP4 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x61D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x134E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1345 SWAP1 PUSH2 0x2A7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x139C CALLER ADDRESS DUP6 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AE1 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x13E8 CALLER DUP3 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B63 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x13F9 SWAP2 SWAP1 PUSH2 0x28DC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1411 SWAP2 SWAP1 PUSH2 0x2868 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1420 PUSH2 0x1BE2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x53D794B2310B8D186A24AE24A65EE066983A52A6EFA6BD3DF09A7601A3CB4F3 DUP5 DUP4 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x14AE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x14BE PUSH2 0x1C55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x15EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E3 SWAP1 PUSH2 0x2B26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x165A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1651 SWAP1 PUSH2 0x2B8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x16E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16DA SWAP1 PUSH2 0x2E7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 JUMPDEST PUSH1 0xC DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x18B0 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1771 JUMPI PUSH2 0x1770 PUSH2 0x2E9D JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18A3 JUMPI PUSH1 0xC PUSH1 0x1 PUSH1 0xC DUP1 SLOAD SWAP1 POP PUSH2 0x17C8 SWAP2 SWAP1 PUSH2 0x2868 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x17D9 JUMPI PUSH2 0x17D8 PUSH2 0x2E9D JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1815 JUMPI PUSH2 0x1814 PUSH2 0x2E9D JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC DUP1 SLOAD DUP1 PUSH2 0x186C JUMPI PUSH2 0x186B PUSH2 0x2ECA JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH2 0x18B0 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1739 JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1EBE834E73D60A5FEC822C1E1727D34BC79F2AD977ED504581CC1822FE20FB5B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x190B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1DEC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x191B DUP5 DUP5 PUSH2 0x14C4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x199C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x198D JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1984 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x199B DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1DEC JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A12 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A09 SWAP2 SWAP1 PUSH2 0x24B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A82 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A79 SWAP2 SWAP1 PUSH2 0x24B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A8D DUP4 DUP4 DUP4 PUSH2 0x1FBB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0x1AD7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ACE SWAP1 PUSH2 0x2F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1B5D DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1B16 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x21D4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1BDD DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1B96 SWAP3 SWAP2 SWAP1 PUSH2 0x2FC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x21D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x10 SLOAD PUSH2 0x1BF2 SWAP2 SWAP1 PUSH2 0x28DC JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1C53 JUMPI PUSH1 0x8 SLOAD PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH1 0x9 SLOAD PUSH1 0xF DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x10 DUP2 SWAP1 SSTORE POP PUSH32 0x9CFE07A59EBB9A772E1FEE2ABD40B53001DE7C2F0B2E713DE333F564118C32C4 PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH2 0x1C4A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CCF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC6 SWAP2 SWAP1 PUSH2 0x24B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CDA DUP3 PUSH0 DUP4 PUSH2 0x1FBB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x1D43 JUMPI DUP2 SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x1CFB SWAP2 SWAP1 PUSH2 0x293C JUMP JUMPDEST PUSH2 0x1D05 SWAP2 SWAP1 PUSH2 0x28DC JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D3D JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0x1D22 SWAP2 SWAP1 PUSH2 0x293C JUMP JUMPDEST PUSH2 0x1D2C SWAP2 SWAP1 PUSH2 0x28DC JUMP JUMPDEST PUSH2 0x1D36 SWAP2 SWAP1 PUSH2 0x293C JUMP JUMPDEST SWAP1 POP PUSH2 0x1D08 JUMP JUMPDEST POP PUSH2 0x1D50 JUMP JUMPDEST PUSH0 DUP3 EQ PUSH2 0x1D4F JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x1D63 JUMPI DUP2 PUSH2 0x1D65 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DDD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DD4 SWAP2 SWAP1 PUSH2 0x24B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DE8 PUSH0 DUP4 DUP4 PUSH2 0x1FBB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E5C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E53 SWAP2 SWAP1 PUSH2 0x24B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ECC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EC3 SWAP2 SWAP1 PUSH2 0x24B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1FB5 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1FAC SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x200B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1FFF SWAP2 SWAP1 PUSH2 0x28DC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x20D9 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2094 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x208B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2120 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x216A JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x21C7 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21FE DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2269 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x2222 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2220 SWAP2 SWAP1 PUSH2 0x301A JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x2264 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225B SWAP2 SWAP1 PUSH2 0x24B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2276 DUP4 DUP4 PUSH0 PUSH2 0x227E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x22C5 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22BC SWAP2 SWAP1 PUSH2 0x24B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x22ED SWAP2 SWAP1 PUSH2 0x3089 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2327 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x232C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x233C DUP7 DUP4 DUP4 PUSH2 0x2347 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x235C JUMPI PUSH2 0x2357 DUP3 PUSH2 0x23D4 JUMP JUMPDEST PUSH2 0x23CC JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x2382 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x23C4 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23BB SWAP2 SWAP1 PUSH2 0x24B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x23CD JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x23E6 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x242E DUP2 PUSH2 0x241C JUMP JUMPDEST DUP2 EQ PUSH2 0x2438 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2449 DUP2 PUSH2 0x2425 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2464 JUMPI PUSH2 0x2463 PUSH2 0x2418 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2471 DUP5 DUP3 DUP6 ADD PUSH2 0x243B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24A3 DUP3 PUSH2 0x247A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24B3 DUP2 PUSH2 0x2499 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24CC PUSH0 DUP4 ADD DUP5 PUSH2 0x24AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24E9 JUMPI PUSH2 0x24E8 PUSH2 0x2418 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24F6 DUP7 DUP3 DUP8 ADD PUSH2 0x243B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2507 DUP7 DUP3 DUP8 ADD PUSH2 0x243B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2518 DUP7 DUP3 DUP8 ADD PUSH2 0x243B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x252B DUP2 PUSH2 0x241C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2544 PUSH0 DUP4 ADD DUP5 PUSH2 0x2522 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x258C DUP3 PUSH2 0x254A JUMP JUMPDEST PUSH2 0x2596 DUP2 DUP6 PUSH2 0x2554 JUMP JUMPDEST SWAP4 POP PUSH2 0x25A6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2564 JUMP JUMPDEST PUSH2 0x25AF DUP2 PUSH2 0x2572 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25D2 DUP2 DUP5 PUSH2 0x2582 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x25ED PUSH0 DUP4 ADD DUP6 PUSH2 0x2522 JUMP JUMPDEST PUSH2 0x25FA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2522 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x260A DUP2 PUSH2 0x2499 JUMP JUMPDEST DUP2 EQ PUSH2 0x2614 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2625 DUP2 PUSH2 0x2601 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2641 JUMPI PUSH2 0x2640 PUSH2 0x2418 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x264E DUP6 DUP3 DUP7 ADD PUSH2 0x2617 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x265F DUP6 DUP3 DUP7 ADD PUSH2 0x243B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x267D DUP2 PUSH2 0x2669 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2696 PUSH0 DUP4 ADD DUP5 PUSH2 0x2674 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x26BF PUSH2 0x26BA PUSH2 0x26B5 DUP5 PUSH2 0x247A JUMP JUMPDEST PUSH2 0x269C JUMP JUMPDEST PUSH2 0x247A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x26D0 DUP3 PUSH2 0x26A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x26E1 DUP3 PUSH2 0x26C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26F1 DUP2 PUSH2 0x26D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x270A PUSH0 DUP4 ADD DUP5 PUSH2 0x26E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2727 JUMPI PUSH2 0x2726 PUSH2 0x2418 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2734 DUP7 DUP3 DUP8 ADD PUSH2 0x2617 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2745 DUP7 DUP3 DUP8 ADD PUSH2 0x2617 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2756 DUP7 DUP3 DUP8 ADD PUSH2 0x243B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2776 JUMPI PUSH2 0x2775 PUSH2 0x2418 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2783 DUP6 DUP3 DUP7 ADD PUSH2 0x243B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2794 DUP6 DUP3 DUP7 ADD PUSH2 0x243B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27B3 DUP2 PUSH2 0x279E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27CC PUSH0 DUP4 ADD DUP5 PUSH2 0x27AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27E7 JUMPI PUSH2 0x27E6 PUSH2 0x2418 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27F4 DUP5 DUP3 DUP6 ADD PUSH2 0x2617 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2813 JUMPI PUSH2 0x2812 PUSH2 0x2418 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2820 DUP6 DUP3 DUP7 ADD PUSH2 0x2617 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2831 DUP6 DUP3 DUP7 ADD PUSH2 0x2617 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2872 DUP3 PUSH2 0x241C JUMP JUMPDEST SWAP2 POP PUSH2 0x287D DUP4 PUSH2 0x241C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2895 JUMPI PUSH2 0x2894 PUSH2 0x283B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28A5 DUP3 PUSH2 0x241C JUMP JUMPDEST SWAP2 POP PUSH2 0x28B0 DUP4 PUSH2 0x241C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x28BE DUP2 PUSH2 0x241C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x28D5 JUMPI PUSH2 0x28D4 PUSH2 0x283B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28E6 DUP3 PUSH2 0x241C JUMP JUMPDEST SWAP2 POP PUSH2 0x28F1 DUP4 PUSH2 0x241C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2909 JUMPI PUSH2 0x2908 PUSH2 0x283B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2946 DUP3 PUSH2 0x241C JUMP JUMPDEST SWAP2 POP PUSH2 0x2951 DUP4 PUSH2 0x241C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2961 JUMPI PUSH2 0x2960 PUSH2 0x290F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x29B0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x29C3 JUMPI PUSH2 0x29C2 PUSH2 0x296C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x414D4D3A20496E76616C696420696E70757420616D6F756E7400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29FD PUSH1 0x19 DUP4 PUSH2 0x2554 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A08 DUP3 PUSH2 0x29C9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A2A DUP2 PUSH2 0x29F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x414D4D3A20496E73756666696369656E74206F757470757420616D6F756E7400 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A65 PUSH1 0x1F DUP4 PUSH2 0x2554 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A70 DUP3 PUSH2 0x2A31 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A92 DUP2 PUSH2 0x2A59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2AAC PUSH0 DUP4 ADD DUP8 PUSH2 0x2522 JUMP JUMPDEST PUSH2 0x2AB9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2522 JUMP JUMPDEST PUSH2 0x2AC6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x24AA JUMP JUMPDEST PUSH2 0x2AD3 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x24AA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x414D4D3A2063616C6C6572206973206E6F74206120676F7665726E6F72000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B10 PUSH1 0x1D DUP4 PUSH2 0x2554 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B1B DUP3 PUSH2 0x2ADC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B3D DUP2 PUSH2 0x2B04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x414D4D3A20496E76616C696420676F7665726E6F722061646472657373000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B78 PUSH1 0x1D DUP4 PUSH2 0x2554 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B83 DUP3 PUSH2 0x2B44 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BA5 DUP2 PUSH2 0x2B6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x414D4D3A20416C7265616479206120676F7665726E6F72000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BE0 PUSH1 0x17 DUP4 PUSH2 0x2554 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BEB DUP3 PUSH2 0x2BAC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C0D DUP2 PUSH2 0x2BD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x414D4D3A20496E76616C69642066656500000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C48 PUSH1 0x10 DUP4 PUSH2 0x2554 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C53 DUP3 PUSH2 0x2C14 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C75 DUP2 PUSH2 0x2C3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x414D4D3A20496E76616C6964206C697175696469747920616D6F756E74000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CB0 PUSH1 0x1D DUP4 PUSH2 0x2554 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CBB DUP3 PUSH2 0x2C7C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CDD DUP2 PUSH2 0x2CA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2CF7 PUSH0 DUP4 ADD DUP7 PUSH2 0x2522 JUMP JUMPDEST PUSH2 0x2D04 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2522 JUMP JUMPDEST PUSH2 0x2D11 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2522 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x414D4D3A20556E62616C616E636564206C69717569646974792070726F766964 PUSH0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D73 PUSH1 0x22 DUP4 PUSH2 0x2554 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D7E DUP3 PUSH2 0x2D19 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2DA0 DUP2 PUSH2 0x2D67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x414D4D3A20496E73756666696369656E74206C69717569646974792070726F76 PUSH0 DUP3 ADD MSTORE PUSH32 0x6964656400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E01 PUSH1 0x24 DUP4 PUSH2 0x2554 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E0C DUP3 PUSH2 0x2DA7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E2E DUP2 PUSH2 0x2DF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x414D4D3A204E6F74206120676F7665726E6F7200000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E69 PUSH1 0x13 DUP4 PUSH2 0x2554 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E74 DUP3 PUSH2 0x2E35 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E96 DUP2 PUSH2 0x2E5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2F0A PUSH0 DUP4 ADD DUP7 PUSH2 0x24AA JUMP JUMPDEST PUSH2 0x2F17 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2522 JUMP JUMPDEST PUSH2 0x2F24 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2522 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F60 PUSH1 0x1F DUP4 PUSH2 0x2554 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F6B DUP3 PUSH2 0x2F2C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F8D DUP2 PUSH2 0x2F54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2FA7 PUSH0 DUP4 ADD DUP7 PUSH2 0x24AA JUMP JUMPDEST PUSH2 0x2FB4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x24AA JUMP JUMPDEST PUSH2 0x2FC1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2522 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2FDC PUSH0 DUP4 ADD DUP6 PUSH2 0x24AA JUMP JUMPDEST PUSH2 0x2FE9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2522 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2FF9 DUP2 PUSH2 0x2669 JUMP JUMPDEST DUP2 EQ PUSH2 0x3003 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3014 DUP2 PUSH2 0x2FF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x302F JUMPI PUSH2 0x302E PUSH2 0x2418 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x303C DUP5 DUP3 DUP6 ADD PUSH2 0x3006 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3063 DUP3 PUSH2 0x3045 JUMP JUMPDEST PUSH2 0x306D DUP2 DUP6 PUSH2 0x304F JUMP JUMPDEST SWAP4 POP PUSH2 0x307D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2564 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3094 DUP3 DUP5 PUSH2 0x3059 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 DUP6 0x24 DUP2 SLT 0xC0 0x2C ORIGIN PUSH19 0xB66EB04C4C555C4A703DB89E5DED1E477594EE 0xD2 AND 0xC2 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "635:9505:9:-:0;;;961:2;929:34;;1235:7;1205:37;;2247:236;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1896:113:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1970:5;1962;:13;;;;;;:::i;:::-;;1995:7;1985;:17;;;;;;:::i;:::-;;1896:113;;1716:1:1;1821:7;:22;;;;2357:7:9::1;2341:6;;:24;;;;;;;;;;;;;;;;;;2391:7;2375:6;;:24;;;;;;;;;;;;;;;;;;2433:4;2409:9;:21;2419:10;2409:21;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;2447:12;2465:10;2447:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2247:236:::0;;635:9505;;88:117:10;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:507::-;924:6;932;981:2;969:9;960:7;956:23;952:32;949:119;;;987:79;;:::i;:::-;949:119;1107:1;1132:64;1188:7;1179:6;1168:9;1164:22;1132:64;:::i;:::-;1122:74;;1078:128;1245:2;1271:64;1327:7;1318:6;1307:9;1303:22;1271:64;:::i;:::-;1261:74;;1216:129;845:507;;;;;:::o;1358:99::-;1410:6;1444:5;1438:12;1428:22;;1358:99;;;:::o;1463:180::-;1511:77;1508:1;1501:88;1608:4;1605:1;1598:15;1632:4;1629:1;1622:15;1649:180;1697:77;1694:1;1687:88;1794:4;1791:1;1784:15;1818:4;1815:1;1808:15;1835:320;1879:6;1916:1;1910:4;1906:12;1896:22;;1963:1;1957:4;1953:12;1984:18;1974:81;;2040:4;2032:6;2028:17;2018:27;;1974:81;2102:2;2094:6;2091:14;2071:18;2068:38;2065:84;;2121:18;;:::i;:::-;2065:84;1886:269;1835:320;;;:::o;2161:141::-;2210:4;2233:3;2225:11;;2256:3;2253:1;2246:14;2290:4;2287:1;2277:18;2269:26;;2161:141;;;:::o;2308:93::-;2345:6;2392:2;2387;2380:5;2376:14;2372:23;2362:33;;2308:93;;;:::o;2407:107::-;2451:8;2501:5;2495:4;2491:16;2470:37;;2407:107;;;;:::o;2520:393::-;2589:6;2639:1;2627:10;2623:18;2662:97;2692:66;2681:9;2662:97;:::i;:::-;2780:39;2810:8;2799:9;2780:39;:::i;:::-;2768:51;;2852:4;2848:9;2841:5;2837:21;2828:30;;2901:4;2891:8;2887:19;2880:5;2877:30;2867:40;;2596:317;;2520:393;;;;;:::o;2919:77::-;2956:7;2985:5;2974:16;;2919:77;;;:::o;3002:60::-;3030:3;3051:5;3044:12;;3002:60;;;:::o;3068:142::-;3118:9;3151:53;3169:34;3178:24;3196:5;3178:24;:::i;:::-;3169:34;:::i;:::-;3151:53;:::i;:::-;3138:66;;3068:142;;;:::o;3216:75::-;3259:3;3280:5;3273:12;;3216:75;;;:::o;3297:269::-;3407:39;3438:7;3407:39;:::i;:::-;3468:91;3517:41;3541:16;3517:41;:::i;:::-;3509:6;3502:4;3496:11;3468:91;:::i;:::-;3462:4;3455:105;3373:193;3297:269;;;:::o;3572:73::-;3617:3;3572:73;:::o;3651:189::-;3728:32;;:::i;:::-;3769:65;3827:6;3819;3813:4;3769:65;:::i;:::-;3704:136;3651:189;;:::o;3846:186::-;3906:120;3923:3;3916:5;3913:14;3906:120;;;3977:39;4014:1;4007:5;3977:39;:::i;:::-;3950:1;3943:5;3939:13;3930:22;;3906:120;;;3846:186;;:::o;4038:543::-;4139:2;4134:3;4131:11;4128:446;;;4173:38;4205:5;4173:38;:::i;:::-;4257:29;4275:10;4257:29;:::i;:::-;4247:8;4243:44;4440:2;4428:10;4425:18;4422:49;;;4461:8;4446:23;;4422:49;4484:80;4540:22;4558:3;4540:22;:::i;:::-;4530:8;4526:37;4513:11;4484:80;:::i;:::-;4143:431;;4128:446;4038:543;;;:::o;4587:117::-;4641:8;4691:5;4685:4;4681:16;4660:37;;4587:117;;;;:::o;4710:169::-;4754:6;4787:51;4835:1;4831:6;4823:5;4820:1;4816:13;4787:51;:::i;:::-;4783:56;4868:4;4862;4858:15;4848:25;;4761:118;4710:169;;;;:::o;4884:295::-;4960:4;5106:29;5131:3;5125:4;5106:29;:::i;:::-;5098:37;;5168:3;5165:1;5161:11;5155:4;5152:21;5144:29;;4884:295;;;;:::o;5184:1395::-;5301:37;5334:3;5301:37;:::i;:::-;5403:18;5395:6;5392:30;5389:56;;;5425:18;;:::i;:::-;5389:56;5469:38;5501:4;5495:11;5469:38;:::i;:::-;5554:67;5614:6;5606;5600:4;5554:67;:::i;:::-;5648:1;5672:4;5659:17;;5704:2;5696:6;5693:14;5721:1;5716:618;;;;6378:1;6395:6;6392:77;;;6444:9;6439:3;6435:19;6429:26;6420:35;;6392:77;6495:67;6555:6;6548:5;6495:67;:::i;:::-;6489:4;6482:81;6351:222;5686:887;;5716:618;5768:4;5764:9;5756:6;5752:22;5802:37;5834:4;5802:37;:::i;:::-;5861:1;5875:208;5889:7;5886:1;5883:14;5875:208;;;5968:9;5963:3;5959:19;5953:26;5945:6;5938:42;6019:1;6011:6;6007:14;5997:24;;6066:2;6055:9;6051:18;6038:31;;5912:4;5909:1;5905:12;5900:17;;5875:208;;;6111:6;6102:7;6099:19;6096:179;;;6169:9;6164:3;6160:19;6154:26;6212:48;6254:4;6246:6;6242:17;6231:9;6212:48;:::i;:::-;6204:6;6197:64;6119:156;6096:179;6321:1;6317;6309:6;6305:14;6301:22;6295:4;6288:36;5723:611;;;5686:887;;5276:1303;;;5184:1395;;:::o;635:9505:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@BASIS_POINTS_DIVISOR_1463": {
									"entryPoint": 1863,
									"id": 1463,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_607": {
									"entryPoint": 6398,
									"id": 607,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_667": {
									"entryPoint": 7660,
									"id": 667,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_589": {
									"entryPoint": 7263,
									"id": 589,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_callOptionalReturn_1096": {
									"entryPoint": 8660,
									"id": 1096,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_556": {
									"entryPoint": 7533,
									"id": 556,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_1411": {
									"entryPoint": 6391,
									"id": 1411,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_189": {
									"entryPoint": 7253,
									"id": 189,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_181": {
									"entryPoint": 6802,
									"id": 181,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_1398": {
									"entryPoint": 9172,
									"id": 1398,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_spendAllowance_715": {
									"entryPoint": 6416,
									"id": 715,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transfer_446": {
									"entryPoint": 6562,
									"id": 446,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_523": {
									"entryPoint": 8123,
									"id": 523,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addGovernor_2101": {
									"entryPoint": 2508,
									"id": 2101,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addLiquidity_1704": {
									"entryPoint": 4084,
									"id": 1704,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@allowance_343": {
									"entryPoint": 5316,
									"id": 343,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_367": {
									"entryPoint": 1823,
									"id": 367,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_302": {
									"entryPoint": 3424,
									"id": 302,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@decimals_280": {
									"entryPoint": 2494,
									"id": 280,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@feeBasisPoints_1460": {
									"entryPoint": 4777,
									"id": 1460,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_1266": {
									"entryPoint": 8830,
									"id": 1266,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_1220": {
									"entryPoint": 8809,
									"id": 1220,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAmountOut_1988": {
									"entryPoint": 1565,
									"id": 1988,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getReserves_2001": {
									"entryPoint": 1807,
									"id": 2001,
									"parameterSlots": 0,
									"returnSlots": 2
								},
								"@governorList_1470": {
									"entryPoint": 1506,
									"id": 1470,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@governors_1467": {
									"entryPoint": 5446,
									"id": 1467,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastTwapPriceX_1475": {
									"entryPoint": 3144,
									"id": 1475,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastTwapPriceY_1477": {
									"entryPoint": 1857,
									"id": 1477,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastTwapTimestamp_1479": {
									"entryPoint": 4700,
									"id": 1479,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@min_2247": {
									"entryPoint": 7509,
									"id": 2247,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_262": {
									"entryPoint": 1663,
									"id": 262,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeGovernor_2174": {
									"entryPoint": 5475,
									"id": 2174,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@removeLiquidity_1785": {
									"entryPoint": 3637,
									"id": 1785,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@safeTransferFrom_933": {
									"entryPoint": 6881,
									"id": 933,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_906": {
									"entryPoint": 7011,
									"id": 906,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setFee_2058": {
									"entryPoint": 3150,
									"id": 2058,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@sqrt_2229": {
									"entryPoint": 7390,
									"id": 2229,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swapXForY_1866": {
									"entryPoint": 4783,
									"id": 1866,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@swapYForX_1947": {
									"entryPoint": 1961,
									"id": 1947,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@symbol_271": {
									"entryPoint": 3493,
									"id": 271,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenX_1450": {
									"entryPoint": 1869,
									"id": 1450,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tokenY_1453": {
									"entryPoint": 4740,
									"id": 1453,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_289": {
									"entryPoint": 1906,
									"id": 289,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_399": {
									"entryPoint": 1915,
									"id": 399,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_326": {
									"entryPoint": 4706,
									"id": 326,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@twapInterval_1473": {
									"entryPoint": 2502,
									"id": 1473,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateTwap_2033": {
									"entryPoint": 7138,
									"id": 2033,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1358": {
									"entryPoint": 9031,
									"id": 1358,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 9751,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 12294,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 9275,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 10194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 10237,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 10000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 9771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 12314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 9295,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 10080,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint256t_uint256t_uint256": {
									"entryPoint": 9426,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 9386,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 9844,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 12377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$794_to_t_address_fromStack": {
									"entryPoint": 9960,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9602,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_0079495a98d1affc8c62a2e04f095db89138da4c4b6991ee412e47630d1077f1_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_15e548c7011cde46414da6f3579dd9e17bb98db01586c06df928619dd0076ab6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_2296ab563b257b59482997b18d89814bd9e2d117faf16d5269bc2ecd6675a405_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_23a983d22b7e2f929f4507ea4f9b6cafc1a24a06da17b676777fe405a18b0f65_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_48444213144a111ad5938f45387486d3e52bbe9c50db4b273e9873d13904bd38_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10737,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_49848e0d01eb0a470b2a286765abf5a64c7ba52cca08cb8ed0b3fdf708969b12_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_63fff41501f79cbc70a6037506286acc5ad5db61895766195eb81bf9766fec2b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_73c124844b98acb782e11332a19b9685ca8bc6cc77bcae53ef08dc44ecb8ff4e_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11869,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c554dd64a7769ca77e368be385fef4dd63f12c1daefbe423f6ebab79c622a854_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ea22cddd80232a65dcfc09d9be38d571da6311bd143997e1143b54a540fa28a7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 11220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 12116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9506,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 10154,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 12425,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 9401,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 12180,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 12233,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 12023,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 9859,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$794__to_t_address__fromStack_reversed": {
									"entryPoint": 9975,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0079495a98d1affc8c62a2e04f095db89138da4c4b6991ee412e47630d1077f1__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_15e548c7011cde46414da6f3579dd9e17bb98db01586c06df928619dd0076ab6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_2296ab563b257b59482997b18d89814bd9e2d117faf16d5269bc2ecd6675a405__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_23a983d22b7e2f929f4507ea4f9b6cafc1a24a06da17b676777fe405a18b0f65__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11657,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_48444213144a111ad5938f45387486d3e52bbe9c50db4b273e9873d13904bd38__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_49848e0d01eb0a470b2a286765abf5a64c7ba52cca08cb8ed0b3fdf708969b12__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_63fff41501f79cbc70a6037506286acc5ad5db61895766195eb81bf9766fec2b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11799,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_73c124844b98acb782e11332a19b9685ca8bc6cc77bcae53ef08dc44ecb8ff4e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c554dd64a7769ca77e368be385fef4dd63f12c1daefbe423f6ebab79c622a854__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ea22cddd80232a65dcfc09d9be38d571da6311bd143997e1143b54a540fa28a7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 11254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 12150,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 9690,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_address_t_address__to_t_uint256_t_uint256_t_address_t_address__fromStack_reversed": {
									"entryPoint": 10905,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 11492,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 10169,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 12357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 9546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 12367,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 9556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10460,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 10556,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 10395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 10344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 9369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 9833,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 9338,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 9244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 10142,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$794_to_t_address": {
									"entryPoint": 9943,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 9926,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 9893,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 9572,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 10649,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 9884,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 10299,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10511,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 10604,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 11978,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 11933,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 9240,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 9586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_0079495a98d1affc8c62a2e04f095db89138da4c4b6991ee412e47630d1077f1": {
									"entryPoint": 11284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_15e548c7011cde46414da6f3579dd9e17bb98db01586c06df928619dd0076ab6": {
									"entryPoint": 10801,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_2296ab563b257b59482997b18d89814bd9e2d117faf16d5269bc2ecd6675a405": {
									"entryPoint": 10972,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_23a983d22b7e2f929f4507ea4f9b6cafc1a24a06da17b676777fe405a18b0f65": {
									"entryPoint": 11545,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_48444213144a111ad5938f45387486d3e52bbe9c50db4b273e9873d13904bd38": {
									"entryPoint": 10697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_49848e0d01eb0a470b2a286765abf5a64c7ba52cca08cb8ed0b3fdf708969b12": {
									"entryPoint": 11388,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_63fff41501f79cbc70a6037506286acc5ad5db61895766195eb81bf9766fec2b": {
									"entryPoint": 11687,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_73c124844b98acb782e11332a19b9685ca8bc6cc77bcae53ef08dc44ecb8ff4e": {
									"entryPoint": 11829,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c554dd64a7769ca77e368be385fef4dd63f12c1daefbe423f6ebab79c622a854": {
									"entryPoint": 11076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ea22cddd80232a65dcfc09d9be38d571da6311bd143997e1143b54a540fa28a7": {
									"entryPoint": 11180,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 12076,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 9729,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 12272,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9253,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:25503:10",
										"nodeType": "YulBlock",
										"src": "0:25503:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:10",
													"nodeType": "YulBlock",
													"src": "47:35:10",
													"statements": [
														{
															"nativeSrc": "57:19:10",
															"nodeType": "YulAssignment",
															"src": "57:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:10",
																		"nodeType": "YulLiteral",
																		"src": "73:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:10"
																},
																"nativeSrc": "67:9:10",
																"nodeType": "YulFunctionCall",
																"src": "67:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:10",
														"nodeType": "YulTypedName",
														"src": "40:6:10",
														"type": ""
													}
												],
												"src": "7:75:10"
											},
											{
												"body": {
													"nativeSrc": "177:28:10",
													"nodeType": "YulBlock",
													"src": "177:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:10",
																		"nodeType": "YulLiteral",
																		"src": "194:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:10",
																		"nodeType": "YulLiteral",
																		"src": "197:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:10"
																},
																"nativeSrc": "187:12:10",
																"nodeType": "YulFunctionCall",
																"src": "187:12:10"
															},
															"nativeSrc": "187:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:10"
											},
											{
												"body": {
													"nativeSrc": "300:28:10",
													"nodeType": "YulBlock",
													"src": "300:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:10",
																		"nodeType": "YulLiteral",
																		"src": "317:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:10",
																		"nodeType": "YulLiteral",
																		"src": "320:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:10"
																},
																"nativeSrc": "310:12:10",
																"nodeType": "YulFunctionCall",
																"src": "310:12:10"
															},
															"nativeSrc": "310:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:10"
											},
											{
												"body": {
													"nativeSrc": "379:32:10",
													"nodeType": "YulBlock",
													"src": "379:32:10",
													"statements": [
														{
															"nativeSrc": "389:16:10",
															"nodeType": "YulAssignment",
															"src": "389:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:10",
																"nodeType": "YulIdentifier",
																"src": "400:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:10",
														"nodeType": "YulTypedName",
														"src": "361:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:10",
														"nodeType": "YulTypedName",
														"src": "371:7:10",
														"type": ""
													}
												],
												"src": "334:77:10"
											},
											{
												"body": {
													"nativeSrc": "460:79:10",
													"nodeType": "YulBlock",
													"src": "460:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:10",
																"nodeType": "YulBlock",
																"src": "517:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:10",
																					"nodeType": "YulLiteral",
																					"src": "526:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:10",
																					"nodeType": "YulLiteral",
																					"src": "529:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:10"
																			},
																			"nativeSrc": "519:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:10"
																		},
																		"nativeSrc": "519:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:10"
																				},
																				"nativeSrc": "490:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:10"
																		},
																		"nativeSrc": "480:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:10"
																},
																"nativeSrc": "473:43:10",
																"nodeType": "YulFunctionCall",
																"src": "473:43:10"
															},
															"nativeSrc": "470:63:10",
															"nodeType": "YulIf",
															"src": "470:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:10",
														"nodeType": "YulTypedName",
														"src": "453:5:10",
														"type": ""
													}
												],
												"src": "417:122:10"
											},
											{
												"body": {
													"nativeSrc": "597:87:10",
													"nodeType": "YulBlock",
													"src": "597:87:10",
													"statements": [
														{
															"nativeSrc": "607:29:10",
															"nodeType": "YulAssignment",
															"src": "607:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:10"
																},
																"nativeSrc": "616:20:10",
																"nodeType": "YulFunctionCall",
																"src": "616:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "645:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:10"
																},
																"nativeSrc": "645:33:10",
																"nodeType": "YulFunctionCall",
																"src": "645:33:10"
															},
															"nativeSrc": "645:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "545:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:10",
														"nodeType": "YulTypedName",
														"src": "575:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:10",
														"nodeType": "YulTypedName",
														"src": "583:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:10",
														"nodeType": "YulTypedName",
														"src": "591:5:10",
														"type": ""
													}
												],
												"src": "545:139:10"
											},
											{
												"body": {
													"nativeSrc": "756:263:10",
													"nodeType": "YulBlock",
													"src": "756:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:10",
																"nodeType": "YulBlock",
																"src": "802:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:10"
																			},
																			"nativeSrc": "804:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:10"
																		},
																		"nativeSrc": "804:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:10"
																		},
																		"nativeSrc": "773:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:10",
																		"nodeType": "YulLiteral",
																		"src": "798:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:10"
																},
																"nativeSrc": "769:32:10",
																"nodeType": "YulFunctionCall",
																"src": "769:32:10"
															},
															"nativeSrc": "766:119:10",
															"nodeType": "YulIf",
															"src": "766:119:10"
														},
														{
															"nativeSrc": "895:117:10",
															"nodeType": "YulBlock",
															"src": "895:117:10",
															"statements": [
																{
																	"nativeSrc": "910:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:10",
																		"nodeType": "YulLiteral",
																		"src": "924:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:10",
																			"nodeType": "YulTypedName",
																			"src": "914:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:10",
																	"nodeType": "YulAssignment",
																	"src": "939:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:10"
																				},
																				"nativeSrc": "970:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "949:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:10"
																		},
																		"nativeSrc": "949:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "690:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:10",
														"nodeType": "YulTypedName",
														"src": "726:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:10",
														"nodeType": "YulTypedName",
														"src": "737:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:10",
														"nodeType": "YulTypedName",
														"src": "749:6:10",
														"type": ""
													}
												],
												"src": "690:329:10"
											},
											{
												"body": {
													"nativeSrc": "1070:81:10",
													"nodeType": "YulBlock",
													"src": "1070:81:10",
													"statements": [
														{
															"nativeSrc": "1080:65:10",
															"nodeType": "YulAssignment",
															"src": "1080:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1095:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1095:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1102:42:10",
																		"nodeType": "YulLiteral",
																		"src": "1102:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1091:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1091:3:10"
																},
																"nativeSrc": "1091:54:10",
																"nodeType": "YulFunctionCall",
																"src": "1091:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1080:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1080:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1025:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1052:5:10",
														"nodeType": "YulTypedName",
														"src": "1052:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1062:7:10",
														"nodeType": "YulTypedName",
														"src": "1062:7:10",
														"type": ""
													}
												],
												"src": "1025:126:10"
											},
											{
												"body": {
													"nativeSrc": "1202:51:10",
													"nodeType": "YulBlock",
													"src": "1202:51:10",
													"statements": [
														{
															"nativeSrc": "1212:35:10",
															"nodeType": "YulAssignment",
															"src": "1212:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1241:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1241:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1223:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1223:17:10"
																},
																"nativeSrc": "1223:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1223:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1212:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1212:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1157:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1184:5:10",
														"nodeType": "YulTypedName",
														"src": "1184:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1194:7:10",
														"nodeType": "YulTypedName",
														"src": "1194:7:10",
														"type": ""
													}
												],
												"src": "1157:96:10"
											},
											{
												"body": {
													"nativeSrc": "1324:53:10",
													"nodeType": "YulBlock",
													"src": "1324:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1341:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "1341:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1364:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1364:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1346:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "1346:17:10"
																		},
																		"nativeSrc": "1346:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1346:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1334:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1334:6:10"
																},
																"nativeSrc": "1334:37:10",
																"nodeType": "YulFunctionCall",
																"src": "1334:37:10"
															},
															"nativeSrc": "1334:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "1334:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "1259:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:10",
														"nodeType": "YulTypedName",
														"src": "1312:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1319:3:10",
														"nodeType": "YulTypedName",
														"src": "1319:3:10",
														"type": ""
													}
												],
												"src": "1259:118:10"
											},
											{
												"body": {
													"nativeSrc": "1481:124:10",
													"nodeType": "YulBlock",
													"src": "1481:124:10",
													"statements": [
														{
															"nativeSrc": "1491:26:10",
															"nodeType": "YulAssignment",
															"src": "1491:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1503:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1503:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1514:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1514:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1499:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1499:3:10"
																},
																"nativeSrc": "1499:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1499:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1491:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1491:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1571:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1571:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1584:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1584:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1595:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1595:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1580:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1580:3:10"
																		},
																		"nativeSrc": "1580:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1580:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "1527:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "1527:43:10"
																},
																"nativeSrc": "1527:71:10",
																"nodeType": "YulFunctionCall",
																"src": "1527:71:10"
															},
															"nativeSrc": "1527:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "1527:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1383:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1453:9:10",
														"nodeType": "YulTypedName",
														"src": "1453:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1465:6:10",
														"nodeType": "YulTypedName",
														"src": "1465:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1476:4:10",
														"nodeType": "YulTypedName",
														"src": "1476:4:10",
														"type": ""
													}
												],
												"src": "1383:222:10"
											},
											{
												"body": {
													"nativeSrc": "1711:519:10",
													"nodeType": "YulBlock",
													"src": "1711:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "1757:83:10",
																"nodeType": "YulBlock",
																"src": "1757:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1759:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "1759:77:10"
																			},
																			"nativeSrc": "1759:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "1759:79:10"
																		},
																		"nativeSrc": "1759:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "1759:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1732:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1732:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1741:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1741:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1728:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1728:3:10"
																		},
																		"nativeSrc": "1728:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1728:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1753:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1724:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1724:3:10"
																},
																"nativeSrc": "1724:32:10",
																"nodeType": "YulFunctionCall",
																"src": "1724:32:10"
															},
															"nativeSrc": "1721:119:10",
															"nodeType": "YulIf",
															"src": "1721:119:10"
														},
														{
															"nativeSrc": "1850:117:10",
															"nodeType": "YulBlock",
															"src": "1850:117:10",
															"statements": [
																{
																	"nativeSrc": "1865:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1865:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1879:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1879:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1869:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1869:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1894:63:10",
																	"nodeType": "YulAssignment",
																	"src": "1894:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1929:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "1929:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1940:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "1940:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1925:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "1925:3:10"
																				},
																				"nativeSrc": "1925:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1925:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1949:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "1949:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1904:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "1904:20:10"
																		},
																		"nativeSrc": "1904:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1904:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1894:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "1894:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1977:118:10",
															"nodeType": "YulBlock",
															"src": "1977:118:10",
															"statements": [
																{
																	"nativeSrc": "1992:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1992:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2006:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2006:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1996:6:10",
																			"nodeType": "YulTypedName",
																			"src": "1996:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2022:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2022:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2057:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2057:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2068:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2068:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2053:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2053:3:10"
																				},
																				"nativeSrc": "2053:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2053:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2077:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2077:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2032:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2032:20:10"
																		},
																		"nativeSrc": "2032:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2032:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2022:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2022:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2105:118:10",
															"nodeType": "YulBlock",
															"src": "2105:118:10",
															"statements": [
																{
																	"nativeSrc": "2120:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2120:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2134:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2134:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2124:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2124:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2150:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2150:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2185:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2185:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2196:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2196:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2181:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2181:3:10"
																				},
																				"nativeSrc": "2181:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2181:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2205:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2205:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2160:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2160:20:10"
																		},
																		"nativeSrc": "2160:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2160:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "2150:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2150:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256t_uint256",
												"nativeSrc": "1611:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1665:9:10",
														"nodeType": "YulTypedName",
														"src": "1665:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1676:7:10",
														"nodeType": "YulTypedName",
														"src": "1676:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1688:6:10",
														"nodeType": "YulTypedName",
														"src": "1688:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1696:6:10",
														"nodeType": "YulTypedName",
														"src": "1696:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1704:6:10",
														"nodeType": "YulTypedName",
														"src": "1704:6:10",
														"type": ""
													}
												],
												"src": "1611:619:10"
											},
											{
												"body": {
													"nativeSrc": "2301:53:10",
													"nodeType": "YulBlock",
													"src": "2301:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2318:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2318:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "2323:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "2323:17:10"
																		},
																		"nativeSrc": "2323:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2323:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2311:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2311:6:10"
																},
																"nativeSrc": "2311:37:10",
																"nodeType": "YulFunctionCall",
																"src": "2311:37:10"
															},
															"nativeSrc": "2311:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "2311:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "2236:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2289:5:10",
														"nodeType": "YulTypedName",
														"src": "2289:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2296:3:10",
														"nodeType": "YulTypedName",
														"src": "2296:3:10",
														"type": ""
													}
												],
												"src": "2236:118:10"
											},
											{
												"body": {
													"nativeSrc": "2458:124:10",
													"nodeType": "YulBlock",
													"src": "2458:124:10",
													"statements": [
														{
															"nativeSrc": "2468:26:10",
															"nodeType": "YulAssignment",
															"src": "2468:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2480:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "2480:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2491:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2491:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2476:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2476:3:10"
																},
																"nativeSrc": "2476:18:10",
																"nodeType": "YulFunctionCall",
																"src": "2476:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2468:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "2468:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2548:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2548:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2561:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2561:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2572:1:10",
																				"nodeType": "YulLiteral",
																				"src": "2572:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2557:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2557:3:10"
																		},
																		"nativeSrc": "2557:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2557:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "2504:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2504:43:10"
																},
																"nativeSrc": "2504:71:10",
																"nodeType": "YulFunctionCall",
																"src": "2504:71:10"
															},
															"nativeSrc": "2504:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "2504:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2360:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2430:9:10",
														"nodeType": "YulTypedName",
														"src": "2430:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2442:6:10",
														"nodeType": "YulTypedName",
														"src": "2442:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2453:4:10",
														"nodeType": "YulTypedName",
														"src": "2453:4:10",
														"type": ""
													}
												],
												"src": "2360:222:10"
											},
											{
												"body": {
													"nativeSrc": "2647:40:10",
													"nodeType": "YulBlock",
													"src": "2647:40:10",
													"statements": [
														{
															"nativeSrc": "2658:22:10",
															"nodeType": "YulAssignment",
															"src": "2658:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2674:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2674:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2668:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2668:5:10"
																},
																"nativeSrc": "2668:12:10",
																"nodeType": "YulFunctionCall",
																"src": "2668:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "2658:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2658:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "2588:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2630:5:10",
														"nodeType": "YulTypedName",
														"src": "2630:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "2640:6:10",
														"nodeType": "YulTypedName",
														"src": "2640:6:10",
														"type": ""
													}
												],
												"src": "2588:99:10"
											},
											{
												"body": {
													"nativeSrc": "2789:73:10",
													"nodeType": "YulBlock",
													"src": "2789:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2806:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2806:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2811:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2811:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2799:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2799:6:10"
																},
																"nativeSrc": "2799:19:10",
																"nodeType": "YulFunctionCall",
																"src": "2799:19:10"
															},
															"nativeSrc": "2799:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "2799:19:10"
														},
														{
															"nativeSrc": "2827:29:10",
															"nodeType": "YulAssignment",
															"src": "2827:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2846:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2846:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2851:4:10",
																		"nodeType": "YulLiteral",
																		"src": "2851:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2842:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2842:3:10"
																},
																"nativeSrc": "2842:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2842:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "2827:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "2827:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "2693:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "2761:3:10",
														"nodeType": "YulTypedName",
														"src": "2761:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2766:6:10",
														"nodeType": "YulTypedName",
														"src": "2766:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "2777:11:10",
														"nodeType": "YulTypedName",
														"src": "2777:11:10",
														"type": ""
													}
												],
												"src": "2693:169:10"
											},
											{
												"body": {
													"nativeSrc": "2930:77:10",
													"nodeType": "YulBlock",
													"src": "2930:77:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "2947:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2947:3:10"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "2952:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2952:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2957:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2957:6:10"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "2941:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2941:5:10"
																},
																"nativeSrc": "2941:23:10",
																"nodeType": "YulFunctionCall",
																"src": "2941:23:10"
															},
															"nativeSrc": "2941:23:10",
															"nodeType": "YulExpressionStatement",
															"src": "2941:23:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "2984:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2984:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2989:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2989:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2980:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2980:3:10"
																		},
																		"nativeSrc": "2980:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2980:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2998:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2998:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2973:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2973:6:10"
																},
																"nativeSrc": "2973:27:10",
																"nodeType": "YulFunctionCall",
																"src": "2973:27:10"
															},
															"nativeSrc": "2973:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "2973:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "2868:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "2912:3:10",
														"nodeType": "YulTypedName",
														"src": "2912:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "2917:3:10",
														"nodeType": "YulTypedName",
														"src": "2917:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "2922:6:10",
														"nodeType": "YulTypedName",
														"src": "2922:6:10",
														"type": ""
													}
												],
												"src": "2868:139:10"
											},
											{
												"body": {
													"nativeSrc": "3061:54:10",
													"nodeType": "YulBlock",
													"src": "3061:54:10",
													"statements": [
														{
															"nativeSrc": "3071:38:10",
															"nodeType": "YulAssignment",
															"src": "3071:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3089:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3089:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3096:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3096:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3085:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3085:3:10"
																		},
																		"nativeSrc": "3085:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3085:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3105:2:10",
																				"nodeType": "YulLiteral",
																				"src": "3105:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3101:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3101:3:10"
																		},
																		"nativeSrc": "3101:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3101:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3081:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3081:3:10"
																},
																"nativeSrc": "3081:28:10",
																"nodeType": "YulFunctionCall",
																"src": "3081:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3071:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3071:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "3013:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3044:5:10",
														"nodeType": "YulTypedName",
														"src": "3044:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3054:6:10",
														"nodeType": "YulTypedName",
														"src": "3054:6:10",
														"type": ""
													}
												],
												"src": "3013:102:10"
											},
											{
												"body": {
													"nativeSrc": "3213:285:10",
													"nodeType": "YulBlock",
													"src": "3213:285:10",
													"statements": [
														{
															"nativeSrc": "3223:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3223:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3270:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3270:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3237:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "3237:32:10"
																},
																"nativeSrc": "3237:39:10",
																"nodeType": "YulFunctionCall",
																"src": "3237:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3227:6:10",
																	"nodeType": "YulTypedName",
																	"src": "3227:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3285:78:10",
															"nodeType": "YulAssignment",
															"src": "3285:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3351:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3351:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3356:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3356:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3292:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "3292:58:10"
																},
																"nativeSrc": "3292:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3292:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "3285:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3285:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3411:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3411:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3418:4:10",
																				"nodeType": "YulLiteral",
																				"src": "3418:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3407:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3407:3:10"
																		},
																		"nativeSrc": "3407:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3407:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "3425:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3425:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "3430:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3430:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "3372:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "3372:34:10"
																},
																"nativeSrc": "3372:65:10",
																"nodeType": "YulFunctionCall",
																"src": "3372:65:10"
															},
															"nativeSrc": "3372:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "3372:65:10"
														},
														{
															"nativeSrc": "3446:46:10",
															"nodeType": "YulAssignment",
															"src": "3446:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3457:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3457:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3484:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3484:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "3462:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "3462:21:10"
																		},
																		"nativeSrc": "3462:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3462:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3453:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3453:3:10"
																},
																"nativeSrc": "3453:39:10",
																"nodeType": "YulFunctionCall",
																"src": "3453:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "3446:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3446:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "3121:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3194:5:10",
														"nodeType": "YulTypedName",
														"src": "3194:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3201:3:10",
														"nodeType": "YulTypedName",
														"src": "3201:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3209:3:10",
														"nodeType": "YulTypedName",
														"src": "3209:3:10",
														"type": ""
													}
												],
												"src": "3121:377:10"
											},
											{
												"body": {
													"nativeSrc": "3622:195:10",
													"nodeType": "YulBlock",
													"src": "3622:195:10",
													"statements": [
														{
															"nativeSrc": "3632:26:10",
															"nodeType": "YulAssignment",
															"src": "3632:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3644:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3644:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3655:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3655:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3640:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3640:3:10"
																},
																"nativeSrc": "3640:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3640:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3632:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3632:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3679:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3679:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3690:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3690:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3675:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3675:3:10"
																		},
																		"nativeSrc": "3675:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3675:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "3698:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "3698:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3704:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3704:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3694:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3694:3:10"
																		},
																		"nativeSrc": "3694:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3694:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3668:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3668:6:10"
																},
																"nativeSrc": "3668:47:10",
																"nodeType": "YulFunctionCall",
																"src": "3668:47:10"
															},
															"nativeSrc": "3668:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "3668:47:10"
														},
														{
															"nativeSrc": "3724:86:10",
															"nodeType": "YulAssignment",
															"src": "3724:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3796:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3796:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "3805:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3805:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "3732:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "3732:63:10"
																},
																"nativeSrc": "3732:78:10",
																"nodeType": "YulFunctionCall",
																"src": "3732:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3724:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3724:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3504:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3594:9:10",
														"nodeType": "YulTypedName",
														"src": "3594:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3606:6:10",
														"nodeType": "YulTypedName",
														"src": "3606:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3617:4:10",
														"nodeType": "YulTypedName",
														"src": "3617:4:10",
														"type": ""
													}
												],
												"src": "3504:313:10"
											},
											{
												"body": {
													"nativeSrc": "3949:206:10",
													"nodeType": "YulBlock",
													"src": "3949:206:10",
													"statements": [
														{
															"nativeSrc": "3959:26:10",
															"nodeType": "YulAssignment",
															"src": "3959:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3971:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3971:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3982:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3982:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3967:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3967:3:10"
																},
																"nativeSrc": "3967:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3967:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3959:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3959:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4039:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4039:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4052:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4052:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4063:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4063:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4048:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4048:3:10"
																		},
																		"nativeSrc": "4048:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4048:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3995:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "3995:43:10"
																},
																"nativeSrc": "3995:71:10",
																"nodeType": "YulFunctionCall",
																"src": "3995:71:10"
															},
															"nativeSrc": "3995:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "3995:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "4120:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4120:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4133:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4133:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4144:2:10",
																				"nodeType": "YulLiteral",
																				"src": "4144:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4129:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4129:3:10"
																		},
																		"nativeSrc": "4129:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4129:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4076:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "4076:43:10"
																},
																"nativeSrc": "4076:72:10",
																"nodeType": "YulFunctionCall",
																"src": "4076:72:10"
															},
															"nativeSrc": "4076:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "4076:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "3823:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3913:9:10",
														"nodeType": "YulTypedName",
														"src": "3913:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3925:6:10",
														"nodeType": "YulTypedName",
														"src": "3925:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3933:6:10",
														"nodeType": "YulTypedName",
														"src": "3933:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3944:4:10",
														"nodeType": "YulTypedName",
														"src": "3944:4:10",
														"type": ""
													}
												],
												"src": "3823:332:10"
											},
											{
												"body": {
													"nativeSrc": "4204:79:10",
													"nodeType": "YulBlock",
													"src": "4204:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4261:16:10",
																"nodeType": "YulBlock",
																"src": "4261:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4270:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4270:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4273:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4273:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4263:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "4263:6:10"
																			},
																			"nativeSrc": "4263:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4263:12:10"
																		},
																		"nativeSrc": "4263:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4263:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4227:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4227:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4252:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "4252:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4234:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "4234:17:10"
																				},
																				"nativeSrc": "4234:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4234:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4224:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "4224:2:10"
																		},
																		"nativeSrc": "4224:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4224:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4217:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4217:6:10"
																},
																"nativeSrc": "4217:43:10",
																"nodeType": "YulFunctionCall",
																"src": "4217:43:10"
															},
															"nativeSrc": "4214:63:10",
															"nodeType": "YulIf",
															"src": "4214:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4161:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4197:5:10",
														"nodeType": "YulTypedName",
														"src": "4197:5:10",
														"type": ""
													}
												],
												"src": "4161:122:10"
											},
											{
												"body": {
													"nativeSrc": "4341:87:10",
													"nodeType": "YulBlock",
													"src": "4341:87:10",
													"statements": [
														{
															"nativeSrc": "4351:29:10",
															"nodeType": "YulAssignment",
															"src": "4351:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4373:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4373:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4360:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "4360:12:10"
																},
																"nativeSrc": "4360:20:10",
																"nodeType": "YulFunctionCall",
																"src": "4360:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4351:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "4351:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4416:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "4416:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4389:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "4389:26:10"
																},
																"nativeSrc": "4389:33:10",
																"nodeType": "YulFunctionCall",
																"src": "4389:33:10"
															},
															"nativeSrc": "4389:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "4389:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4289:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4319:6:10",
														"nodeType": "YulTypedName",
														"src": "4319:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4327:3:10",
														"nodeType": "YulTypedName",
														"src": "4327:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4335:5:10",
														"nodeType": "YulTypedName",
														"src": "4335:5:10",
														"type": ""
													}
												],
												"src": "4289:139:10"
											},
											{
												"body": {
													"nativeSrc": "4517:391:10",
													"nodeType": "YulBlock",
													"src": "4517:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4563:83:10",
																"nodeType": "YulBlock",
																"src": "4563:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4565:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4565:77:10"
																			},
																			"nativeSrc": "4565:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4565:79:10"
																		},
																		"nativeSrc": "4565:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4565:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4538:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4538:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4547:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4547:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4534:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4534:3:10"
																		},
																		"nativeSrc": "4534:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4534:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4559:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4559:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4530:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4530:3:10"
																},
																"nativeSrc": "4530:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4530:32:10"
															},
															"nativeSrc": "4527:119:10",
															"nodeType": "YulIf",
															"src": "4527:119:10"
														},
														{
															"nativeSrc": "4656:117:10",
															"nodeType": "YulBlock",
															"src": "4656:117:10",
															"statements": [
																{
																	"nativeSrc": "4671:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4671:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4685:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4685:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4675:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4675:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4700:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4700:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4735:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4735:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4746:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4746:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4731:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4731:3:10"
																				},
																				"nativeSrc": "4731:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4731:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4755:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4755:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4710:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4710:20:10"
																		},
																		"nativeSrc": "4710:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4710:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4700:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4700:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4783:118:10",
															"nodeType": "YulBlock",
															"src": "4783:118:10",
															"statements": [
																{
																	"nativeSrc": "4798:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4798:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4812:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4812:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4802:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4802:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4828:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4828:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4863:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4863:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4874:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4874:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4859:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4859:3:10"
																				},
																				"nativeSrc": "4859:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4859:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4883:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4883:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4838:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4838:20:10"
																		},
																		"nativeSrc": "4838:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4838:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4828:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4828:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4434:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4479:9:10",
														"nodeType": "YulTypedName",
														"src": "4479:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4490:7:10",
														"nodeType": "YulTypedName",
														"src": "4490:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4502:6:10",
														"nodeType": "YulTypedName",
														"src": "4502:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4510:6:10",
														"nodeType": "YulTypedName",
														"src": "4510:6:10",
														"type": ""
													}
												],
												"src": "4434:474:10"
											},
											{
												"body": {
													"nativeSrc": "4956:48:10",
													"nodeType": "YulBlock",
													"src": "4956:48:10",
													"statements": [
														{
															"nativeSrc": "4966:32:10",
															"nodeType": "YulAssignment",
															"src": "4966:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4991:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4991:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4984:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4984:6:10"
																		},
																		"nativeSrc": "4984:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4984:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4977:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4977:6:10"
																},
																"nativeSrc": "4977:21:10",
																"nodeType": "YulFunctionCall",
																"src": "4977:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4966:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "4966:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "4914:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4938:5:10",
														"nodeType": "YulTypedName",
														"src": "4938:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4948:7:10",
														"nodeType": "YulTypedName",
														"src": "4948:7:10",
														"type": ""
													}
												],
												"src": "4914:90:10"
											},
											{
												"body": {
													"nativeSrc": "5069:50:10",
													"nodeType": "YulBlock",
													"src": "5069:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5086:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5086:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5106:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5106:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "5091:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "5091:14:10"
																		},
																		"nativeSrc": "5091:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5091:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5079:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5079:6:10"
																},
																"nativeSrc": "5079:34:10",
																"nodeType": "YulFunctionCall",
																"src": "5079:34:10"
															},
															"nativeSrc": "5079:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "5079:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "5010:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5057:5:10",
														"nodeType": "YulTypedName",
														"src": "5057:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5064:3:10",
														"nodeType": "YulTypedName",
														"src": "5064:3:10",
														"type": ""
													}
												],
												"src": "5010:109:10"
											},
											{
												"body": {
													"nativeSrc": "5217:118:10",
													"nodeType": "YulBlock",
													"src": "5217:118:10",
													"statements": [
														{
															"nativeSrc": "5227:26:10",
															"nodeType": "YulAssignment",
															"src": "5227:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5239:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5239:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5250:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5250:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5235:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5235:3:10"
																},
																"nativeSrc": "5235:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5235:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5227:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5227:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5301:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5301:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5314:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5314:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5325:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5325:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5310:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5310:3:10"
																		},
																		"nativeSrc": "5310:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5310:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "5263:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "5263:37:10"
																},
																"nativeSrc": "5263:65:10",
																"nodeType": "YulFunctionCall",
																"src": "5263:65:10"
															},
															"nativeSrc": "5263:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "5263:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "5125:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5189:9:10",
														"nodeType": "YulTypedName",
														"src": "5189:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5201:6:10",
														"nodeType": "YulTypedName",
														"src": "5201:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5212:4:10",
														"nodeType": "YulTypedName",
														"src": "5212:4:10",
														"type": ""
													}
												],
												"src": "5125:210:10"
											},
											{
												"body": {
													"nativeSrc": "5373:28:10",
													"nodeType": "YulBlock",
													"src": "5373:28:10",
													"statements": [
														{
															"nativeSrc": "5383:12:10",
															"nodeType": "YulAssignment",
															"src": "5383:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "5390:5:10",
																"nodeType": "YulIdentifier",
																"src": "5390:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5383:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5383:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "5341:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5359:5:10",
														"nodeType": "YulTypedName",
														"src": "5359:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5369:3:10",
														"nodeType": "YulTypedName",
														"src": "5369:3:10",
														"type": ""
													}
												],
												"src": "5341:60:10"
											},
											{
												"body": {
													"nativeSrc": "5467:82:10",
													"nodeType": "YulBlock",
													"src": "5467:82:10",
													"statements": [
														{
															"nativeSrc": "5477:66:10",
															"nodeType": "YulAssignment",
															"src": "5477:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5535:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "5535:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "5517:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "5517:17:10"
																				},
																				"nativeSrc": "5517:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5517:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5508:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "5508:8:10"
																		},
																		"nativeSrc": "5508:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5508:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5490:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "5490:17:10"
																},
																"nativeSrc": "5490:53:10",
																"nodeType": "YulFunctionCall",
																"src": "5490:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5477:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "5477:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "5407:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5447:5:10",
														"nodeType": "YulTypedName",
														"src": "5447:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5457:9:10",
														"nodeType": "YulTypedName",
														"src": "5457:9:10",
														"type": ""
													}
												],
												"src": "5407:142:10"
											},
											{
												"body": {
													"nativeSrc": "5615:66:10",
													"nodeType": "YulBlock",
													"src": "5615:66:10",
													"statements": [
														{
															"nativeSrc": "5625:50:10",
															"nodeType": "YulAssignment",
															"src": "5625:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5669:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5669:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "5638:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "5638:30:10"
																},
																"nativeSrc": "5638:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5638:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5625:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "5625:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "5555:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5595:5:10",
														"nodeType": "YulTypedName",
														"src": "5595:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5605:9:10",
														"nodeType": "YulTypedName",
														"src": "5605:9:10",
														"type": ""
													}
												],
												"src": "5555:126:10"
											},
											{
												"body": {
													"nativeSrc": "5761:66:10",
													"nodeType": "YulBlock",
													"src": "5761:66:10",
													"statements": [
														{
															"nativeSrc": "5771:50:10",
															"nodeType": "YulAssignment",
															"src": "5771:50:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5815:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5815:5:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5784:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "5784:30:10"
																},
																"nativeSrc": "5784:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5784:37:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5771:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "5771:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$794_to_t_address",
												"nativeSrc": "5687:140:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5741:5:10",
														"nodeType": "YulTypedName",
														"src": "5741:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5751:9:10",
														"nodeType": "YulTypedName",
														"src": "5751:9:10",
														"type": ""
													}
												],
												"src": "5687:140:10"
											},
											{
												"body": {
													"nativeSrc": "5912:80:10",
													"nodeType": "YulBlock",
													"src": "5912:80:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5929:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5929:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5979:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5979:5:10"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$794_to_t_address",
																			"nativeSrc": "5934:44:10",
																			"nodeType": "YulIdentifier",
																			"src": "5934:44:10"
																		},
																		"nativeSrc": "5934:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5934:51:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5922:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5922:6:10"
																},
																"nativeSrc": "5922:64:10",
																"nodeType": "YulFunctionCall",
																"src": "5922:64:10"
															},
															"nativeSrc": "5922:64:10",
															"nodeType": "YulExpressionStatement",
															"src": "5922:64:10"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$794_to_t_address_fromStack",
												"nativeSrc": "5833:159:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5900:5:10",
														"nodeType": "YulTypedName",
														"src": "5900:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5907:3:10",
														"nodeType": "YulTypedName",
														"src": "5907:3:10",
														"type": ""
													}
												],
												"src": "5833:159:10"
											},
											{
												"body": {
													"nativeSrc": "6110:138:10",
													"nodeType": "YulBlock",
													"src": "6110:138:10",
													"statements": [
														{
															"nativeSrc": "6120:26:10",
															"nodeType": "YulAssignment",
															"src": "6120:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6132:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6132:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6143:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6143:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6128:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6128:3:10"
																},
																"nativeSrc": "6128:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6128:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6120:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6120:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6214:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6214:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6227:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6227:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6238:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6238:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6223:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6223:3:10"
																		},
																		"nativeSrc": "6223:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6223:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$794_to_t_address_fromStack",
																	"nativeSrc": "6156:57:10",
																	"nodeType": "YulIdentifier",
																	"src": "6156:57:10"
																},
																"nativeSrc": "6156:85:10",
																"nodeType": "YulFunctionCall",
																"src": "6156:85:10"
															},
															"nativeSrc": "6156:85:10",
															"nodeType": "YulExpressionStatement",
															"src": "6156:85:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$794__to_t_address__fromStack_reversed",
												"nativeSrc": "5998:250:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6082:9:10",
														"nodeType": "YulTypedName",
														"src": "6082:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6094:6:10",
														"nodeType": "YulTypedName",
														"src": "6094:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6105:4:10",
														"nodeType": "YulTypedName",
														"src": "6105:4:10",
														"type": ""
													}
												],
												"src": "5998:250:10"
											},
											{
												"body": {
													"nativeSrc": "6354:519:10",
													"nodeType": "YulBlock",
													"src": "6354:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6400:83:10",
																"nodeType": "YulBlock",
																"src": "6400:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6402:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6402:77:10"
																			},
																			"nativeSrc": "6402:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6402:79:10"
																		},
																		"nativeSrc": "6402:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6402:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6375:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6375:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6384:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6384:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6371:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6371:3:10"
																		},
																		"nativeSrc": "6371:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6371:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6396:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6396:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6367:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6367:3:10"
																},
																"nativeSrc": "6367:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6367:32:10"
															},
															"nativeSrc": "6364:119:10",
															"nodeType": "YulIf",
															"src": "6364:119:10"
														},
														{
															"nativeSrc": "6493:117:10",
															"nodeType": "YulBlock",
															"src": "6493:117:10",
															"statements": [
																{
																	"nativeSrc": "6508:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6508:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6522:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6522:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6512:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6512:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6537:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6537:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6572:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6572:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6583:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6583:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6568:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6568:3:10"
																				},
																				"nativeSrc": "6568:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6568:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6592:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6592:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6547:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6547:20:10"
																		},
																		"nativeSrc": "6547:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6547:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6537:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6537:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6620:118:10",
															"nodeType": "YulBlock",
															"src": "6620:118:10",
															"statements": [
																{
																	"nativeSrc": "6635:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6635:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6649:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6649:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6639:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6639:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6665:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6665:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6700:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6700:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6711:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6711:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6696:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6696:3:10"
																				},
																				"nativeSrc": "6696:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6696:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6720:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6720:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6675:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6675:20:10"
																		},
																		"nativeSrc": "6675:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6675:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6665:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6665:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6748:118:10",
															"nodeType": "YulBlock",
															"src": "6748:118:10",
															"statements": [
																{
																	"nativeSrc": "6763:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6763:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6777:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6777:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6767:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6767:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6793:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6793:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6828:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6828:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6839:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6839:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6824:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6824:3:10"
																				},
																				"nativeSrc": "6824:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6824:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6848:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6848:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6803:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6803:20:10"
																		},
																		"nativeSrc": "6803:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6803:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "6793:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6793:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "6254:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6308:9:10",
														"nodeType": "YulTypedName",
														"src": "6308:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6319:7:10",
														"nodeType": "YulTypedName",
														"src": "6319:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6331:6:10",
														"nodeType": "YulTypedName",
														"src": "6331:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6339:6:10",
														"nodeType": "YulTypedName",
														"src": "6339:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6347:6:10",
														"nodeType": "YulTypedName",
														"src": "6347:6:10",
														"type": ""
													}
												],
												"src": "6254:619:10"
											},
											{
												"body": {
													"nativeSrc": "6962:391:10",
													"nodeType": "YulBlock",
													"src": "6962:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7008:83:10",
																"nodeType": "YulBlock",
																"src": "7008:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7010:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "7010:77:10"
																			},
																			"nativeSrc": "7010:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7010:79:10"
																		},
																		"nativeSrc": "7010:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7010:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6983:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6983:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6992:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6992:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6979:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6979:3:10"
																		},
																		"nativeSrc": "6979:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6979:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7004:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7004:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6975:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6975:3:10"
																},
																"nativeSrc": "6975:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6975:32:10"
															},
															"nativeSrc": "6972:119:10",
															"nodeType": "YulIf",
															"src": "6972:119:10"
														},
														{
															"nativeSrc": "7101:117:10",
															"nodeType": "YulBlock",
															"src": "7101:117:10",
															"statements": [
																{
																	"nativeSrc": "7116:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7116:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7130:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7130:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7120:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7120:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7145:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7145:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7180:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7180:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7191:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7191:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7176:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7176:3:10"
																				},
																				"nativeSrc": "7176:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7176:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7200:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7200:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7155:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7155:20:10"
																		},
																		"nativeSrc": "7155:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7155:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7145:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7145:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "7228:118:10",
															"nodeType": "YulBlock",
															"src": "7228:118:10",
															"statements": [
																{
																	"nativeSrc": "7243:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7243:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7257:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7257:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7247:6:10",
																			"nodeType": "YulTypedName",
																			"src": "7247:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7273:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7273:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7308:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7308:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7319:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7319:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7304:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7304:3:10"
																				},
																				"nativeSrc": "7304:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7304:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7328:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7328:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "7283:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7283:20:10"
																		},
																		"nativeSrc": "7283:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7283:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7273:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7273:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "6879:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6924:9:10",
														"nodeType": "YulTypedName",
														"src": "6924:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6935:7:10",
														"nodeType": "YulTypedName",
														"src": "6935:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6947:6:10",
														"nodeType": "YulTypedName",
														"src": "6947:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6955:6:10",
														"nodeType": "YulTypedName",
														"src": "6955:6:10",
														"type": ""
													}
												],
												"src": "6879:474:10"
											},
											{
												"body": {
													"nativeSrc": "7402:43:10",
													"nodeType": "YulBlock",
													"src": "7402:43:10",
													"statements": [
														{
															"nativeSrc": "7412:27:10",
															"nodeType": "YulAssignment",
															"src": "7412:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7427:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "7427:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7434:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7434:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7423:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7423:3:10"
																},
																"nativeSrc": "7423:16:10",
																"nodeType": "YulFunctionCall",
																"src": "7423:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7412:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "7412:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "7359:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7384:5:10",
														"nodeType": "YulTypedName",
														"src": "7384:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7394:7:10",
														"nodeType": "YulTypedName",
														"src": "7394:7:10",
														"type": ""
													}
												],
												"src": "7359:86:10"
											},
											{
												"body": {
													"nativeSrc": "7512:51:10",
													"nodeType": "YulBlock",
													"src": "7512:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7529:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7529:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7550:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7550:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "7534:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "7534:15:10"
																		},
																		"nativeSrc": "7534:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7534:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7522:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7522:6:10"
																},
																"nativeSrc": "7522:35:10",
																"nodeType": "YulFunctionCall",
																"src": "7522:35:10"
															},
															"nativeSrc": "7522:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "7522:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "7451:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7500:5:10",
														"nodeType": "YulTypedName",
														"src": "7500:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7507:3:10",
														"nodeType": "YulTypedName",
														"src": "7507:3:10",
														"type": ""
													}
												],
												"src": "7451:112:10"
											},
											{
												"body": {
													"nativeSrc": "7663:120:10",
													"nodeType": "YulBlock",
													"src": "7663:120:10",
													"statements": [
														{
															"nativeSrc": "7673:26:10",
															"nodeType": "YulAssignment",
															"src": "7673:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7685:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7685:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7696:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7696:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7681:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7681:3:10"
																},
																"nativeSrc": "7681:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7681:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7673:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7673:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7749:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7749:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7762:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7762:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7773:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7773:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7758:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7758:3:10"
																		},
																		"nativeSrc": "7758:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7758:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "7709:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "7709:39:10"
																},
																"nativeSrc": "7709:67:10",
																"nodeType": "YulFunctionCall",
																"src": "7709:67:10"
															},
															"nativeSrc": "7709:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "7709:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "7569:214:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7635:9:10",
														"nodeType": "YulTypedName",
														"src": "7635:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7647:6:10",
														"nodeType": "YulTypedName",
														"src": "7647:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7658:4:10",
														"nodeType": "YulTypedName",
														"src": "7658:4:10",
														"type": ""
													}
												],
												"src": "7569:214:10"
											},
											{
												"body": {
													"nativeSrc": "7855:263:10",
													"nodeType": "YulBlock",
													"src": "7855:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "7901:83:10",
																"nodeType": "YulBlock",
																"src": "7901:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7903:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "7903:77:10"
																			},
																			"nativeSrc": "7903:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7903:79:10"
																		},
																		"nativeSrc": "7903:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7903:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7876:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7876:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7885:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7885:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7872:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7872:3:10"
																		},
																		"nativeSrc": "7872:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7872:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7897:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7897:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7868:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7868:3:10"
																},
																"nativeSrc": "7868:32:10",
																"nodeType": "YulFunctionCall",
																"src": "7868:32:10"
															},
															"nativeSrc": "7865:119:10",
															"nodeType": "YulIf",
															"src": "7865:119:10"
														},
														{
															"nativeSrc": "7994:117:10",
															"nodeType": "YulBlock",
															"src": "7994:117:10",
															"statements": [
																{
																	"nativeSrc": "8009:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8009:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8023:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8023:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8013:6:10",
																			"nodeType": "YulTypedName",
																			"src": "8013:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8038:63:10",
																	"nodeType": "YulAssignment",
																	"src": "8038:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8073:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8073:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8084:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8084:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8069:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8069:3:10"
																				},
																				"nativeSrc": "8069:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8069:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8093:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8093:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8048:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "8048:20:10"
																		},
																		"nativeSrc": "8048:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8048:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8038:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8038:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "7789:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7825:9:10",
														"nodeType": "YulTypedName",
														"src": "7825:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7836:7:10",
														"nodeType": "YulTypedName",
														"src": "7836:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7848:6:10",
														"nodeType": "YulTypedName",
														"src": "7848:6:10",
														"type": ""
													}
												],
												"src": "7789:329:10"
											},
											{
												"body": {
													"nativeSrc": "8207:391:10",
													"nodeType": "YulBlock",
													"src": "8207:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "8253:83:10",
																"nodeType": "YulBlock",
																"src": "8253:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8255:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "8255:77:10"
																			},
																			"nativeSrc": "8255:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8255:79:10"
																		},
																		"nativeSrc": "8255:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8255:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8228:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8228:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8237:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8237:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8224:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8224:3:10"
																		},
																		"nativeSrc": "8224:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8224:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8249:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8249:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8220:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8220:3:10"
																},
																"nativeSrc": "8220:32:10",
																"nodeType": "YulFunctionCall",
																"src": "8220:32:10"
															},
															"nativeSrc": "8217:119:10",
															"nodeType": "YulIf",
															"src": "8217:119:10"
														},
														{
															"nativeSrc": "8346:117:10",
															"nodeType": "YulBlock",
															"src": "8346:117:10",
															"statements": [
																{
																	"nativeSrc": "8361:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8361:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8375:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8375:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8365:6:10",
																			"nodeType": "YulTypedName",
																			"src": "8365:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8390:63:10",
																	"nodeType": "YulAssignment",
																	"src": "8390:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8425:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8425:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8436:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8436:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8421:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8421:3:10"
																				},
																				"nativeSrc": "8421:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8421:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8445:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8445:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8400:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "8400:20:10"
																		},
																		"nativeSrc": "8400:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8400:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8390:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8390:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8473:118:10",
															"nodeType": "YulBlock",
															"src": "8473:118:10",
															"statements": [
																{
																	"nativeSrc": "8488:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8488:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8502:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8502:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8492:6:10",
																			"nodeType": "YulTypedName",
																			"src": "8492:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8518:63:10",
																	"nodeType": "YulAssignment",
																	"src": "8518:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8553:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "8553:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8564:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "8564:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8549:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "8549:3:10"
																				},
																				"nativeSrc": "8549:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "8549:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8573:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "8573:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8528:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "8528:20:10"
																		},
																		"nativeSrc": "8528:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8528:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8518:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "8518:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "8124:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8169:9:10",
														"nodeType": "YulTypedName",
														"src": "8169:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8180:7:10",
														"nodeType": "YulTypedName",
														"src": "8180:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8192:6:10",
														"nodeType": "YulTypedName",
														"src": "8192:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8200:6:10",
														"nodeType": "YulTypedName",
														"src": "8200:6:10",
														"type": ""
													}
												],
												"src": "8124:474:10"
											},
											{
												"body": {
													"nativeSrc": "8632:152:10",
													"nodeType": "YulBlock",
													"src": "8632:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8649:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8649:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8652:77:10",
																		"nodeType": "YulLiteral",
																		"src": "8652:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8642:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8642:6:10"
																},
																"nativeSrc": "8642:88:10",
																"nodeType": "YulFunctionCall",
																"src": "8642:88:10"
															},
															"nativeSrc": "8642:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "8642:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8746:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8746:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8749:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8749:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8739:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8739:6:10"
																},
																"nativeSrc": "8739:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8739:15:10"
															},
															"nativeSrc": "8739:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8739:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8770:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8770:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8773:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8773:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8763:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8763:6:10"
																},
																"nativeSrc": "8763:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8763:15:10"
															},
															"nativeSrc": "8763:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8763:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8604:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "8604:180:10"
											},
											{
												"body": {
													"nativeSrc": "8835:149:10",
													"nodeType": "YulBlock",
													"src": "8835:149:10",
													"statements": [
														{
															"nativeSrc": "8845:25:10",
															"nodeType": "YulAssignment",
															"src": "8845:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8868:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8868:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8850:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8850:17:10"
																},
																"nativeSrc": "8850:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8850:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8845:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8845:1:10"
																}
															]
														},
														{
															"nativeSrc": "8879:25:10",
															"nodeType": "YulAssignment",
															"src": "8879:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8902:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8902:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8884:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8884:17:10"
																},
																"nativeSrc": "8884:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8884:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8879:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8879:1:10"
																}
															]
														},
														{
															"nativeSrc": "8913:17:10",
															"nodeType": "YulAssignment",
															"src": "8913:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8925:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8925:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8928:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8928:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8921:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8921:3:10"
																},
																"nativeSrc": "8921:9:10",
																"nodeType": "YulFunctionCall",
																"src": "8921:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8913:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8913:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8955:22:10",
																"nodeType": "YulBlock",
																"src": "8955:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8957:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8957:16:10"
																			},
																			"nativeSrc": "8957:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8957:18:10"
																		},
																		"nativeSrc": "8957:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8957:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8946:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8946:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8952:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8952:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8943:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8943:2:10"
																},
																"nativeSrc": "8943:11:10",
																"nodeType": "YulFunctionCall",
																"src": "8943:11:10"
															},
															"nativeSrc": "8940:37:10",
															"nodeType": "YulIf",
															"src": "8940:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8790:194:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8821:1:10",
														"nodeType": "YulTypedName",
														"src": "8821:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8824:1:10",
														"nodeType": "YulTypedName",
														"src": "8824:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8830:4:10",
														"nodeType": "YulTypedName",
														"src": "8830:4:10",
														"type": ""
													}
												],
												"src": "8790:194:10"
											},
											{
												"body": {
													"nativeSrc": "9038:362:10",
													"nodeType": "YulBlock",
													"src": "9038:362:10",
													"statements": [
														{
															"nativeSrc": "9048:25:10",
															"nodeType": "YulAssignment",
															"src": "9048:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9071:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9071:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9053:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9053:17:10"
																},
																"nativeSrc": "9053:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9053:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9048:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "9048:1:10"
																}
															]
														},
														{
															"nativeSrc": "9082:25:10",
															"nodeType": "YulAssignment",
															"src": "9082:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9105:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9105:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9087:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9087:17:10"
																},
																"nativeSrc": "9087:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9087:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9082:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "9082:1:10"
																}
															]
														},
														{
															"nativeSrc": "9116:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "9116:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9139:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9139:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9142:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9142:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9135:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9135:3:10"
																},
																"nativeSrc": "9135:9:10",
																"nodeType": "YulFunctionCall",
																"src": "9135:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "9120:11:10",
																	"nodeType": "YulTypedName",
																	"src": "9120:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "9153:41:10",
															"nodeType": "YulAssignment",
															"src": "9153:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "9182:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "9182:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9164:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9164:17:10"
																},
																"nativeSrc": "9164:30:10",
																"nodeType": "YulFunctionCall",
																"src": "9164:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9153:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "9153:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9371:22:10",
																"nodeType": "YulBlock",
																"src": "9371:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9373:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "9373:16:10"
																			},
																			"nativeSrc": "9373:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9373:18:10"
																		},
																		"nativeSrc": "9373:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9373:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9304:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "9304:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9297:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "9297:6:10"
																				},
																				"nativeSrc": "9297:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9297:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9327:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "9327:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9334:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "9334:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9343:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "9343:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9330:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "9330:3:10"
																						},
																						"nativeSrc": "9330:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "9330:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9324:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "9324:2:10"
																				},
																				"nativeSrc": "9324:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9324:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9277:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "9277:2:10"
																		},
																		"nativeSrc": "9277:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9277:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9257:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9257:6:10"
																},
																"nativeSrc": "9257:113:10",
																"nodeType": "YulFunctionCall",
																"src": "9257:113:10"
															},
															"nativeSrc": "9254:139:10",
															"nodeType": "YulIf",
															"src": "9254:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "8990:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9021:1:10",
														"nodeType": "YulTypedName",
														"src": "9021:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9024:1:10",
														"nodeType": "YulTypedName",
														"src": "9024:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9030:7:10",
														"nodeType": "YulTypedName",
														"src": "9030:7:10",
														"type": ""
													}
												],
												"src": "8990:410:10"
											},
											{
												"body": {
													"nativeSrc": "9450:147:10",
													"nodeType": "YulBlock",
													"src": "9450:147:10",
													"statements": [
														{
															"nativeSrc": "9460:25:10",
															"nodeType": "YulAssignment",
															"src": "9460:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9483:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9483:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9465:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9465:17:10"
																},
																"nativeSrc": "9465:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9465:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9460:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "9460:1:10"
																}
															]
														},
														{
															"nativeSrc": "9494:25:10",
															"nodeType": "YulAssignment",
															"src": "9494:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9517:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9517:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9499:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9499:17:10"
																},
																"nativeSrc": "9499:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9499:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9494:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "9494:1:10"
																}
															]
														},
														{
															"nativeSrc": "9528:16:10",
															"nodeType": "YulAssignment",
															"src": "9528:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9539:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9539:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9542:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9542:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9535:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9535:3:10"
																},
																"nativeSrc": "9535:9:10",
																"nodeType": "YulFunctionCall",
																"src": "9535:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9528:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9528:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9568:22:10",
																"nodeType": "YulBlock",
																"src": "9568:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9570:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "9570:16:10"
																			},
																			"nativeSrc": "9570:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9570:18:10"
																		},
																		"nativeSrc": "9570:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9570:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9560:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9560:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9563:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "9563:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9557:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "9557:2:10"
																},
																"nativeSrc": "9557:10:10",
																"nodeType": "YulFunctionCall",
																"src": "9557:10:10"
															},
															"nativeSrc": "9554:36:10",
															"nodeType": "YulIf",
															"src": "9554:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9406:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9437:1:10",
														"nodeType": "YulTypedName",
														"src": "9437:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9440:1:10",
														"nodeType": "YulTypedName",
														"src": "9440:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9446:3:10",
														"nodeType": "YulTypedName",
														"src": "9446:3:10",
														"type": ""
													}
												],
												"src": "9406:191:10"
											},
											{
												"body": {
													"nativeSrc": "9631:152:10",
													"nodeType": "YulBlock",
													"src": "9631:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9648:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9648:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9651:77:10",
																		"nodeType": "YulLiteral",
																		"src": "9651:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9641:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9641:6:10"
																},
																"nativeSrc": "9641:88:10",
																"nodeType": "YulFunctionCall",
																"src": "9641:88:10"
															},
															"nativeSrc": "9641:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "9641:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9745:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9745:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9748:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9748:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9738:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9738:6:10"
																},
																"nativeSrc": "9738:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9738:15:10"
															},
															"nativeSrc": "9738:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "9738:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9769:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9769:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9772:4:10",
																		"nodeType": "YulLiteral",
																		"src": "9772:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9762:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9762:6:10"
																},
																"nativeSrc": "9762:15:10",
																"nodeType": "YulFunctionCall",
																"src": "9762:15:10"
															},
															"nativeSrc": "9762:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "9762:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "9603:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "9603:180:10"
											},
											{
												"body": {
													"nativeSrc": "9831:143:10",
													"nodeType": "YulBlock",
													"src": "9831:143:10",
													"statements": [
														{
															"nativeSrc": "9841:25:10",
															"nodeType": "YulAssignment",
															"src": "9841:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9864:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9864:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9846:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9846:17:10"
																},
																"nativeSrc": "9846:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9846:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9841:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "9841:1:10"
																}
															]
														},
														{
															"nativeSrc": "9875:25:10",
															"nodeType": "YulAssignment",
															"src": "9875:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9898:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9898:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9880:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "9880:17:10"
																},
																"nativeSrc": "9880:20:10",
																"nodeType": "YulFunctionCall",
																"src": "9880:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9875:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "9875:1:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9922:22:10",
																"nodeType": "YulBlock",
																"src": "9922:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "9924:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "9924:16:10"
																			},
																			"nativeSrc": "9924:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9924:18:10"
																		},
																		"nativeSrc": "9924:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9924:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9919:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9919:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9912:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9912:6:10"
																},
																"nativeSrc": "9912:9:10",
																"nodeType": "YulFunctionCall",
																"src": "9912:9:10"
															},
															"nativeSrc": "9909:35:10",
															"nodeType": "YulIf",
															"src": "9909:35:10"
														},
														{
															"nativeSrc": "9954:14:10",
															"nodeType": "YulAssignment",
															"src": "9954:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9963:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9963:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9966:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "9966:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9959:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9959:3:10"
																},
																"nativeSrc": "9959:9:10",
																"nodeType": "YulFunctionCall",
																"src": "9959:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9954:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "9954:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9789:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9820:1:10",
														"nodeType": "YulTypedName",
														"src": "9820:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9823:1:10",
														"nodeType": "YulTypedName",
														"src": "9823:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9829:1:10",
														"nodeType": "YulTypedName",
														"src": "9829:1:10",
														"type": ""
													}
												],
												"src": "9789:185:10"
											},
											{
												"body": {
													"nativeSrc": "10008:152:10",
													"nodeType": "YulBlock",
													"src": "10008:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10025:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10025:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10028:77:10",
																		"nodeType": "YulLiteral",
																		"src": "10028:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10018:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10018:6:10"
																},
																"nativeSrc": "10018:88:10",
																"nodeType": "YulFunctionCall",
																"src": "10018:88:10"
															},
															"nativeSrc": "10018:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "10018:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10122:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10122:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10125:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10125:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10115:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10115:6:10"
																},
																"nativeSrc": "10115:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10115:15:10"
															},
															"nativeSrc": "10115:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "10115:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10146:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10146:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10149:4:10",
																		"nodeType": "YulLiteral",
																		"src": "10149:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10139:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10139:6:10"
																},
																"nativeSrc": "10139:15:10",
																"nodeType": "YulFunctionCall",
																"src": "10139:15:10"
															},
															"nativeSrc": "10139:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "10139:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "9980:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "9980:180:10"
											},
											{
												"body": {
													"nativeSrc": "10217:269:10",
													"nodeType": "YulBlock",
													"src": "10217:269:10",
													"statements": [
														{
															"nativeSrc": "10227:22:10",
															"nodeType": "YulAssignment",
															"src": "10227:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10241:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10241:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10247:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10247:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10237:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10237:3:10"
																},
																"nativeSrc": "10237:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10237:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10227:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10227:6:10"
																}
															]
														},
														{
															"nativeSrc": "10258:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "10258:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10288:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10288:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10294:1:10",
																		"nodeType": "YulLiteral",
																		"src": "10294:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10284:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10284:3:10"
																},
																"nativeSrc": "10284:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10284:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10262:18:10",
																	"nodeType": "YulTypedName",
																	"src": "10262:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10335:51:10",
																"nodeType": "YulBlock",
																"src": "10335:51:10",
																"statements": [
																	{
																		"nativeSrc": "10349:27:10",
																		"nodeType": "YulAssignment",
																		"src": "10349:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10363:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "10363:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10371:4:10",
																					"nodeType": "YulLiteral",
																					"src": "10371:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10359:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "10359:3:10"
																			},
																			"nativeSrc": "10359:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10359:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10349:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10349:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10315:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "10315:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10308:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10308:6:10"
																},
																"nativeSrc": "10308:26:10",
																"nodeType": "YulFunctionCall",
																"src": "10308:26:10"
															},
															"nativeSrc": "10305:81:10",
															"nodeType": "YulIf",
															"src": "10305:81:10"
														},
														{
															"body": {
																"nativeSrc": "10438:42:10",
																"nodeType": "YulBlock",
																"src": "10438:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10452:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "10452:16:10"
																			},
																			"nativeSrc": "10452:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "10452:18:10"
																		},
																		"nativeSrc": "10452:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "10452:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10402:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "10402:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10425:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10425:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10433:2:10",
																				"nodeType": "YulLiteral",
																				"src": "10433:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10422:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "10422:2:10"
																		},
																		"nativeSrc": "10422:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10422:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10399:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "10399:2:10"
																},
																"nativeSrc": "10399:38:10",
																"nodeType": "YulFunctionCall",
																"src": "10399:38:10"
															},
															"nativeSrc": "10396:84:10",
															"nodeType": "YulIf",
															"src": "10396:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10166:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10201:4:10",
														"nodeType": "YulTypedName",
														"src": "10201:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10210:6:10",
														"nodeType": "YulTypedName",
														"src": "10210:6:10",
														"type": ""
													}
												],
												"src": "10166:320:10"
											},
											{
												"body": {
													"nativeSrc": "10598:69:10",
													"nodeType": "YulBlock",
													"src": "10598:69:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10620:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10620:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10628:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10628:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10616:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10616:3:10"
																		},
																		"nativeSrc": "10616:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10616:14:10"
																	},
																	{
																		"hexValue": "414d4d3a20496e76616c696420696e70757420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "10632:27:10",
																		"nodeType": "YulLiteral",
																		"src": "10632:27:10",
																		"type": "",
																		"value": "AMM: Invalid input amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10609:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10609:6:10"
																},
																"nativeSrc": "10609:51:10",
																"nodeType": "YulFunctionCall",
																"src": "10609:51:10"
															},
															"nativeSrc": "10609:51:10",
															"nodeType": "YulExpressionStatement",
															"src": "10609:51:10"
														}
													]
												},
												"name": "store_literal_in_memory_48444213144a111ad5938f45387486d3e52bbe9c50db4b273e9873d13904bd38",
												"nativeSrc": "10492:175:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10590:6:10",
														"nodeType": "YulTypedName",
														"src": "10590:6:10",
														"type": ""
													}
												],
												"src": "10492:175:10"
											},
											{
												"body": {
													"nativeSrc": "10819:220:10",
													"nodeType": "YulBlock",
													"src": "10819:220:10",
													"statements": [
														{
															"nativeSrc": "10829:74:10",
															"nodeType": "YulAssignment",
															"src": "10829:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10895:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10895:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10900:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10900:2:10",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10836:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "10836:58:10"
																},
																"nativeSrc": "10836:67:10",
																"nodeType": "YulFunctionCall",
																"src": "10836:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10829:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10829:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11001:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11001:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_48444213144a111ad5938f45387486d3e52bbe9c50db4b273e9873d13904bd38",
																	"nativeSrc": "10912:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "10912:88:10"
																},
																"nativeSrc": "10912:93:10",
																"nodeType": "YulFunctionCall",
																"src": "10912:93:10"
															},
															"nativeSrc": "10912:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "10912:93:10"
														},
														{
															"nativeSrc": "11014:19:10",
															"nodeType": "YulAssignment",
															"src": "11014:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11025:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11025:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11030:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11030:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11021:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11021:3:10"
																},
																"nativeSrc": "11021:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11021:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11014:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11014:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_48444213144a111ad5938f45387486d3e52bbe9c50db4b273e9873d13904bd38_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10673:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10807:3:10",
														"nodeType": "YulTypedName",
														"src": "10807:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10815:3:10",
														"nodeType": "YulTypedName",
														"src": "10815:3:10",
														"type": ""
													}
												],
												"src": "10673:366:10"
											},
											{
												"body": {
													"nativeSrc": "11216:248:10",
													"nodeType": "YulBlock",
													"src": "11216:248:10",
													"statements": [
														{
															"nativeSrc": "11226:26:10",
															"nodeType": "YulAssignment",
															"src": "11226:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11238:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11238:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11249:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11249:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11234:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11234:3:10"
																},
																"nativeSrc": "11234:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11234:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11226:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11226:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11273:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11273:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11284:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11284:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11269:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11269:3:10"
																		},
																		"nativeSrc": "11269:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11269:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11292:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "11292:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11298:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11298:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11288:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11288:3:10"
																		},
																		"nativeSrc": "11288:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11288:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11262:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11262:6:10"
																},
																"nativeSrc": "11262:47:10",
																"nodeType": "YulFunctionCall",
																"src": "11262:47:10"
															},
															"nativeSrc": "11262:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "11262:47:10"
														},
														{
															"nativeSrc": "11318:139:10",
															"nodeType": "YulAssignment",
															"src": "11318:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11452:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11452:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_48444213144a111ad5938f45387486d3e52bbe9c50db4b273e9873d13904bd38_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11326:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "11326:124:10"
																},
																"nativeSrc": "11326:131:10",
																"nodeType": "YulFunctionCall",
																"src": "11326:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11318:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11318:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_48444213144a111ad5938f45387486d3e52bbe9c50db4b273e9873d13904bd38__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11045:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11196:9:10",
														"nodeType": "YulTypedName",
														"src": "11196:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11211:4:10",
														"nodeType": "YulTypedName",
														"src": "11211:4:10",
														"type": ""
													}
												],
												"src": "11045:419:10"
											},
											{
												"body": {
													"nativeSrc": "11576:75:10",
													"nodeType": "YulBlock",
													"src": "11576:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11598:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11598:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11606:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11606:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11594:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11594:3:10"
																		},
																		"nativeSrc": "11594:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11594:14:10"
																	},
																	{
																		"hexValue": "414d4d3a20496e73756666696369656e74206f757470757420616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "11610:33:10",
																		"nodeType": "YulLiteral",
																		"src": "11610:33:10",
																		"type": "",
																		"value": "AMM: Insufficient output amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11587:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11587:6:10"
																},
																"nativeSrc": "11587:57:10",
																"nodeType": "YulFunctionCall",
																"src": "11587:57:10"
															},
															"nativeSrc": "11587:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "11587:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_15e548c7011cde46414da6f3579dd9e17bb98db01586c06df928619dd0076ab6",
												"nativeSrc": "11470:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11568:6:10",
														"nodeType": "YulTypedName",
														"src": "11568:6:10",
														"type": ""
													}
												],
												"src": "11470:181:10"
											},
											{
												"body": {
													"nativeSrc": "11803:220:10",
													"nodeType": "YulBlock",
													"src": "11803:220:10",
													"statements": [
														{
															"nativeSrc": "11813:74:10",
															"nodeType": "YulAssignment",
															"src": "11813:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11879:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11879:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11884:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11884:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11820:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "11820:58:10"
																},
																"nativeSrc": "11820:67:10",
																"nodeType": "YulFunctionCall",
																"src": "11820:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11813:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11813:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11985:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11985:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_15e548c7011cde46414da6f3579dd9e17bb98db01586c06df928619dd0076ab6",
																	"nativeSrc": "11896:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "11896:88:10"
																},
																"nativeSrc": "11896:93:10",
																"nodeType": "YulFunctionCall",
																"src": "11896:93:10"
															},
															"nativeSrc": "11896:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "11896:93:10"
														},
														{
															"nativeSrc": "11998:19:10",
															"nodeType": "YulAssignment",
															"src": "11998:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12009:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12009:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12014:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12014:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12005:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12005:3:10"
																},
																"nativeSrc": "12005:12:10",
																"nodeType": "YulFunctionCall",
																"src": "12005:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11998:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11998:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_15e548c7011cde46414da6f3579dd9e17bb98db01586c06df928619dd0076ab6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11657:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11791:3:10",
														"nodeType": "YulTypedName",
														"src": "11791:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11799:3:10",
														"nodeType": "YulTypedName",
														"src": "11799:3:10",
														"type": ""
													}
												],
												"src": "11657:366:10"
											},
											{
												"body": {
													"nativeSrc": "12200:248:10",
													"nodeType": "YulBlock",
													"src": "12200:248:10",
													"statements": [
														{
															"nativeSrc": "12210:26:10",
															"nodeType": "YulAssignment",
															"src": "12210:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12222:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12222:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12233:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12233:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12218:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12218:3:10"
																},
																"nativeSrc": "12218:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12218:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12210:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12210:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12257:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12257:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12268:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12268:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12253:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12253:3:10"
																		},
																		"nativeSrc": "12253:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12253:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12276:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12276:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12282:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12282:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12272:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12272:3:10"
																		},
																		"nativeSrc": "12272:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12272:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12246:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12246:6:10"
																},
																"nativeSrc": "12246:47:10",
																"nodeType": "YulFunctionCall",
																"src": "12246:47:10"
															},
															"nativeSrc": "12246:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "12246:47:10"
														},
														{
															"nativeSrc": "12302:139:10",
															"nodeType": "YulAssignment",
															"src": "12302:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12436:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12436:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_15e548c7011cde46414da6f3579dd9e17bb98db01586c06df928619dd0076ab6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12310:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "12310:124:10"
																},
																"nativeSrc": "12310:131:10",
																"nodeType": "YulFunctionCall",
																"src": "12310:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12302:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12302:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_15e548c7011cde46414da6f3579dd9e17bb98db01586c06df928619dd0076ab6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12029:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12180:9:10",
														"nodeType": "YulTypedName",
														"src": "12180:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12195:4:10",
														"nodeType": "YulTypedName",
														"src": "12195:4:10",
														"type": ""
													}
												],
												"src": "12029:419:10"
											},
											{
												"body": {
													"nativeSrc": "12636:371:10",
													"nodeType": "YulBlock",
													"src": "12636:371:10",
													"statements": [
														{
															"nativeSrc": "12646:27:10",
															"nodeType": "YulAssignment",
															"src": "12646:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12658:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12658:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12669:3:10",
																		"nodeType": "YulLiteral",
																		"src": "12669:3:10",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12654:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12654:3:10"
																},
																"nativeSrc": "12654:19:10",
																"nodeType": "YulFunctionCall",
																"src": "12654:19:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12646:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12646:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12727:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12727:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12740:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12740:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12751:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12751:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12736:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12736:3:10"
																		},
																		"nativeSrc": "12736:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12736:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12683:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "12683:43:10"
																},
																"nativeSrc": "12683:71:10",
																"nodeType": "YulFunctionCall",
																"src": "12683:71:10"
															},
															"nativeSrc": "12683:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "12683:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12808:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12808:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12821:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12821:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12832:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12832:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12817:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12817:3:10"
																		},
																		"nativeSrc": "12817:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12817:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12764:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "12764:43:10"
																},
																"nativeSrc": "12764:72:10",
																"nodeType": "YulFunctionCall",
																"src": "12764:72:10"
															},
															"nativeSrc": "12764:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "12764:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12890:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12890:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12903:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12903:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12914:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12914:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12899:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12899:3:10"
																		},
																		"nativeSrc": "12899:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12899:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12846:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "12846:43:10"
																},
																"nativeSrc": "12846:72:10",
																"nodeType": "YulFunctionCall",
																"src": "12846:72:10"
															},
															"nativeSrc": "12846:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "12846:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "12972:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "12972:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12985:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12985:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12996:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12996:2:10",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12981:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12981:3:10"
																		},
																		"nativeSrc": "12981:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12981:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12928:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "12928:43:10"
																},
																"nativeSrc": "12928:72:10",
																"nodeType": "YulFunctionCall",
																"src": "12928:72:10"
															},
															"nativeSrc": "12928:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "12928:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_address_t_address__to_t_uint256_t_uint256_t_address_t_address__fromStack_reversed",
												"nativeSrc": "12454:553:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12584:9:10",
														"nodeType": "YulTypedName",
														"src": "12584:9:10",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12596:6:10",
														"nodeType": "YulTypedName",
														"src": "12596:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12604:6:10",
														"nodeType": "YulTypedName",
														"src": "12604:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12612:6:10",
														"nodeType": "YulTypedName",
														"src": "12612:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12620:6:10",
														"nodeType": "YulTypedName",
														"src": "12620:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12631:4:10",
														"nodeType": "YulTypedName",
														"src": "12631:4:10",
														"type": ""
													}
												],
												"src": "12454:553:10"
											},
											{
												"body": {
													"nativeSrc": "13119:73:10",
													"nodeType": "YulBlock",
													"src": "13119:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13141:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13141:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13149:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13149:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13137:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13137:3:10"
																		},
																		"nativeSrc": "13137:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13137:14:10"
																	},
																	{
																		"hexValue": "414d4d3a2063616c6c6572206973206e6f74206120676f7665726e6f72",
																		"kind": "string",
																		"nativeSrc": "13153:31:10",
																		"nodeType": "YulLiteral",
																		"src": "13153:31:10",
																		"type": "",
																		"value": "AMM: caller is not a governor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13130:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13130:6:10"
																},
																"nativeSrc": "13130:55:10",
																"nodeType": "YulFunctionCall",
																"src": "13130:55:10"
															},
															"nativeSrc": "13130:55:10",
															"nodeType": "YulExpressionStatement",
															"src": "13130:55:10"
														}
													]
												},
												"name": "store_literal_in_memory_2296ab563b257b59482997b18d89814bd9e2d117faf16d5269bc2ecd6675a405",
												"nativeSrc": "13013:179:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13111:6:10",
														"nodeType": "YulTypedName",
														"src": "13111:6:10",
														"type": ""
													}
												],
												"src": "13013:179:10"
											},
											{
												"body": {
													"nativeSrc": "13344:220:10",
													"nodeType": "YulBlock",
													"src": "13344:220:10",
													"statements": [
														{
															"nativeSrc": "13354:74:10",
															"nodeType": "YulAssignment",
															"src": "13354:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13420:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13420:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13425:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13425:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13361:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "13361:58:10"
																},
																"nativeSrc": "13361:67:10",
																"nodeType": "YulFunctionCall",
																"src": "13361:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13354:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13354:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13526:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13526:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_2296ab563b257b59482997b18d89814bd9e2d117faf16d5269bc2ecd6675a405",
																	"nativeSrc": "13437:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "13437:88:10"
																},
																"nativeSrc": "13437:93:10",
																"nodeType": "YulFunctionCall",
																"src": "13437:93:10"
															},
															"nativeSrc": "13437:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "13437:93:10"
														},
														{
															"nativeSrc": "13539:19:10",
															"nodeType": "YulAssignment",
															"src": "13539:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13550:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13550:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13555:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13555:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13546:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13546:3:10"
																},
																"nativeSrc": "13546:12:10",
																"nodeType": "YulFunctionCall",
																"src": "13546:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13539:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13539:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_2296ab563b257b59482997b18d89814bd9e2d117faf16d5269bc2ecd6675a405_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13198:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13332:3:10",
														"nodeType": "YulTypedName",
														"src": "13332:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13340:3:10",
														"nodeType": "YulTypedName",
														"src": "13340:3:10",
														"type": ""
													}
												],
												"src": "13198:366:10"
											},
											{
												"body": {
													"nativeSrc": "13741:248:10",
													"nodeType": "YulBlock",
													"src": "13741:248:10",
													"statements": [
														{
															"nativeSrc": "13751:26:10",
															"nodeType": "YulAssignment",
															"src": "13751:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13763:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13763:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13774:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13774:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13759:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13759:3:10"
																},
																"nativeSrc": "13759:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13759:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13751:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13751:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13798:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13798:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13809:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13809:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13794:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13794:3:10"
																		},
																		"nativeSrc": "13794:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13794:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13817:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "13817:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13823:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13823:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13813:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13813:3:10"
																		},
																		"nativeSrc": "13813:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13813:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13787:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13787:6:10"
																},
																"nativeSrc": "13787:47:10",
																"nodeType": "YulFunctionCall",
																"src": "13787:47:10"
															},
															"nativeSrc": "13787:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "13787:47:10"
														},
														{
															"nativeSrc": "13843:139:10",
															"nodeType": "YulAssignment",
															"src": "13843:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13977:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "13977:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_2296ab563b257b59482997b18d89814bd9e2d117faf16d5269bc2ecd6675a405_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13851:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "13851:124:10"
																},
																"nativeSrc": "13851:131:10",
																"nodeType": "YulFunctionCall",
																"src": "13851:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13843:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13843:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2296ab563b257b59482997b18d89814bd9e2d117faf16d5269bc2ecd6675a405__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13570:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13721:9:10",
														"nodeType": "YulTypedName",
														"src": "13721:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13736:4:10",
														"nodeType": "YulTypedName",
														"src": "13736:4:10",
														"type": ""
													}
												],
												"src": "13570:419:10"
											},
											{
												"body": {
													"nativeSrc": "14101:73:10",
													"nodeType": "YulBlock",
													"src": "14101:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14123:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "14123:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14131:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14131:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14119:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14119:3:10"
																		},
																		"nativeSrc": "14119:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14119:14:10"
																	},
																	{
																		"hexValue": "414d4d3a20496e76616c696420676f7665726e6f722061646472657373",
																		"kind": "string",
																		"nativeSrc": "14135:31:10",
																		"nodeType": "YulLiteral",
																		"src": "14135:31:10",
																		"type": "",
																		"value": "AMM: Invalid governor address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14112:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14112:6:10"
																},
																"nativeSrc": "14112:55:10",
																"nodeType": "YulFunctionCall",
																"src": "14112:55:10"
															},
															"nativeSrc": "14112:55:10",
															"nodeType": "YulExpressionStatement",
															"src": "14112:55:10"
														}
													]
												},
												"name": "store_literal_in_memory_c554dd64a7769ca77e368be385fef4dd63f12c1daefbe423f6ebab79c622a854",
												"nativeSrc": "13995:179:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14093:6:10",
														"nodeType": "YulTypedName",
														"src": "14093:6:10",
														"type": ""
													}
												],
												"src": "13995:179:10"
											},
											{
												"body": {
													"nativeSrc": "14326:220:10",
													"nodeType": "YulBlock",
													"src": "14326:220:10",
													"statements": [
														{
															"nativeSrc": "14336:74:10",
															"nodeType": "YulAssignment",
															"src": "14336:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14402:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14402:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14407:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14407:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14343:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "14343:58:10"
																},
																"nativeSrc": "14343:67:10",
																"nodeType": "YulFunctionCall",
																"src": "14343:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14336:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14336:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14508:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14508:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c554dd64a7769ca77e368be385fef4dd63f12c1daefbe423f6ebab79c622a854",
																	"nativeSrc": "14419:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "14419:88:10"
																},
																"nativeSrc": "14419:93:10",
																"nodeType": "YulFunctionCall",
																"src": "14419:93:10"
															},
															"nativeSrc": "14419:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "14419:93:10"
														},
														{
															"nativeSrc": "14521:19:10",
															"nodeType": "YulAssignment",
															"src": "14521:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14532:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14532:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14537:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14537:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14528:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14528:3:10"
																},
																"nativeSrc": "14528:12:10",
																"nodeType": "YulFunctionCall",
																"src": "14528:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14521:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14521:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c554dd64a7769ca77e368be385fef4dd63f12c1daefbe423f6ebab79c622a854_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "14180:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14314:3:10",
														"nodeType": "YulTypedName",
														"src": "14314:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14322:3:10",
														"nodeType": "YulTypedName",
														"src": "14322:3:10",
														"type": ""
													}
												],
												"src": "14180:366:10"
											},
											{
												"body": {
													"nativeSrc": "14723:248:10",
													"nodeType": "YulBlock",
													"src": "14723:248:10",
													"statements": [
														{
															"nativeSrc": "14733:26:10",
															"nodeType": "YulAssignment",
															"src": "14733:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14745:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14745:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14756:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14756:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14741:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14741:3:10"
																},
																"nativeSrc": "14741:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14741:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14733:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14733:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14780:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14780:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14791:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14791:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14776:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14776:3:10"
																		},
																		"nativeSrc": "14776:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14776:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14799:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "14799:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14805:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14805:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14795:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14795:3:10"
																		},
																		"nativeSrc": "14795:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14795:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14769:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14769:6:10"
																},
																"nativeSrc": "14769:47:10",
																"nodeType": "YulFunctionCall",
																"src": "14769:47:10"
															},
															"nativeSrc": "14769:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "14769:47:10"
														},
														{
															"nativeSrc": "14825:139:10",
															"nodeType": "YulAssignment",
															"src": "14825:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14959:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14959:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c554dd64a7769ca77e368be385fef4dd63f12c1daefbe423f6ebab79c622a854_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14833:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "14833:124:10"
																},
																"nativeSrc": "14833:131:10",
																"nodeType": "YulFunctionCall",
																"src": "14833:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14825:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14825:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c554dd64a7769ca77e368be385fef4dd63f12c1daefbe423f6ebab79c622a854__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14552:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14703:9:10",
														"nodeType": "YulTypedName",
														"src": "14703:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14718:4:10",
														"nodeType": "YulTypedName",
														"src": "14718:4:10",
														"type": ""
													}
												],
												"src": "14552:419:10"
											},
											{
												"body": {
													"nativeSrc": "15083:67:10",
													"nodeType": "YulBlock",
													"src": "15083:67:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15105:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "15105:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15113:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15113:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15101:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15101:3:10"
																		},
																		"nativeSrc": "15101:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15101:14:10"
																	},
																	{
																		"hexValue": "414d4d3a20416c7265616479206120676f7665726e6f72",
																		"kind": "string",
																		"nativeSrc": "15117:25:10",
																		"nodeType": "YulLiteral",
																		"src": "15117:25:10",
																		"type": "",
																		"value": "AMM: Already a governor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15094:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15094:6:10"
																},
																"nativeSrc": "15094:49:10",
																"nodeType": "YulFunctionCall",
																"src": "15094:49:10"
															},
															"nativeSrc": "15094:49:10",
															"nodeType": "YulExpressionStatement",
															"src": "15094:49:10"
														}
													]
												},
												"name": "store_literal_in_memory_ea22cddd80232a65dcfc09d9be38d571da6311bd143997e1143b54a540fa28a7",
												"nativeSrc": "14977:173:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15075:6:10",
														"nodeType": "YulTypedName",
														"src": "15075:6:10",
														"type": ""
													}
												],
												"src": "14977:173:10"
											},
											{
												"body": {
													"nativeSrc": "15302:220:10",
													"nodeType": "YulBlock",
													"src": "15302:220:10",
													"statements": [
														{
															"nativeSrc": "15312:74:10",
															"nodeType": "YulAssignment",
															"src": "15312:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15378:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15378:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15383:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15383:2:10",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15319:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "15319:58:10"
																},
																"nativeSrc": "15319:67:10",
																"nodeType": "YulFunctionCall",
																"src": "15319:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15312:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15312:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15484:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15484:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ea22cddd80232a65dcfc09d9be38d571da6311bd143997e1143b54a540fa28a7",
																	"nativeSrc": "15395:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "15395:88:10"
																},
																"nativeSrc": "15395:93:10",
																"nodeType": "YulFunctionCall",
																"src": "15395:93:10"
															},
															"nativeSrc": "15395:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "15395:93:10"
														},
														{
															"nativeSrc": "15497:19:10",
															"nodeType": "YulAssignment",
															"src": "15497:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15508:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15508:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15513:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15513:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15504:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15504:3:10"
																},
																"nativeSrc": "15504:12:10",
																"nodeType": "YulFunctionCall",
																"src": "15504:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15497:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15497:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ea22cddd80232a65dcfc09d9be38d571da6311bd143997e1143b54a540fa28a7_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15156:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15290:3:10",
														"nodeType": "YulTypedName",
														"src": "15290:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15298:3:10",
														"nodeType": "YulTypedName",
														"src": "15298:3:10",
														"type": ""
													}
												],
												"src": "15156:366:10"
											},
											{
												"body": {
													"nativeSrc": "15699:248:10",
													"nodeType": "YulBlock",
													"src": "15699:248:10",
													"statements": [
														{
															"nativeSrc": "15709:26:10",
															"nodeType": "YulAssignment",
															"src": "15709:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15721:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "15721:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15732:2:10",
																		"nodeType": "YulLiteral",
																		"src": "15732:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15717:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15717:3:10"
																},
																"nativeSrc": "15717:18:10",
																"nodeType": "YulFunctionCall",
																"src": "15717:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15709:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15709:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15756:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15756:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15767:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15767:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15752:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15752:3:10"
																		},
																		"nativeSrc": "15752:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15752:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "15775:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "15775:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "15781:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "15781:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "15771:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15771:3:10"
																		},
																		"nativeSrc": "15771:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15771:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15745:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15745:6:10"
																},
																"nativeSrc": "15745:47:10",
																"nodeType": "YulFunctionCall",
																"src": "15745:47:10"
															},
															"nativeSrc": "15745:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "15745:47:10"
														},
														{
															"nativeSrc": "15801:139:10",
															"nodeType": "YulAssignment",
															"src": "15801:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "15935:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "15935:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ea22cddd80232a65dcfc09d9be38d571da6311bd143997e1143b54a540fa28a7_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15809:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "15809:124:10"
																},
																"nativeSrc": "15809:131:10",
																"nodeType": "YulFunctionCall",
																"src": "15809:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15801:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "15801:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ea22cddd80232a65dcfc09d9be38d571da6311bd143997e1143b54a540fa28a7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15528:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15679:9:10",
														"nodeType": "YulTypedName",
														"src": "15679:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15694:4:10",
														"nodeType": "YulTypedName",
														"src": "15694:4:10",
														"type": ""
													}
												],
												"src": "15528:419:10"
											},
											{
												"body": {
													"nativeSrc": "16059:60:10",
													"nodeType": "YulBlock",
													"src": "16059:60:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16081:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "16081:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16089:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16089:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16077:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16077:3:10"
																		},
																		"nativeSrc": "16077:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16077:14:10"
																	},
																	{
																		"hexValue": "414d4d3a20496e76616c696420666565",
																		"kind": "string",
																		"nativeSrc": "16093:18:10",
																		"nodeType": "YulLiteral",
																		"src": "16093:18:10",
																		"type": "",
																		"value": "AMM: Invalid fee"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16070:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16070:6:10"
																},
																"nativeSrc": "16070:42:10",
																"nodeType": "YulFunctionCall",
																"src": "16070:42:10"
															},
															"nativeSrc": "16070:42:10",
															"nodeType": "YulExpressionStatement",
															"src": "16070:42:10"
														}
													]
												},
												"name": "store_literal_in_memory_0079495a98d1affc8c62a2e04f095db89138da4c4b6991ee412e47630d1077f1",
												"nativeSrc": "15953:166:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16051:6:10",
														"nodeType": "YulTypedName",
														"src": "16051:6:10",
														"type": ""
													}
												],
												"src": "15953:166:10"
											},
											{
												"body": {
													"nativeSrc": "16271:220:10",
													"nodeType": "YulBlock",
													"src": "16271:220:10",
													"statements": [
														{
															"nativeSrc": "16281:74:10",
															"nodeType": "YulAssignment",
															"src": "16281:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16347:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16347:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16352:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16352:2:10",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16288:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "16288:58:10"
																},
																"nativeSrc": "16288:67:10",
																"nodeType": "YulFunctionCall",
																"src": "16288:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16281:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16281:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16453:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16453:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0079495a98d1affc8c62a2e04f095db89138da4c4b6991ee412e47630d1077f1",
																	"nativeSrc": "16364:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "16364:88:10"
																},
																"nativeSrc": "16364:93:10",
																"nodeType": "YulFunctionCall",
																"src": "16364:93:10"
															},
															"nativeSrc": "16364:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "16364:93:10"
														},
														{
															"nativeSrc": "16466:19:10",
															"nodeType": "YulAssignment",
															"src": "16466:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16477:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16477:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16482:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16482:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16473:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16473:3:10"
																},
																"nativeSrc": "16473:12:10",
																"nodeType": "YulFunctionCall",
																"src": "16473:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16466:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16466:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0079495a98d1affc8c62a2e04f095db89138da4c4b6991ee412e47630d1077f1_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16125:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16259:3:10",
														"nodeType": "YulTypedName",
														"src": "16259:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16267:3:10",
														"nodeType": "YulTypedName",
														"src": "16267:3:10",
														"type": ""
													}
												],
												"src": "16125:366:10"
											},
											{
												"body": {
													"nativeSrc": "16668:248:10",
													"nodeType": "YulBlock",
													"src": "16668:248:10",
													"statements": [
														{
															"nativeSrc": "16678:26:10",
															"nodeType": "YulAssignment",
															"src": "16678:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16690:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16690:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16701:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16701:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16686:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16686:3:10"
																},
																"nativeSrc": "16686:18:10",
																"nodeType": "YulFunctionCall",
																"src": "16686:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16678:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16678:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16725:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16725:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16736:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16736:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16721:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16721:3:10"
																		},
																		"nativeSrc": "16721:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16721:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16744:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "16744:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16750:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16750:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16740:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16740:3:10"
																		},
																		"nativeSrc": "16740:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16740:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16714:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16714:6:10"
																},
																"nativeSrc": "16714:47:10",
																"nodeType": "YulFunctionCall",
																"src": "16714:47:10"
															},
															"nativeSrc": "16714:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "16714:47:10"
														},
														{
															"nativeSrc": "16770:139:10",
															"nodeType": "YulAssignment",
															"src": "16770:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16904:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "16904:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0079495a98d1affc8c62a2e04f095db89138da4c4b6991ee412e47630d1077f1_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16778:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "16778:124:10"
																},
																"nativeSrc": "16778:131:10",
																"nodeType": "YulFunctionCall",
																"src": "16778:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16770:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16770:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0079495a98d1affc8c62a2e04f095db89138da4c4b6991ee412e47630d1077f1__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16497:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16648:9:10",
														"nodeType": "YulTypedName",
														"src": "16648:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16663:4:10",
														"nodeType": "YulTypedName",
														"src": "16663:4:10",
														"type": ""
													}
												],
												"src": "16497:419:10"
											},
											{
												"body": {
													"nativeSrc": "17028:73:10",
													"nodeType": "YulBlock",
													"src": "17028:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17050:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "17050:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17058:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17058:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17046:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17046:3:10"
																		},
																		"nativeSrc": "17046:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17046:14:10"
																	},
																	{
																		"hexValue": "414d4d3a20496e76616c6964206c697175696469747920616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "17062:31:10",
																		"nodeType": "YulLiteral",
																		"src": "17062:31:10",
																		"type": "",
																		"value": "AMM: Invalid liquidity amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17039:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17039:6:10"
																},
																"nativeSrc": "17039:55:10",
																"nodeType": "YulFunctionCall",
																"src": "17039:55:10"
															},
															"nativeSrc": "17039:55:10",
															"nodeType": "YulExpressionStatement",
															"src": "17039:55:10"
														}
													]
												},
												"name": "store_literal_in_memory_49848e0d01eb0a470b2a286765abf5a64c7ba52cca08cb8ed0b3fdf708969b12",
												"nativeSrc": "16922:179:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17020:6:10",
														"nodeType": "YulTypedName",
														"src": "17020:6:10",
														"type": ""
													}
												],
												"src": "16922:179:10"
											},
											{
												"body": {
													"nativeSrc": "17253:220:10",
													"nodeType": "YulBlock",
													"src": "17253:220:10",
													"statements": [
														{
															"nativeSrc": "17263:74:10",
															"nodeType": "YulAssignment",
															"src": "17263:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17329:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17329:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17334:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17334:2:10",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17270:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "17270:58:10"
																},
																"nativeSrc": "17270:67:10",
																"nodeType": "YulFunctionCall",
																"src": "17270:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17263:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17263:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17435:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17435:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_49848e0d01eb0a470b2a286765abf5a64c7ba52cca08cb8ed0b3fdf708969b12",
																	"nativeSrc": "17346:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "17346:88:10"
																},
																"nativeSrc": "17346:93:10",
																"nodeType": "YulFunctionCall",
																"src": "17346:93:10"
															},
															"nativeSrc": "17346:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "17346:93:10"
														},
														{
															"nativeSrc": "17448:19:10",
															"nodeType": "YulAssignment",
															"src": "17448:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17459:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17459:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17464:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17464:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17455:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17455:3:10"
																},
																"nativeSrc": "17455:12:10",
																"nodeType": "YulFunctionCall",
																"src": "17455:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17448:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17448:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_49848e0d01eb0a470b2a286765abf5a64c7ba52cca08cb8ed0b3fdf708969b12_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17107:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17241:3:10",
														"nodeType": "YulTypedName",
														"src": "17241:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17249:3:10",
														"nodeType": "YulTypedName",
														"src": "17249:3:10",
														"type": ""
													}
												],
												"src": "17107:366:10"
											},
											{
												"body": {
													"nativeSrc": "17650:248:10",
													"nodeType": "YulBlock",
													"src": "17650:248:10",
													"statements": [
														{
															"nativeSrc": "17660:26:10",
															"nodeType": "YulAssignment",
															"src": "17660:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17672:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17672:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17683:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17683:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17668:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17668:3:10"
																},
																"nativeSrc": "17668:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17668:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17660:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17660:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17707:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17707:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17718:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17718:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17703:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17703:3:10"
																		},
																		"nativeSrc": "17703:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17703:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17726:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "17726:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17732:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17732:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17722:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17722:3:10"
																		},
																		"nativeSrc": "17722:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17722:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17696:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17696:6:10"
																},
																"nativeSrc": "17696:47:10",
																"nodeType": "YulFunctionCall",
																"src": "17696:47:10"
															},
															"nativeSrc": "17696:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "17696:47:10"
														},
														{
															"nativeSrc": "17752:139:10",
															"nodeType": "YulAssignment",
															"src": "17752:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17886:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "17886:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_49848e0d01eb0a470b2a286765abf5a64c7ba52cca08cb8ed0b3fdf708969b12_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17760:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "17760:124:10"
																},
																"nativeSrc": "17760:131:10",
																"nodeType": "YulFunctionCall",
																"src": "17760:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17752:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17752:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_49848e0d01eb0a470b2a286765abf5a64c7ba52cca08cb8ed0b3fdf708969b12__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17479:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17630:9:10",
														"nodeType": "YulTypedName",
														"src": "17630:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17645:4:10",
														"nodeType": "YulTypedName",
														"src": "17645:4:10",
														"type": ""
													}
												],
												"src": "17479:419:10"
											},
											{
												"body": {
													"nativeSrc": "18058:288:10",
													"nodeType": "YulBlock",
													"src": "18058:288:10",
													"statements": [
														{
															"nativeSrc": "18068:26:10",
															"nodeType": "YulAssignment",
															"src": "18068:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18080:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18080:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18091:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18091:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18076:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18076:3:10"
																},
																"nativeSrc": "18076:18:10",
																"nodeType": "YulFunctionCall",
																"src": "18076:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18068:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18068:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18148:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18148:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18161:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18161:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18172:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18172:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18157:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18157:3:10"
																		},
																		"nativeSrc": "18157:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18157:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18104:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "18104:43:10"
																},
																"nativeSrc": "18104:71:10",
																"nodeType": "YulFunctionCall",
																"src": "18104:71:10"
															},
															"nativeSrc": "18104:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "18104:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "18229:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18229:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18242:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18242:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18253:2:10",
																				"nodeType": "YulLiteral",
																				"src": "18253:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18238:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18238:3:10"
																		},
																		"nativeSrc": "18238:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18238:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18185:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "18185:43:10"
																},
																"nativeSrc": "18185:72:10",
																"nodeType": "YulFunctionCall",
																"src": "18185:72:10"
															},
															"nativeSrc": "18185:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "18185:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "18311:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "18311:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18324:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18324:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18335:2:10",
																				"nodeType": "YulLiteral",
																				"src": "18335:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18320:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18320:3:10"
																		},
																		"nativeSrc": "18320:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18320:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "18267:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "18267:43:10"
																},
																"nativeSrc": "18267:72:10",
																"nodeType": "YulFunctionCall",
																"src": "18267:72:10"
															},
															"nativeSrc": "18267:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "18267:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "17904:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18014:9:10",
														"nodeType": "YulTypedName",
														"src": "18014:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "18026:6:10",
														"nodeType": "YulTypedName",
														"src": "18026:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "18034:6:10",
														"nodeType": "YulTypedName",
														"src": "18034:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18042:6:10",
														"nodeType": "YulTypedName",
														"src": "18042:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18053:4:10",
														"nodeType": "YulTypedName",
														"src": "18053:4:10",
														"type": ""
													}
												],
												"src": "17904:442:10"
											},
											{
												"body": {
													"nativeSrc": "18458:115:10",
													"nodeType": "YulBlock",
													"src": "18458:115:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18480:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "18480:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18488:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18488:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18476:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18476:3:10"
																		},
																		"nativeSrc": "18476:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18476:14:10"
																	},
																	{
																		"hexValue": "414d4d3a20556e62616c616e636564206c69717569646974792070726f766964",
																		"kind": "string",
																		"nativeSrc": "18492:34:10",
																		"nodeType": "YulLiteral",
																		"src": "18492:34:10",
																		"type": "",
																		"value": "AMM: Unbalanced liquidity provid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18469:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18469:6:10"
																},
																"nativeSrc": "18469:58:10",
																"nodeType": "YulFunctionCall",
																"src": "18469:58:10"
															},
															"nativeSrc": "18469:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "18469:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18548:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "18548:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18556:2:10",
																				"nodeType": "YulLiteral",
																				"src": "18556:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18544:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18544:3:10"
																		},
																		"nativeSrc": "18544:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18544:15:10"
																	},
																	{
																		"hexValue": "6564",
																		"kind": "string",
																		"nativeSrc": "18561:4:10",
																		"nodeType": "YulLiteral",
																		"src": "18561:4:10",
																		"type": "",
																		"value": "ed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18537:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18537:6:10"
																},
																"nativeSrc": "18537:29:10",
																"nodeType": "YulFunctionCall",
																"src": "18537:29:10"
															},
															"nativeSrc": "18537:29:10",
															"nodeType": "YulExpressionStatement",
															"src": "18537:29:10"
														}
													]
												},
												"name": "store_literal_in_memory_23a983d22b7e2f929f4507ea4f9b6cafc1a24a06da17b676777fe405a18b0f65",
												"nativeSrc": "18352:221:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18450:6:10",
														"nodeType": "YulTypedName",
														"src": "18450:6:10",
														"type": ""
													}
												],
												"src": "18352:221:10"
											},
											{
												"body": {
													"nativeSrc": "18725:220:10",
													"nodeType": "YulBlock",
													"src": "18725:220:10",
													"statements": [
														{
															"nativeSrc": "18735:74:10",
															"nodeType": "YulAssignment",
															"src": "18735:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18801:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18801:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18806:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18806:2:10",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18742:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "18742:58:10"
																},
																"nativeSrc": "18742:67:10",
																"nodeType": "YulFunctionCall",
																"src": "18742:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18735:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18735:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18907:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18907:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_23a983d22b7e2f929f4507ea4f9b6cafc1a24a06da17b676777fe405a18b0f65",
																	"nativeSrc": "18818:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "18818:88:10"
																},
																"nativeSrc": "18818:93:10",
																"nodeType": "YulFunctionCall",
																"src": "18818:93:10"
															},
															"nativeSrc": "18818:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "18818:93:10"
														},
														{
															"nativeSrc": "18920:19:10",
															"nodeType": "YulAssignment",
															"src": "18920:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18931:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18931:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18936:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18936:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18927:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18927:3:10"
																},
																"nativeSrc": "18927:12:10",
																"nodeType": "YulFunctionCall",
																"src": "18927:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18920:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18920:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_23a983d22b7e2f929f4507ea4f9b6cafc1a24a06da17b676777fe405a18b0f65_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18579:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18713:3:10",
														"nodeType": "YulTypedName",
														"src": "18713:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18721:3:10",
														"nodeType": "YulTypedName",
														"src": "18721:3:10",
														"type": ""
													}
												],
												"src": "18579:366:10"
											},
											{
												"body": {
													"nativeSrc": "19122:248:10",
													"nodeType": "YulBlock",
													"src": "19122:248:10",
													"statements": [
														{
															"nativeSrc": "19132:26:10",
															"nodeType": "YulAssignment",
															"src": "19132:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19144:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "19144:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19155:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19155:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19140:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19140:3:10"
																},
																"nativeSrc": "19140:18:10",
																"nodeType": "YulFunctionCall",
																"src": "19140:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19132:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19132:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19179:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19179:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19190:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19190:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19175:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19175:3:10"
																		},
																		"nativeSrc": "19175:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19175:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19198:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "19198:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19204:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19204:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19194:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19194:3:10"
																		},
																		"nativeSrc": "19194:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19194:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19168:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19168:6:10"
																},
																"nativeSrc": "19168:47:10",
																"nodeType": "YulFunctionCall",
																"src": "19168:47:10"
															},
															"nativeSrc": "19168:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "19168:47:10"
														},
														{
															"nativeSrc": "19224:139:10",
															"nodeType": "YulAssignment",
															"src": "19224:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19358:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "19358:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_23a983d22b7e2f929f4507ea4f9b6cafc1a24a06da17b676777fe405a18b0f65_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19232:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "19232:124:10"
																},
																"nativeSrc": "19232:131:10",
																"nodeType": "YulFunctionCall",
																"src": "19232:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19224:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19224:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_23a983d22b7e2f929f4507ea4f9b6cafc1a24a06da17b676777fe405a18b0f65__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18951:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19102:9:10",
														"nodeType": "YulTypedName",
														"src": "19102:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19117:4:10",
														"nodeType": "YulTypedName",
														"src": "19117:4:10",
														"type": ""
													}
												],
												"src": "18951:419:10"
											},
											{
												"body": {
													"nativeSrc": "19482:117:10",
													"nodeType": "YulBlock",
													"src": "19482:117:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19504:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "19504:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19512:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19512:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19500:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19500:3:10"
																		},
																		"nativeSrc": "19500:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19500:14:10"
																	},
																	{
																		"hexValue": "414d4d3a20496e73756666696369656e74206c69717569646974792070726f76",
																		"kind": "string",
																		"nativeSrc": "19516:34:10",
																		"nodeType": "YulLiteral",
																		"src": "19516:34:10",
																		"type": "",
																		"value": "AMM: Insufficient liquidity prov"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19493:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19493:6:10"
																},
																"nativeSrc": "19493:58:10",
																"nodeType": "YulFunctionCall",
																"src": "19493:58:10"
															},
															"nativeSrc": "19493:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "19493:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19572:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "19572:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19580:2:10",
																				"nodeType": "YulLiteral",
																				"src": "19580:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19568:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19568:3:10"
																		},
																		"nativeSrc": "19568:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19568:15:10"
																	},
																	{
																		"hexValue": "69646564",
																		"kind": "string",
																		"nativeSrc": "19585:6:10",
																		"nodeType": "YulLiteral",
																		"src": "19585:6:10",
																		"type": "",
																		"value": "ided"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19561:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19561:6:10"
																},
																"nativeSrc": "19561:31:10",
																"nodeType": "YulFunctionCall",
																"src": "19561:31:10"
															},
															"nativeSrc": "19561:31:10",
															"nodeType": "YulExpressionStatement",
															"src": "19561:31:10"
														}
													]
												},
												"name": "store_literal_in_memory_63fff41501f79cbc70a6037506286acc5ad5db61895766195eb81bf9766fec2b",
												"nativeSrc": "19376:223:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19474:6:10",
														"nodeType": "YulTypedName",
														"src": "19474:6:10",
														"type": ""
													}
												],
												"src": "19376:223:10"
											},
											{
												"body": {
													"nativeSrc": "19751:220:10",
													"nodeType": "YulBlock",
													"src": "19751:220:10",
													"statements": [
														{
															"nativeSrc": "19761:74:10",
															"nodeType": "YulAssignment",
															"src": "19761:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19827:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19827:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19832:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19832:2:10",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19768:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "19768:58:10"
																},
																"nativeSrc": "19768:67:10",
																"nodeType": "YulFunctionCall",
																"src": "19768:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19761:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19761:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19933:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19933:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_63fff41501f79cbc70a6037506286acc5ad5db61895766195eb81bf9766fec2b",
																	"nativeSrc": "19844:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "19844:88:10"
																},
																"nativeSrc": "19844:93:10",
																"nodeType": "YulFunctionCall",
																"src": "19844:93:10"
															},
															"nativeSrc": "19844:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "19844:93:10"
														},
														{
															"nativeSrc": "19946:19:10",
															"nodeType": "YulAssignment",
															"src": "19946:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19957:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19957:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19962:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19962:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19953:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19953:3:10"
																},
																"nativeSrc": "19953:12:10",
																"nodeType": "YulFunctionCall",
																"src": "19953:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19946:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19946:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_63fff41501f79cbc70a6037506286acc5ad5db61895766195eb81bf9766fec2b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19605:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19739:3:10",
														"nodeType": "YulTypedName",
														"src": "19739:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19747:3:10",
														"nodeType": "YulTypedName",
														"src": "19747:3:10",
														"type": ""
													}
												],
												"src": "19605:366:10"
											},
											{
												"body": {
													"nativeSrc": "20148:248:10",
													"nodeType": "YulBlock",
													"src": "20148:248:10",
													"statements": [
														{
															"nativeSrc": "20158:26:10",
															"nodeType": "YulAssignment",
															"src": "20158:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20170:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "20170:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20181:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20181:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20166:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20166:3:10"
																},
																"nativeSrc": "20166:18:10",
																"nodeType": "YulFunctionCall",
																"src": "20166:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20158:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20158:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20205:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20205:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20216:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20216:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20201:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20201:3:10"
																		},
																		"nativeSrc": "20201:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20201:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20224:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "20224:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20230:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20230:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20220:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20220:3:10"
																		},
																		"nativeSrc": "20220:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20220:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20194:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20194:6:10"
																},
																"nativeSrc": "20194:47:10",
																"nodeType": "YulFunctionCall",
																"src": "20194:47:10"
															},
															"nativeSrc": "20194:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "20194:47:10"
														},
														{
															"nativeSrc": "20250:139:10",
															"nodeType": "YulAssignment",
															"src": "20250:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20384:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "20384:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_63fff41501f79cbc70a6037506286acc5ad5db61895766195eb81bf9766fec2b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20258:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "20258:124:10"
																},
																"nativeSrc": "20258:131:10",
																"nodeType": "YulFunctionCall",
																"src": "20258:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20250:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20250:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_63fff41501f79cbc70a6037506286acc5ad5db61895766195eb81bf9766fec2b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19977:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20128:9:10",
														"nodeType": "YulTypedName",
														"src": "20128:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20143:4:10",
														"nodeType": "YulTypedName",
														"src": "20143:4:10",
														"type": ""
													}
												],
												"src": "19977:419:10"
											},
											{
												"body": {
													"nativeSrc": "20508:63:10",
													"nodeType": "YulBlock",
													"src": "20508:63:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "20530:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "20530:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20538:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20538:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20526:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20526:3:10"
																		},
																		"nativeSrc": "20526:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20526:14:10"
																	},
																	{
																		"hexValue": "414d4d3a204e6f74206120676f7665726e6f72",
																		"kind": "string",
																		"nativeSrc": "20542:21:10",
																		"nodeType": "YulLiteral",
																		"src": "20542:21:10",
																		"type": "",
																		"value": "AMM: Not a governor"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20519:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20519:6:10"
																},
																"nativeSrc": "20519:45:10",
																"nodeType": "YulFunctionCall",
																"src": "20519:45:10"
															},
															"nativeSrc": "20519:45:10",
															"nodeType": "YulExpressionStatement",
															"src": "20519:45:10"
														}
													]
												},
												"name": "store_literal_in_memory_73c124844b98acb782e11332a19b9685ca8bc6cc77bcae53ef08dc44ecb8ff4e",
												"nativeSrc": "20402:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "20500:6:10",
														"nodeType": "YulTypedName",
														"src": "20500:6:10",
														"type": ""
													}
												],
												"src": "20402:169:10"
											},
											{
												"body": {
													"nativeSrc": "20723:220:10",
													"nodeType": "YulBlock",
													"src": "20723:220:10",
													"statements": [
														{
															"nativeSrc": "20733:74:10",
															"nodeType": "YulAssignment",
															"src": "20733:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20799:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20799:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20804:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20804:2:10",
																		"type": "",
																		"value": "19"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20740:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "20740:58:10"
																},
																"nativeSrc": "20740:67:10",
																"nodeType": "YulFunctionCall",
																"src": "20740:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20733:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20733:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20905:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20905:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_73c124844b98acb782e11332a19b9685ca8bc6cc77bcae53ef08dc44ecb8ff4e",
																	"nativeSrc": "20816:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "20816:88:10"
																},
																"nativeSrc": "20816:93:10",
																"nodeType": "YulFunctionCall",
																"src": "20816:93:10"
															},
															"nativeSrc": "20816:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "20816:93:10"
														},
														{
															"nativeSrc": "20918:19:10",
															"nodeType": "YulAssignment",
															"src": "20918:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20929:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20929:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20934:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20934:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20925:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20925:3:10"
																},
																"nativeSrc": "20925:12:10",
																"nodeType": "YulFunctionCall",
																"src": "20925:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20918:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20918:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_73c124844b98acb782e11332a19b9685ca8bc6cc77bcae53ef08dc44ecb8ff4e_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "20577:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "20711:3:10",
														"nodeType": "YulTypedName",
														"src": "20711:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "20719:3:10",
														"nodeType": "YulTypedName",
														"src": "20719:3:10",
														"type": ""
													}
												],
												"src": "20577:366:10"
											},
											{
												"body": {
													"nativeSrc": "21120:248:10",
													"nodeType": "YulBlock",
													"src": "21120:248:10",
													"statements": [
														{
															"nativeSrc": "21130:26:10",
															"nodeType": "YulAssignment",
															"src": "21130:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21142:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "21142:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21153:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21153:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21138:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21138:3:10"
																},
																"nativeSrc": "21138:18:10",
																"nodeType": "YulFunctionCall",
																"src": "21138:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21130:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21130:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21177:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21177:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21188:1:10",
																				"nodeType": "YulLiteral",
																				"src": "21188:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21173:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21173:3:10"
																		},
																		"nativeSrc": "21173:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21173:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21196:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "21196:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21202:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21202:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21192:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21192:3:10"
																		},
																		"nativeSrc": "21192:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21192:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21166:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21166:6:10"
																},
																"nativeSrc": "21166:47:10",
																"nodeType": "YulFunctionCall",
																"src": "21166:47:10"
															},
															"nativeSrc": "21166:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "21166:47:10"
														},
														{
															"nativeSrc": "21222:139:10",
															"nodeType": "YulAssignment",
															"src": "21222:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "21356:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "21356:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_73c124844b98acb782e11332a19b9685ca8bc6cc77bcae53ef08dc44ecb8ff4e_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21230:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "21230:124:10"
																},
																"nativeSrc": "21230:131:10",
																"nodeType": "YulFunctionCall",
																"src": "21230:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21222:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21222:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_73c124844b98acb782e11332a19b9685ca8bc6cc77bcae53ef08dc44ecb8ff4e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20949:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21100:9:10",
														"nodeType": "YulTypedName",
														"src": "21100:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21115:4:10",
														"nodeType": "YulTypedName",
														"src": "21115:4:10",
														"type": ""
													}
												],
												"src": "20949:419:10"
											},
											{
												"body": {
													"nativeSrc": "21402:152:10",
													"nodeType": "YulBlock",
													"src": "21402:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21419:1:10",
																		"nodeType": "YulLiteral",
																		"src": "21419:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21422:77:10",
																		"nodeType": "YulLiteral",
																		"src": "21422:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21412:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21412:6:10"
																},
																"nativeSrc": "21412:88:10",
																"nodeType": "YulFunctionCall",
																"src": "21412:88:10"
															},
															"nativeSrc": "21412:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "21412:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21516:1:10",
																		"nodeType": "YulLiteral",
																		"src": "21516:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21519:4:10",
																		"nodeType": "YulLiteral",
																		"src": "21519:4:10",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21509:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21509:6:10"
																},
																"nativeSrc": "21509:15:10",
																"nodeType": "YulFunctionCall",
																"src": "21509:15:10"
															},
															"nativeSrc": "21509:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "21509:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21540:1:10",
																		"nodeType": "YulLiteral",
																		"src": "21540:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21543:4:10",
																		"nodeType": "YulLiteral",
																		"src": "21543:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21533:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21533:6:10"
																},
																"nativeSrc": "21533:15:10",
																"nodeType": "YulFunctionCall",
																"src": "21533:15:10"
															},
															"nativeSrc": "21533:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "21533:15:10"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "21374:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "21374:180:10"
											},
											{
												"body": {
													"nativeSrc": "21588:152:10",
													"nodeType": "YulBlock",
													"src": "21588:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21605:1:10",
																		"nodeType": "YulLiteral",
																		"src": "21605:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21608:77:10",
																		"nodeType": "YulLiteral",
																		"src": "21608:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21598:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21598:6:10"
																},
																"nativeSrc": "21598:88:10",
																"nodeType": "YulFunctionCall",
																"src": "21598:88:10"
															},
															"nativeSrc": "21598:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "21598:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21702:1:10",
																		"nodeType": "YulLiteral",
																		"src": "21702:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21705:4:10",
																		"nodeType": "YulLiteral",
																		"src": "21705:4:10",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21695:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21695:6:10"
																},
																"nativeSrc": "21695:15:10",
																"nodeType": "YulFunctionCall",
																"src": "21695:15:10"
															},
															"nativeSrc": "21695:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "21695:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "21726:1:10",
																		"nodeType": "YulLiteral",
																		"src": "21726:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21729:4:10",
																		"nodeType": "YulLiteral",
																		"src": "21729:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "21719:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21719:6:10"
																},
																"nativeSrc": "21719:15:10",
																"nodeType": "YulFunctionCall",
																"src": "21719:15:10"
															},
															"nativeSrc": "21719:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "21719:15:10"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "21560:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "21560:180:10"
											},
											{
												"body": {
													"nativeSrc": "21900:288:10",
													"nodeType": "YulBlock",
													"src": "21900:288:10",
													"statements": [
														{
															"nativeSrc": "21910:26:10",
															"nodeType": "YulAssignment",
															"src": "21910:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21922:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "21922:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21933:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21933:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21918:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21918:3:10"
																},
																"nativeSrc": "21918:18:10",
																"nodeType": "YulFunctionCall",
																"src": "21918:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21910:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21910:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "21990:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21990:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22003:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22003:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22014:1:10",
																				"nodeType": "YulLiteral",
																				"src": "22014:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21999:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21999:3:10"
																		},
																		"nativeSrc": "21999:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21999:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "21946:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "21946:43:10"
																},
																"nativeSrc": "21946:71:10",
																"nodeType": "YulFunctionCall",
																"src": "21946:71:10"
															},
															"nativeSrc": "21946:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "21946:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "22071:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22071:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22084:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22084:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22095:2:10",
																				"nodeType": "YulLiteral",
																				"src": "22095:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22080:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22080:3:10"
																		},
																		"nativeSrc": "22080:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22080:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22027:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "22027:43:10"
																},
																"nativeSrc": "22027:72:10",
																"nodeType": "YulFunctionCall",
																"src": "22027:72:10"
															},
															"nativeSrc": "22027:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "22027:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "22153:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "22153:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22166:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22166:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22177:2:10",
																				"nodeType": "YulLiteral",
																				"src": "22177:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22162:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22162:3:10"
																		},
																		"nativeSrc": "22162:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22162:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "22109:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "22109:43:10"
																},
																"nativeSrc": "22109:72:10",
																"nodeType": "YulFunctionCall",
																"src": "22109:72:10"
															},
															"nativeSrc": "22109:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "22109:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "21746:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21856:9:10",
														"nodeType": "YulTypedName",
														"src": "21856:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "21868:6:10",
														"nodeType": "YulTypedName",
														"src": "21868:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "21876:6:10",
														"nodeType": "YulTypedName",
														"src": "21876:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "21884:6:10",
														"nodeType": "YulTypedName",
														"src": "21884:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21895:4:10",
														"nodeType": "YulTypedName",
														"src": "21895:4:10",
														"type": ""
													}
												],
												"src": "21746:442:10"
											},
											{
												"body": {
													"nativeSrc": "22300:75:10",
													"nodeType": "YulBlock",
													"src": "22300:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "22322:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "22322:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22330:1:10",
																				"nodeType": "YulLiteral",
																				"src": "22330:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22318:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22318:3:10"
																		},
																		"nativeSrc": "22318:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22318:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "22334:33:10",
																		"nodeType": "YulLiteral",
																		"src": "22334:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22311:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "22311:6:10"
																},
																"nativeSrc": "22311:57:10",
																"nodeType": "YulFunctionCall",
																"src": "22311:57:10"
															},
															"nativeSrc": "22311:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "22311:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "22194:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "22292:6:10",
														"nodeType": "YulTypedName",
														"src": "22292:6:10",
														"type": ""
													}
												],
												"src": "22194:181:10"
											},
											{
												"body": {
													"nativeSrc": "22527:220:10",
													"nodeType": "YulBlock",
													"src": "22527:220:10",
													"statements": [
														{
															"nativeSrc": "22537:74:10",
															"nodeType": "YulAssignment",
															"src": "22537:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22603:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22603:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22608:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22608:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "22544:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "22544:58:10"
																},
																"nativeSrc": "22544:67:10",
																"nodeType": "YulFunctionCall",
																"src": "22544:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "22537:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22537:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22709:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22709:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "22620:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "22620:88:10"
																},
																"nativeSrc": "22620:93:10",
																"nodeType": "YulFunctionCall",
																"src": "22620:93:10"
															},
															"nativeSrc": "22620:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "22620:93:10"
														},
														{
															"nativeSrc": "22722:19:10",
															"nodeType": "YulAssignment",
															"src": "22722:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "22733:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "22733:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22738:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22738:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22729:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22729:3:10"
																},
																"nativeSrc": "22729:12:10",
																"nodeType": "YulFunctionCall",
																"src": "22729:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "22722:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22722:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "22381:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "22515:3:10",
														"nodeType": "YulTypedName",
														"src": "22515:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "22523:3:10",
														"nodeType": "YulTypedName",
														"src": "22523:3:10",
														"type": ""
													}
												],
												"src": "22381:366:10"
											},
											{
												"body": {
													"nativeSrc": "22924:248:10",
													"nodeType": "YulBlock",
													"src": "22924:248:10",
													"statements": [
														{
															"nativeSrc": "22934:26:10",
															"nodeType": "YulAssignment",
															"src": "22934:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "22946:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "22946:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "22957:2:10",
																		"nodeType": "YulLiteral",
																		"src": "22957:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "22942:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "22942:3:10"
																},
																"nativeSrc": "22942:18:10",
																"nodeType": "YulFunctionCall",
																"src": "22942:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "22934:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "22934:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "22981:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "22981:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "22992:1:10",
																				"nodeType": "YulLiteral",
																				"src": "22992:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "22977:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22977:3:10"
																		},
																		"nativeSrc": "22977:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22977:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "23000:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "23000:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "23006:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23006:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "22996:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "22996:3:10"
																		},
																		"nativeSrc": "22996:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "22996:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "22970:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "22970:6:10"
																},
																"nativeSrc": "22970:47:10",
																"nodeType": "YulFunctionCall",
																"src": "22970:47:10"
															},
															"nativeSrc": "22970:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "22970:47:10"
														},
														{
															"nativeSrc": "23026:139:10",
															"nodeType": "YulAssignment",
															"src": "23026:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "23160:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "23160:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "23034:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "23034:124:10"
																},
																"nativeSrc": "23034:131:10",
																"nodeType": "YulFunctionCall",
																"src": "23034:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23026:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "23026:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "22753:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "22904:9:10",
														"nodeType": "YulTypedName",
														"src": "22904:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "22919:4:10",
														"nodeType": "YulTypedName",
														"src": "22919:4:10",
														"type": ""
													}
												],
												"src": "22753:419:10"
											},
											{
												"body": {
													"nativeSrc": "23332:288:10",
													"nodeType": "YulBlock",
													"src": "23332:288:10",
													"statements": [
														{
															"nativeSrc": "23342:26:10",
															"nodeType": "YulAssignment",
															"src": "23342:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23354:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "23354:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23365:2:10",
																		"nodeType": "YulLiteral",
																		"src": "23365:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23350:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23350:3:10"
																},
																"nativeSrc": "23350:18:10",
																"nodeType": "YulFunctionCall",
																"src": "23350:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23342:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "23342:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23422:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "23422:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23435:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23435:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23446:1:10",
																				"nodeType": "YulLiteral",
																				"src": "23446:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23431:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23431:3:10"
																		},
																		"nativeSrc": "23431:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23431:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23378:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "23378:43:10"
																},
																"nativeSrc": "23378:71:10",
																"nodeType": "YulFunctionCall",
																"src": "23378:71:10"
															},
															"nativeSrc": "23378:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "23378:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23503:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "23503:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23516:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23516:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23527:2:10",
																				"nodeType": "YulLiteral",
																				"src": "23527:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23512:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23512:3:10"
																		},
																		"nativeSrc": "23512:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23512:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23459:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "23459:43:10"
																},
																"nativeSrc": "23459:72:10",
																"nodeType": "YulFunctionCall",
																"src": "23459:72:10"
															},
															"nativeSrc": "23459:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "23459:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "23585:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "23585:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23598:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23598:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23609:2:10",
																				"nodeType": "YulLiteral",
																				"src": "23609:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23594:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23594:3:10"
																		},
																		"nativeSrc": "23594:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23594:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23541:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "23541:43:10"
																},
																"nativeSrc": "23541:72:10",
																"nodeType": "YulFunctionCall",
																"src": "23541:72:10"
															},
															"nativeSrc": "23541:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "23541:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "23178:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23288:9:10",
														"nodeType": "YulTypedName",
														"src": "23288:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "23300:6:10",
														"nodeType": "YulTypedName",
														"src": "23300:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23308:6:10",
														"nodeType": "YulTypedName",
														"src": "23308:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23316:6:10",
														"nodeType": "YulTypedName",
														"src": "23316:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23327:4:10",
														"nodeType": "YulTypedName",
														"src": "23327:4:10",
														"type": ""
													}
												],
												"src": "23178:442:10"
											},
											{
												"body": {
													"nativeSrc": "23752:206:10",
													"nodeType": "YulBlock",
													"src": "23752:206:10",
													"statements": [
														{
															"nativeSrc": "23762:26:10",
															"nodeType": "YulAssignment",
															"src": "23762:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "23774:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "23774:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "23785:2:10",
																		"nodeType": "YulLiteral",
																		"src": "23785:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "23770:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "23770:3:10"
																},
																"nativeSrc": "23770:18:10",
																"nodeType": "YulFunctionCall",
																"src": "23770:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "23762:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "23762:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "23842:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "23842:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23855:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23855:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23866:1:10",
																				"nodeType": "YulLiteral",
																				"src": "23866:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23851:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23851:3:10"
																		},
																		"nativeSrc": "23851:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23851:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "23798:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "23798:43:10"
																},
																"nativeSrc": "23798:71:10",
																"nodeType": "YulFunctionCall",
																"src": "23798:71:10"
															},
															"nativeSrc": "23798:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "23798:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "23923:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "23923:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "23936:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "23936:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "23947:2:10",
																				"nodeType": "YulLiteral",
																				"src": "23947:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "23932:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "23932:3:10"
																		},
																		"nativeSrc": "23932:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "23932:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "23879:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "23879:43:10"
																},
																"nativeSrc": "23879:72:10",
																"nodeType": "YulFunctionCall",
																"src": "23879:72:10"
															},
															"nativeSrc": "23879:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "23879:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "23626:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "23716:9:10",
														"nodeType": "YulTypedName",
														"src": "23716:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "23728:6:10",
														"nodeType": "YulTypedName",
														"src": "23728:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "23736:6:10",
														"nodeType": "YulTypedName",
														"src": "23736:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "23747:4:10",
														"nodeType": "YulTypedName",
														"src": "23747:4:10",
														"type": ""
													}
												],
												"src": "23626:332:10"
											},
											{
												"body": {
													"nativeSrc": "24004:76:10",
													"nodeType": "YulBlock",
													"src": "24004:76:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "24058:16:10",
																"nodeType": "YulBlock",
																"src": "24058:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "24067:1:10",
																					"nodeType": "YulLiteral",
																					"src": "24067:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "24070:1:10",
																					"nodeType": "YulLiteral",
																					"src": "24070:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "24060:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "24060:6:10"
																			},
																			"nativeSrc": "24060:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "24060:12:10"
																		},
																		"nativeSrc": "24060:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "24060:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "24027:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "24027:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "24049:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "24049:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "24034:14:10",
																					"nodeType": "YulIdentifier",
																					"src": "24034:14:10"
																				},
																				"nativeSrc": "24034:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "24034:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "24024:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "24024:2:10"
																		},
																		"nativeSrc": "24024:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24024:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "24017:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "24017:6:10"
																},
																"nativeSrc": "24017:40:10",
																"nodeType": "YulFunctionCall",
																"src": "24017:40:10"
															},
															"nativeSrc": "24014:60:10",
															"nodeType": "YulIf",
															"src": "24014:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "23964:116:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "23997:5:10",
														"nodeType": "YulTypedName",
														"src": "23997:5:10",
														"type": ""
													}
												],
												"src": "23964:116:10"
											},
											{
												"body": {
													"nativeSrc": "24146:77:10",
													"nodeType": "YulBlock",
													"src": "24146:77:10",
													"statements": [
														{
															"nativeSrc": "24156:22:10",
															"nodeType": "YulAssignment",
															"src": "24156:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "24171:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "24171:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "24165:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "24165:5:10"
																},
																"nativeSrc": "24165:13:10",
																"nodeType": "YulFunctionCall",
																"src": "24165:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "24156:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "24156:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24211:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "24211:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "24187:23:10",
																	"nodeType": "YulIdentifier",
																	"src": "24187:23:10"
																},
																"nativeSrc": "24187:30:10",
																"nodeType": "YulFunctionCall",
																"src": "24187:30:10"
															},
															"nativeSrc": "24187:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "24187:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "24086:137:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "24124:6:10",
														"nodeType": "YulTypedName",
														"src": "24124:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "24132:3:10",
														"nodeType": "YulTypedName",
														"src": "24132:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "24140:5:10",
														"nodeType": "YulTypedName",
														"src": "24140:5:10",
														"type": ""
													}
												],
												"src": "24086:137:10"
											},
											{
												"body": {
													"nativeSrc": "24303:271:10",
													"nodeType": "YulBlock",
													"src": "24303:271:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "24349:83:10",
																"nodeType": "YulBlock",
																"src": "24349:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "24351:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "24351:77:10"
																			},
																			"nativeSrc": "24351:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "24351:79:10"
																		},
																		"nativeSrc": "24351:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "24351:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "24324:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "24324:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "24333:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "24333:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "24320:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "24320:3:10"
																		},
																		"nativeSrc": "24320:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24320:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24345:2:10",
																		"nodeType": "YulLiteral",
																		"src": "24345:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "24316:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "24316:3:10"
																},
																"nativeSrc": "24316:32:10",
																"nodeType": "YulFunctionCall",
																"src": "24316:32:10"
															},
															"nativeSrc": "24313:119:10",
															"nodeType": "YulIf",
															"src": "24313:119:10"
														},
														{
															"nativeSrc": "24442:125:10",
															"nodeType": "YulBlock",
															"src": "24442:125:10",
															"statements": [
																{
																	"nativeSrc": "24457:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "24457:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "24471:1:10",
																		"nodeType": "YulLiteral",
																		"src": "24471:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "24461:6:10",
																			"nodeType": "YulTypedName",
																			"src": "24461:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "24486:71:10",
																	"nodeType": "YulAssignment",
																	"src": "24486:71:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "24529:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "24529:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "24540:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "24540:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "24525:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "24525:3:10"
																				},
																				"nativeSrc": "24525:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "24525:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "24549:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "24549:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "24496:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "24496:28:10"
																		},
																		"nativeSrc": "24496:61:10",
																		"nodeType": "YulFunctionCall",
																		"src": "24496:61:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "24486:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "24486:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "24229:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "24273:9:10",
														"nodeType": "YulTypedName",
														"src": "24273:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "24284:7:10",
														"nodeType": "YulTypedName",
														"src": "24284:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "24296:6:10",
														"nodeType": "YulTypedName",
														"src": "24296:6:10",
														"type": ""
													}
												],
												"src": "24229:345:10"
											},
											{
												"body": {
													"nativeSrc": "24638:40:10",
													"nodeType": "YulBlock",
													"src": "24638:40:10",
													"statements": [
														{
															"nativeSrc": "24649:22:10",
															"nodeType": "YulAssignment",
															"src": "24649:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "24665:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "24665:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "24659:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "24659:5:10"
																},
																"nativeSrc": "24659:12:10",
																"nodeType": "YulFunctionCall",
																"src": "24659:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "24649:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "24649:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "24580:98:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24621:5:10",
														"nodeType": "YulTypedName",
														"src": "24621:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "24631:6:10",
														"nodeType": "YulTypedName",
														"src": "24631:6:10",
														"type": ""
													}
												],
												"src": "24580:98:10"
											},
											{
												"body": {
													"nativeSrc": "24797:34:10",
													"nodeType": "YulBlock",
													"src": "24797:34:10",
													"statements": [
														{
															"nativeSrc": "24807:18:10",
															"nodeType": "YulAssignment",
															"src": "24807:18:10",
															"value": {
																"name": "pos",
																"nativeSrc": "24822:3:10",
																"nodeType": "YulIdentifier",
																"src": "24822:3:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "24807:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "24807:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "24684:147:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "24769:3:10",
														"nodeType": "YulTypedName",
														"src": "24769:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "24774:6:10",
														"nodeType": "YulTypedName",
														"src": "24774:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "24785:11:10",
														"nodeType": "YulTypedName",
														"src": "24785:11:10",
														"type": ""
													}
												],
												"src": "24684:147:10"
											},
											{
												"body": {
													"nativeSrc": "24945:278:10",
													"nodeType": "YulBlock",
													"src": "24945:278:10",
													"statements": [
														{
															"nativeSrc": "24955:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "24955:52:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "25001:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "25001:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "24969:31:10",
																	"nodeType": "YulIdentifier",
																	"src": "24969:31:10"
																},
																"nativeSrc": "24969:38:10",
																"nodeType": "YulFunctionCall",
																"src": "24969:38:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "24959:6:10",
																	"nodeType": "YulTypedName",
																	"src": "24959:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "25016:95:10",
															"nodeType": "YulAssignment",
															"src": "25016:95:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25099:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "25099:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "25104:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "25104:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "25023:75:10",
																	"nodeType": "YulIdentifier",
																	"src": "25023:75:10"
																},
																"nativeSrc": "25023:88:10",
																"nodeType": "YulFunctionCall",
																"src": "25023:88:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25016:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25016:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "25159:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "25159:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "25166:4:10",
																				"nodeType": "YulLiteral",
																				"src": "25166:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "25155:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "25155:3:10"
																		},
																		"nativeSrc": "25155:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "25155:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "25173:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "25173:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "25178:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "25178:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "25120:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "25120:34:10"
																},
																"nativeSrc": "25120:65:10",
																"nodeType": "YulFunctionCall",
																"src": "25120:65:10"
															},
															"nativeSrc": "25120:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "25120:65:10"
														},
														{
															"nativeSrc": "25194:23:10",
															"nodeType": "YulAssignment",
															"src": "25194:23:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "25205:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "25205:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "25210:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "25210:6:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "25201:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25201:3:10"
																},
																"nativeSrc": "25201:16:10",
																"nodeType": "YulFunctionCall",
																"src": "25201:16:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25194:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25194:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "24837:386:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "24926:5:10",
														"nodeType": "YulTypedName",
														"src": "24926:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "24933:3:10",
														"nodeType": "YulTypedName",
														"src": "24933:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "24941:3:10",
														"nodeType": "YulTypedName",
														"src": "24941:3:10",
														"type": ""
													}
												],
												"src": "24837:386:10"
											},
											{
												"body": {
													"nativeSrc": "25363:137:10",
													"nodeType": "YulBlock",
													"src": "25363:137:10",
													"statements": [
														{
															"nativeSrc": "25374:100:10",
															"nodeType": "YulAssignment",
															"src": "25374:100:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "25461:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "25461:6:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "25470:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "25470:3:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "25381:79:10",
																	"nodeType": "YulIdentifier",
																	"src": "25381:79:10"
																},
																"nativeSrc": "25381:93:10",
																"nodeType": "YulFunctionCall",
																"src": "25381:93:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "25374:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25374:3:10"
																}
															]
														},
														{
															"nativeSrc": "25484:10:10",
															"nodeType": "YulAssignment",
															"src": "25484:10:10",
															"value": {
																"name": "pos",
																"nativeSrc": "25491:3:10",
																"nodeType": "YulIdentifier",
																"src": "25491:3:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "25484:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "25484:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "25229:271:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "25342:3:10",
														"nodeType": "YulTypedName",
														"src": "25342:3:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "25348:6:10",
														"nodeType": "YulTypedName",
														"src": "25348:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "25359:3:10",
														"nodeType": "YulTypedName",
														"src": "25359:3:10",
														"type": ""
													}
												],
												"src": "25229:271:10"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$794_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$794_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$794_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$794__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$794_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_48444213144a111ad5938f45387486d3e52bbe9c50db4b273e9873d13904bd38(memPtr) {\n\n        mstore(add(memPtr, 0), \"AMM: Invalid input amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_48444213144a111ad5938f45387486d3e52bbe9c50db4b273e9873d13904bd38_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_48444213144a111ad5938f45387486d3e52bbe9c50db4b273e9873d13904bd38(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_48444213144a111ad5938f45387486d3e52bbe9c50db4b273e9873d13904bd38__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_48444213144a111ad5938f45387486d3e52bbe9c50db4b273e9873d13904bd38_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_15e548c7011cde46414da6f3579dd9e17bb98db01586c06df928619dd0076ab6(memPtr) {\n\n        mstore(add(memPtr, 0), \"AMM: Insufficient output amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_15e548c7011cde46414da6f3579dd9e17bb98db01586c06df928619dd0076ab6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_15e548c7011cde46414da6f3579dd9e17bb98db01586c06df928619dd0076ab6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_15e548c7011cde46414da6f3579dd9e17bb98db01586c06df928619dd0076ab6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_15e548c7011cde46414da6f3579dd9e17bb98db01586c06df928619dd0076ab6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_address_t_address__to_t_uint256_t_uint256_t_address_t_address__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_2296ab563b257b59482997b18d89814bd9e2d117faf16d5269bc2ecd6675a405(memPtr) {\n\n        mstore(add(memPtr, 0), \"AMM: caller is not a governor\")\n\n    }\n\n    function abi_encode_t_stringliteral_2296ab563b257b59482997b18d89814bd9e2d117faf16d5269bc2ecd6675a405_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_2296ab563b257b59482997b18d89814bd9e2d117faf16d5269bc2ecd6675a405(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_2296ab563b257b59482997b18d89814bd9e2d117faf16d5269bc2ecd6675a405__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_2296ab563b257b59482997b18d89814bd9e2d117faf16d5269bc2ecd6675a405_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c554dd64a7769ca77e368be385fef4dd63f12c1daefbe423f6ebab79c622a854(memPtr) {\n\n        mstore(add(memPtr, 0), \"AMM: Invalid governor address\")\n\n    }\n\n    function abi_encode_t_stringliteral_c554dd64a7769ca77e368be385fef4dd63f12c1daefbe423f6ebab79c622a854_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_c554dd64a7769ca77e368be385fef4dd63f12c1daefbe423f6ebab79c622a854(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c554dd64a7769ca77e368be385fef4dd63f12c1daefbe423f6ebab79c622a854__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c554dd64a7769ca77e368be385fef4dd63f12c1daefbe423f6ebab79c622a854_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_ea22cddd80232a65dcfc09d9be38d571da6311bd143997e1143b54a540fa28a7(memPtr) {\n\n        mstore(add(memPtr, 0), \"AMM: Already a governor\")\n\n    }\n\n    function abi_encode_t_stringliteral_ea22cddd80232a65dcfc09d9be38d571da6311bd143997e1143b54a540fa28a7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_ea22cddd80232a65dcfc09d9be38d571da6311bd143997e1143b54a540fa28a7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ea22cddd80232a65dcfc09d9be38d571da6311bd143997e1143b54a540fa28a7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ea22cddd80232a65dcfc09d9be38d571da6311bd143997e1143b54a540fa28a7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0079495a98d1affc8c62a2e04f095db89138da4c4b6991ee412e47630d1077f1(memPtr) {\n\n        mstore(add(memPtr, 0), \"AMM: Invalid fee\")\n\n    }\n\n    function abi_encode_t_stringliteral_0079495a98d1affc8c62a2e04f095db89138da4c4b6991ee412e47630d1077f1_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_0079495a98d1affc8c62a2e04f095db89138da4c4b6991ee412e47630d1077f1(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0079495a98d1affc8c62a2e04f095db89138da4c4b6991ee412e47630d1077f1__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0079495a98d1affc8c62a2e04f095db89138da4c4b6991ee412e47630d1077f1_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_49848e0d01eb0a470b2a286765abf5a64c7ba52cca08cb8ed0b3fdf708969b12(memPtr) {\n\n        mstore(add(memPtr, 0), \"AMM: Invalid liquidity amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_49848e0d01eb0a470b2a286765abf5a64c7ba52cca08cb8ed0b3fdf708969b12_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_49848e0d01eb0a470b2a286765abf5a64c7ba52cca08cb8ed0b3fdf708969b12(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_49848e0d01eb0a470b2a286765abf5a64c7ba52cca08cb8ed0b3fdf708969b12__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_49848e0d01eb0a470b2a286765abf5a64c7ba52cca08cb8ed0b3fdf708969b12_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_23a983d22b7e2f929f4507ea4f9b6cafc1a24a06da17b676777fe405a18b0f65(memPtr) {\n\n        mstore(add(memPtr, 0), \"AMM: Unbalanced liquidity provid\")\n\n        mstore(add(memPtr, 32), \"ed\")\n\n    }\n\n    function abi_encode_t_stringliteral_23a983d22b7e2f929f4507ea4f9b6cafc1a24a06da17b676777fe405a18b0f65_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_23a983d22b7e2f929f4507ea4f9b6cafc1a24a06da17b676777fe405a18b0f65(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_23a983d22b7e2f929f4507ea4f9b6cafc1a24a06da17b676777fe405a18b0f65__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_23a983d22b7e2f929f4507ea4f9b6cafc1a24a06da17b676777fe405a18b0f65_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_63fff41501f79cbc70a6037506286acc5ad5db61895766195eb81bf9766fec2b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AMM: Insufficient liquidity prov\")\n\n        mstore(add(memPtr, 32), \"ided\")\n\n    }\n\n    function abi_encode_t_stringliteral_63fff41501f79cbc70a6037506286acc5ad5db61895766195eb81bf9766fec2b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_63fff41501f79cbc70a6037506286acc5ad5db61895766195eb81bf9766fec2b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_63fff41501f79cbc70a6037506286acc5ad5db61895766195eb81bf9766fec2b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_63fff41501f79cbc70a6037506286acc5ad5db61895766195eb81bf9766fec2b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_73c124844b98acb782e11332a19b9685ca8bc6cc77bcae53ef08dc44ecb8ff4e(memPtr) {\n\n        mstore(add(memPtr, 0), \"AMM: Not a governor\")\n\n    }\n\n    function abi_encode_t_stringliteral_73c124844b98acb782e11332a19b9685ca8bc6cc77bcae53ef08dc44ecb8ff4e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 19)\n        store_literal_in_memory_73c124844b98acb782e11332a19b9685ca8bc6cc77bcae53ef08dc44ecb8ff4e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_73c124844b98acb782e11332a19b9685ca8bc6cc77bcae53ef08dc44ecb8ff4e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_73c124844b98acb782e11332a19b9685ca8bc6cc77bcae53ef08dc44ecb8ff4e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50600436106101c2575f3560e01c806358d50f0a116100f7578063a9059cbb11610095578063c7f8a78d1161006f578063c7f8a78d14610536578063dd62ed3e14610566578063e3eece2614610596578063eecdac88146105c6576101c2565b8063a9059cbb146104ca578063b7d19fc4146104fa578063b8606eef14610518576101c2565b806395d89b41116100d157806395d89b411461042d5780639c8f9f231461044b5780639cd441da1461047c5780639d6f09c1146104ac576101c2565b806358d50f0a146103c357806369fe0e2d146103e157806370a08231146103fd576101c2565b806316dc165b11610164578063310183391161013e578063310183391461033b578063313ce5671461036b5780633c1d5df0146103895780633c4a25d0146103a7576101c2565b806316dc165b146102cf57806318160ddd146102ed57806323b872dd1461030b576101c2565b80630902f1ac116101a05780630902f1ac14610244578063095ea7b31461026357806310f669b314610293578063126082cf146102b1576101c2565b806302aac7b2146101c6578063054d50d4146101f657806306fdde0314610226575b5f80fd5b6101e060048036038101906101db919061244f565b6105e2565b6040516101ed91906124b9565b60405180910390f35b610210600480360381019061020b91906124d2565b61061d565b60405161021d9190612531565b60405180910390f35b61022e61067f565b60405161023b91906125ba565b60405180910390f35b61024c61070f565b60405161025a9291906125da565b60405180910390f35b61027d6004803603810190610278919061262b565b61071f565b60405161028a9190612683565b60405180910390f35b61029b610741565b6040516102a89190612531565b60405180910390f35b6102b9610747565b6040516102c69190612531565b60405180910390f35b6102d761074d565b6040516102e491906126f7565b60405180910390f35b6102f5610772565b6040516103029190612531565b60405180910390f35b61032560048036038101906103209190612710565b61077b565b6040516103329190612683565b60405180910390f35b61035560048036038101906103509190612760565b6107a9565b6040516103629190612531565b60405180910390f35b6103736109be565b60405161038091906127b9565b60405180910390f35b6103916109c6565b60405161039e9190612531565b60405180910390f35b6103c160048036038101906103bc91906127d2565b6109cc565b005b6103cb610c48565b6040516103d89190612531565b60405180910390f35b6103fb60048036038101906103f6919061244f565b610c4e565b005b610417600480360381019061041291906127d2565b610d60565b6040516104249190612531565b60405180910390f35b610435610da5565b60405161044291906125ba565b60405180910390f35b6104656004803603810190610460919061244f565b610e35565b6040516104739291906125da565b60405180910390f35b61049660048036038101906104919190612760565b610ff4565b6040516104a39190612531565b60405180910390f35b6104b461125c565b6040516104c19190612531565b60405180910390f35b6104e460048036038101906104df919061262b565b611262565b6040516104f19190612683565b60405180910390f35b610502611284565b60405161050f91906126f7565b60405180910390f35b6105206112a9565b60405161052d9190612531565b60405180910390f35b610550600480360381019061054b9190612760565b6112af565b60405161055d9190612531565b60405180910390f35b610580600480360381019061057b91906127fd565b6114c4565b60405161058d9190612531565b60405180910390f35b6105b060048036038101906105ab91906127d2565b611546565b6040516105bd9190612683565b60405180910390f35b6105e060048036038101906105db91906127d2565b611563565b005b600c81815481106105f1575f80fd5b905f5260205f20015f915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f80600a5461271061062f9190612868565b8561063a919061289b565b90505f8382610649919061289b565b90505f826127108761065b919061289b565b61066591906128dc565b90508082610673919061293c565b93505050509392505050565b60606003805461068e90612999565b80601f01602080910402602001604051908101604052809291908181526020018280546106ba90612999565b80156107055780601f106106dc57610100808354040283529160200191610705565b820191905f5260205f20905b8154815290600101906020018083116106e857829003601f168201915b5050505050905090565b5f80600854600954915091509091565b5f806107296118f7565b90506107368185856118fe565b600191505092915050565b600f5481565b61271081565b60065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f600254905090565b5f806107856118f7565b9050610792858285611910565b61079d8585856119a2565b60019150509392505050565b5f6107b2611a92565b5f83116107f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107eb90612a13565b60405180910390fd5b6108038360095460085461061d565b905081811015610848576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083f90612a7b565b60405180910390fd5b61089633308560075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611ae1909392919063ffffffff16565b6108e2338260065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611b639092919063ffffffff16565b8260095f8282546108f391906128dc565b925050819055508060085f82825461090b9190612868565b9250508190555061091a611be2565b3373ffffffffffffffffffffffffffffffffffffffff167f053d794b2310b8d186a24ae24a65ee066983a52a6efa6bd3df09a7601a3cb4f3848360075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516109a89493929190612a99565b60405180910390a26109b8611c55565b92915050565b5f6012905090565b600d5481565b600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610a55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4c90612b26565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610ac3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aba90612b8e565b60405180910390fd5b600b5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610b4d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b4490612bf6565b60405180910390fd5b6001600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550600c81908060018154018082558091505060019003905f5260205f20015f9091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167fdc5a48d79e2e147530ff63ecdbed5a5a66adb9d5cf339384d5d076da197c40b560405160405180910390a250565b600e5481565b600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16610cd7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cce90612b26565b60405180910390fd5b6127108110610d1b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1290612c5e565b60405180910390fd5b7f528d9479e9f9889a87a3c30c7f7ba537e5e59c4c85a37733b16e57c62df61302600a5482604051610d4e9291906125da565b60405180910390a180600a8190555050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b606060048054610db490612999565b80601f0160208091040260200160405190810160405280929190818152602001828054610de090612999565b8015610e2b5780601f10610e0257610100808354040283529160200191610e2b565b820191905f5260205f20905b815481529060010190602001808311610e0e57829003601f168201915b5050505050905090565b5f80610e3f611a92565b5f8311610e81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7890612cc6565b60405180910390fd5b5f610e8a610772565b90508060085485610e9b919061289b565b610ea5919061293c565b92508060095485610eb6919061289b565b610ec0919061293c565b9150610ecc3385611c5f565b8260085f828254610edd9190612868565b925050819055508160095f828254610ef59190612868565b92505081905550610f48338460065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611b639092919063ffffffff16565b610f94338360075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611b639092919063ffffffff16565b3373ffffffffffffffffffffffffffffffffffffffff167f1dc8bb69df2b8e91fbdcbfcf93d951b3f0000f085a95fe3f7946d6161439245d848487604051610fde93929190612ce4565b60405180910390a250610fef611c55565b915091565b5f610ffd611a92565b61104b33308560065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611ae1909392919063ffffffff16565b61109933308460075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611ae1909392919063ffffffff16565b5f60085411806110aa57505f600954115b1561110c57600854826110bd919061289b565b600954846110cb919061289b565b1461110b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161110290612d89565b60405180910390fd5b5b5f611115610772565b036111355761112e8284611129919061289b565b611cde565b9050611180565b61117d600854611143610772565b8561114e919061289b565b611158919061293c565b600954611163610772565b8561116e919061289b565b611178919061293c565b611d55565b90505b5f81116111c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111b990612e17565b60405180910390fd5b6111cc3382611d6d565b8260085f8282546111dd91906128dc565b925050819055508160095f8282546111f591906128dc565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e84848460405161124693929190612ce4565b60405180910390a2611256611c55565b92915050565b60105481565b5f8061126c6118f7565b90506112798185856119a2565b600191505092915050565b60075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a5481565b5f6112b8611a92565b5f83116112fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112f190612a13565b60405180910390fd5b6113098360085460095461061d565b90508181101561134e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134590612a7b565b60405180910390fd5b61139c33308560065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611ae1909392919063ffffffff16565b6113e8338260075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611b639092919063ffffffff16565b8260085f8282546113f991906128dc565b925050819055508060095f8282546114119190612868565b92505081905550611420611be2565b3373ffffffffffffffffffffffffffffffffffffffff167f053d794b2310b8d186a24ae24a65ee066983a52a6efa6bd3df09a7601a3cb4f3848360065f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660075f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516114ae9493929190612a99565b60405180910390a26114be611c55565b92915050565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b600b602052805f5260405f205f915054906101000a900460ff1681565b600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166115ec576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115e390612b26565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361165a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161165190612b8e565b60405180910390fd5b600b5f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff166116e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116da90612e7f565b60405180910390fd5b5f600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505f5b600c805490508110156118b0578173ffffffffffffffffffffffffffffffffffffffff16600c828154811061177157611770612e9d565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16036118a357600c6001600c805490506117c89190612868565b815481106117d9576117d8612e9d565b5b905f5260205f20015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600c828154811061181557611814612e9d565b5b905f5260205f20015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600c80548061186c5761186b612eca565b5b600190038181905f5260205f20015f6101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905590556118b0565b8080600101915050611739565b508073ffffffffffffffffffffffffffffffffffffffff167f1ebe834e73d60a5fec822c1e1727d34bc79f2ad977ed504581cc1822fe20fb5b60405160405180910390a250565b5f33905090565b61190b8383836001611dec565b505050565b5f61191b84846114c4565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461199c578181101561198d578281836040517ffb8f41b200000000000000000000000000000000000000000000000000000000815260040161198493929190612ef7565b60405180910390fd5b61199b84848484035f611dec565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611a12575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611a0991906124b9565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a82575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611a7991906124b9565b60405180910390fd5b611a8d838383611fbb565b505050565b600260055403611ad7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ace90612f76565b60405180910390fd5b6002600581905550565b611b5d848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611b1693929190612f94565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506121d4565b50505050565b611bdd838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611b96929190612fc9565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506121d4565b505050565b600d54601054611bf291906128dc565b4210611c5357600854600e81905550600954600f81905550426010819055507f9cfe07a59ebb9a772e1fee2abd40b53001de7c2f0b2e713de333f564118c32c4600e54600f54601054604051611c4a93929190612ce4565b60405180910390a15b565b6001600581905550565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611ccf575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401611cc691906124b9565b60405180910390fd5b611cda825f83611fbb565b5050565b5f6003821115611d43578190505f6001600284611cfb919061293c565b611d0591906128dc565b90505b81811015611d3d578091506002818285611d22919061293c565b611d2c91906128dc565b611d36919061293c565b9050611d08565b50611d50565b5f8214611d4f57600190505b5b919050565b5f818310611d635781611d65565b825b905092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611ddd575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401611dd491906124b9565b60405180910390fd5b611de85f8383611fbb565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611e5c575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611e5391906124b9565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611ecc575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611ec391906124b9565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611fb5578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611fac9190612531565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361200b578060025f828254611fff91906128dc565b925050819055506120d9565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015612094578381836040517fe450d38c00000000000000000000000000000000000000000000000000000000815260040161208b93929190612ef7565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603612120578060025f828254039250508190555061216a565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516121c79190612531565b60405180910390a3505050565b5f6121fe828473ffffffffffffffffffffffffffffffffffffffff1661226990919063ffffffff16565b90505f815114158015612222575080806020019051810190612220919061301a565b155b1561226457826040517f5274afe700000000000000000000000000000000000000000000000000000000815260040161225b91906124b9565b60405180910390fd5b505050565b606061227683835f61227e565b905092915050565b6060814710156122c557306040517fcd7860590000000000000000000000000000000000000000000000000000000081526004016122bc91906124b9565b60405180910390fd5b5f808573ffffffffffffffffffffffffffffffffffffffff1684866040516122ed9190613089565b5f6040518083038185875af1925050503d805f8114612327576040519150601f19603f3d011682016040523d82523d5f602084013e61232c565b606091505b509150915061233c868383612347565b925050509392505050565b60608261235c57612357826123d4565b6123cc565b5f825114801561238257505f8473ffffffffffffffffffffffffffffffffffffffff163b145b156123c457836040517f9996b3150000000000000000000000000000000000000000000000000000000081526004016123bb91906124b9565b60405180910390fd5b8190506123cd565b5b9392505050565b5f815111156123e65780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f80fd5b5f819050919050565b61242e8161241c565b8114612438575f80fd5b50565b5f8135905061244981612425565b92915050565b5f6020828403121561246457612463612418565b5b5f6124718482850161243b565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6124a38261247a565b9050919050565b6124b381612499565b82525050565b5f6020820190506124cc5f8301846124aa565b92915050565b5f805f606084860312156124e9576124e8612418565b5b5f6124f68682870161243b565b93505060206125078682870161243b565b92505060406125188682870161243b565b9150509250925092565b61252b8161241c565b82525050565b5f6020820190506125445f830184612522565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61258c8261254a565b6125968185612554565b93506125a6818560208601612564565b6125af81612572565b840191505092915050565b5f6020820190508181035f8301526125d28184612582565b905092915050565b5f6040820190506125ed5f830185612522565b6125fa6020830184612522565b9392505050565b61260a81612499565b8114612614575f80fd5b50565b5f8135905061262581612601565b92915050565b5f806040838503121561264157612640612418565b5b5f61264e85828601612617565b925050602061265f8582860161243b565b9150509250929050565b5f8115159050919050565b61267d81612669565b82525050565b5f6020820190506126965f830184612674565b92915050565b5f819050919050565b5f6126bf6126ba6126b58461247a565b61269c565b61247a565b9050919050565b5f6126d0826126a5565b9050919050565b5f6126e1826126c6565b9050919050565b6126f1816126d7565b82525050565b5f60208201905061270a5f8301846126e8565b92915050565b5f805f6060848603121561272757612726612418565b5b5f61273486828701612617565b935050602061274586828701612617565b92505060406127568682870161243b565b9150509250925092565b5f806040838503121561277657612775612418565b5b5f6127838582860161243b565b92505060206127948582860161243b565b9150509250929050565b5f60ff82169050919050565b6127b38161279e565b82525050565b5f6020820190506127cc5f8301846127aa565b92915050565b5f602082840312156127e7576127e6612418565b5b5f6127f484828501612617565b91505092915050565b5f806040838503121561281357612812612418565b5b5f61282085828601612617565b925050602061283185828601612617565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6128728261241c565b915061287d8361241c565b92508282039050818111156128955761289461283b565b5b92915050565b5f6128a58261241c565b91506128b08361241c565b92508282026128be8161241c565b915082820484148315176128d5576128d461283b565b5b5092915050565b5f6128e68261241c565b91506128f18361241c565b92508282019050808211156129095761290861283b565b5b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6129468261241c565b91506129518361241c565b9250826129615761296061290f565b5b828204905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806129b057607f821691505b6020821081036129c3576129c261296c565b5b50919050565b7f414d4d3a20496e76616c696420696e70757420616d6f756e74000000000000005f82015250565b5f6129fd601983612554565b9150612a08826129c9565b602082019050919050565b5f6020820190508181035f830152612a2a816129f1565b9050919050565b7f414d4d3a20496e73756666696369656e74206f757470757420616d6f756e74005f82015250565b5f612a65601f83612554565b9150612a7082612a31565b602082019050919050565b5f6020820190508181035f830152612a9281612a59565b9050919050565b5f608082019050612aac5f830187612522565b612ab96020830186612522565b612ac660408301856124aa565b612ad360608301846124aa565b95945050505050565b7f414d4d3a2063616c6c6572206973206e6f74206120676f7665726e6f720000005f82015250565b5f612b10601d83612554565b9150612b1b82612adc565b602082019050919050565b5f6020820190508181035f830152612b3d81612b04565b9050919050565b7f414d4d3a20496e76616c696420676f7665726e6f7220616464726573730000005f82015250565b5f612b78601d83612554565b9150612b8382612b44565b602082019050919050565b5f6020820190508181035f830152612ba581612b6c565b9050919050565b7f414d4d3a20416c7265616479206120676f7665726e6f720000000000000000005f82015250565b5f612be0601783612554565b9150612beb82612bac565b602082019050919050565b5f6020820190508181035f830152612c0d81612bd4565b9050919050565b7f414d4d3a20496e76616c696420666565000000000000000000000000000000005f82015250565b5f612c48601083612554565b9150612c5382612c14565b602082019050919050565b5f6020820190508181035f830152612c7581612c3c565b9050919050565b7f414d4d3a20496e76616c6964206c697175696469747920616d6f756e740000005f82015250565b5f612cb0601d83612554565b9150612cbb82612c7c565b602082019050919050565b5f6020820190508181035f830152612cdd81612ca4565b9050919050565b5f606082019050612cf75f830186612522565b612d046020830185612522565b612d116040830184612522565b949350505050565b7f414d4d3a20556e62616c616e636564206c69717569646974792070726f7669645f8201527f6564000000000000000000000000000000000000000000000000000000000000602082015250565b5f612d73602283612554565b9150612d7e82612d19565b604082019050919050565b5f6020820190508181035f830152612da081612d67565b9050919050565b7f414d4d3a20496e73756666696369656e74206c69717569646974792070726f765f8201527f6964656400000000000000000000000000000000000000000000000000000000602082015250565b5f612e01602483612554565b9150612e0c82612da7565b604082019050919050565b5f6020820190508181035f830152612e2e81612df5565b9050919050565b7f414d4d3a204e6f74206120676f7665726e6f72000000000000000000000000005f82015250565b5f612e69601383612554565b9150612e7482612e35565b602082019050919050565b5f6020820190508181035f830152612e9681612e5d565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603160045260245ffd5b5f606082019050612f0a5f8301866124aa565b612f176020830185612522565b612f246040830184612522565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612f60601f83612554565b9150612f6b82612f2c565b602082019050919050565b5f6020820190508181035f830152612f8d81612f54565b9050919050565b5f606082019050612fa75f8301866124aa565b612fb460208301856124aa565b612fc16040830184612522565b949350505050565b5f604082019050612fdc5f8301856124aa565b612fe96020830184612522565b9392505050565b612ff981612669565b8114613003575f80fd5b50565b5f8151905061301481612ff0565b92915050565b5f6020828403121561302f5761302e612418565b5b5f61303c84828501613006565b91505092915050565b5f81519050919050565b5f81905092915050565b5f61306382613045565b61306d818561304f565b935061307d818560208601612564565b80840191505092915050565b5f6130948284613059565b91508190509291505056fea2646970667358221220a085248112c02c3272b66eb04c4c555c4a703db89e5ded1e477594eed216c23864736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x58D50F0A GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xC7F8A78D GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC7F8A78D EQ PUSH2 0x536 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x566 JUMPI DUP1 PUSH4 0xE3EECE26 EQ PUSH2 0x596 JUMPI DUP1 PUSH4 0xEECDAC88 EQ PUSH2 0x5C6 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4CA JUMPI DUP1 PUSH4 0xB7D19FC4 EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0xB8606EEF EQ PUSH2 0x518 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x42D JUMPI DUP1 PUSH4 0x9C8F9F23 EQ PUSH2 0x44B JUMPI DUP1 PUSH4 0x9CD441DA EQ PUSH2 0x47C JUMPI DUP1 PUSH4 0x9D6F09C1 EQ PUSH2 0x4AC JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x58D50F0A EQ PUSH2 0x3C3 JUMPI DUP1 PUSH4 0x69FE0E2D EQ PUSH2 0x3E1 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3FD JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x16DC165B GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x31018339 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x31018339 EQ PUSH2 0x33B JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x36B JUMPI DUP1 PUSH4 0x3C1D5DF0 EQ PUSH2 0x389 JUMPI DUP1 PUSH4 0x3C4A25D0 EQ PUSH2 0x3A7 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x16DC165B EQ PUSH2 0x2CF JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2ED JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x30B JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x902F1AC GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x902F1AC EQ PUSH2 0x244 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0x10F669B3 EQ PUSH2 0x293 JUMPI DUP1 PUSH4 0x126082CF EQ PUSH2 0x2B1 JUMPI PUSH2 0x1C2 JUMP JUMPDEST DUP1 PUSH4 0x2AAC7B2 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x54D50D4 EQ PUSH2 0x1F6 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x226 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x244F JUMP JUMPDEST PUSH2 0x5E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x24B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x210 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x24D2 JUMP JUMPDEST PUSH2 0x61D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21D SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x22E PUSH2 0x67F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23B SWAP2 SWAP1 PUSH2 0x25BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x24C PUSH2 0x70F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x25A SWAP3 SWAP2 SWAP1 PUSH2 0x25DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x278 SWAP2 SWAP1 PUSH2 0x262B JUMP JUMPDEST PUSH2 0x71F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x28A SWAP2 SWAP1 PUSH2 0x2683 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29B PUSH2 0x741 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A8 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2B9 PUSH2 0x747 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C6 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D7 PUSH2 0x74D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E4 SWAP2 SWAP1 PUSH2 0x26F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F5 PUSH2 0x772 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x302 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x325 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x320 SWAP2 SWAP1 PUSH2 0x2710 JUMP JUMPDEST PUSH2 0x77B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x332 SWAP2 SWAP1 PUSH2 0x2683 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x355 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x350 SWAP2 SWAP1 PUSH2 0x2760 JUMP JUMPDEST PUSH2 0x7A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x362 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x373 PUSH2 0x9BE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x380 SWAP2 SWAP1 PUSH2 0x27B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x391 PUSH2 0x9C6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x39E SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3BC SWAP2 SWAP1 PUSH2 0x27D2 JUMP JUMPDEST PUSH2 0x9CC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3CB PUSH2 0xC48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3D8 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3FB PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3F6 SWAP2 SWAP1 PUSH2 0x244F JUMP JUMPDEST PUSH2 0xC4E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x417 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x412 SWAP2 SWAP1 PUSH2 0x27D2 JUMP JUMPDEST PUSH2 0xD60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x424 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x435 PUSH2 0xDA5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x442 SWAP2 SWAP1 PUSH2 0x25BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x465 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x460 SWAP2 SWAP1 PUSH2 0x244F JUMP JUMPDEST PUSH2 0xE35 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x473 SWAP3 SWAP2 SWAP1 PUSH2 0x25DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x496 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x491 SWAP2 SWAP1 PUSH2 0x2760 JUMP JUMPDEST PUSH2 0xFF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A3 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B4 PUSH2 0x125C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4C1 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x262B JUMP JUMPDEST PUSH2 0x1262 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4F1 SWAP2 SWAP1 PUSH2 0x2683 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x502 PUSH2 0x1284 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50F SWAP2 SWAP1 PUSH2 0x26F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x520 PUSH2 0x12A9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x52D SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x550 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x54B SWAP2 SWAP1 PUSH2 0x2760 JUMP JUMPDEST PUSH2 0x12AF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x55D SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x580 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x57B SWAP2 SWAP1 PUSH2 0x27FD JUMP JUMPDEST PUSH2 0x14C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x58D SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5B0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5AB SWAP2 SWAP1 PUSH2 0x27D2 JUMP JUMPDEST PUSH2 0x1546 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5BD SWAP2 SWAP1 PUSH2 0x2683 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0x27D2 JUMP JUMPDEST PUSH2 0x1563 JUMP JUMPDEST STOP JUMPDEST PUSH1 0xC DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x5F1 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0xA SLOAD PUSH2 0x2710 PUSH2 0x62F SWAP2 SWAP1 PUSH2 0x2868 JUMP JUMPDEST DUP6 PUSH2 0x63A SWAP2 SWAP1 PUSH2 0x289B JUMP JUMPDEST SWAP1 POP PUSH0 DUP4 DUP3 PUSH2 0x649 SWAP2 SWAP1 PUSH2 0x289B JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0x2710 DUP8 PUSH2 0x65B SWAP2 SWAP1 PUSH2 0x289B JUMP JUMPDEST PUSH2 0x665 SWAP2 SWAP1 PUSH2 0x28DC JUMP JUMPDEST SWAP1 POP DUP1 DUP3 PUSH2 0x673 SWAP2 SWAP1 PUSH2 0x293C JUMP JUMPDEST SWAP4 POP POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x68E SWAP1 PUSH2 0x2999 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6BA SWAP1 PUSH2 0x2999 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x705 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6DC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x705 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6E8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD SWAP2 POP SWAP2 POP SWAP1 SWAP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x729 PUSH2 0x18F7 JUMP JUMPDEST SWAP1 POP PUSH2 0x736 DUP2 DUP6 DUP6 PUSH2 0x18FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xF SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x785 PUSH2 0x18F7 JUMP JUMPDEST SWAP1 POP PUSH2 0x792 DUP6 DUP3 DUP6 PUSH2 0x1910 JUMP JUMPDEST PUSH2 0x79D DUP6 DUP6 DUP6 PUSH2 0x19A2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7B2 PUSH2 0x1A92 JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0x7F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7EB SWAP1 PUSH2 0x2A13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x803 DUP4 PUSH1 0x9 SLOAD PUSH1 0x8 SLOAD PUSH2 0x61D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x848 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83F SWAP1 PUSH2 0x2A7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x896 CALLER ADDRESS DUP6 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AE1 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x8E2 CALLER DUP3 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B63 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x8F3 SWAP2 SWAP1 PUSH2 0x28DC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x90B SWAP2 SWAP1 PUSH2 0x2868 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x91A PUSH2 0x1BE2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x53D794B2310B8D186A24AE24A65EE066983A52A6EFA6BD3DF09A7601A3CB4F3 DUP5 DUP4 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x9A8 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x9B8 PUSH2 0x1C55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xD SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xA55 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA4C SWAP1 PUSH2 0x2B26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAC3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xABA SWAP1 PUSH2 0x2B8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB4D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB44 SWAP1 PUSH2 0x2BF6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDC5A48D79E2E147530FF63ECDBED5A5A66ADB9D5CF339384D5D076DA197C40B5 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0xE SLOAD DUP2 JUMP JUMPDEST PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0xCD7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCCE SWAP1 PUSH2 0x2B26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2710 DUP2 LT PUSH2 0xD1B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD12 SWAP1 PUSH2 0x2C5E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x528D9479E9F9889A87A3C30C7F7BA537E5E59C4C85A37733B16E57C62DF61302 PUSH1 0xA SLOAD DUP3 PUSH1 0x40 MLOAD PUSH2 0xD4E SWAP3 SWAP2 SWAP1 PUSH2 0x25DA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 DUP1 PUSH1 0xA DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xDB4 SWAP1 PUSH2 0x2999 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xDE0 SWAP1 PUSH2 0x2999 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xE2B JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE02 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xE2B JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE0E JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE3F PUSH2 0x1A92 JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0xE81 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE78 SWAP1 PUSH2 0x2CC6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH2 0xE8A PUSH2 0x772 JUMP JUMPDEST SWAP1 POP DUP1 PUSH1 0x8 SLOAD DUP6 PUSH2 0xE9B SWAP2 SWAP1 PUSH2 0x289B JUMP JUMPDEST PUSH2 0xEA5 SWAP2 SWAP1 PUSH2 0x293C JUMP JUMPDEST SWAP3 POP DUP1 PUSH1 0x9 SLOAD DUP6 PUSH2 0xEB6 SWAP2 SWAP1 PUSH2 0x289B JUMP JUMPDEST PUSH2 0xEC0 SWAP2 SWAP1 PUSH2 0x293C JUMP JUMPDEST SWAP2 POP PUSH2 0xECC CALLER DUP6 PUSH2 0x1C5F JUMP JUMPDEST DUP3 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xEDD SWAP2 SWAP1 PUSH2 0x2868 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xEF5 SWAP2 SWAP1 PUSH2 0x2868 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xF48 CALLER DUP5 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B63 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0xF94 CALLER DUP4 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B63 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1DC8BB69DF2B8E91FBDCBFCF93D951B3F0000F085A95FE3F7946D6161439245D DUP5 DUP5 DUP8 PUSH1 0x40 MLOAD PUSH2 0xFDE SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP PUSH2 0xFEF PUSH2 0x1C55 JUMP JUMPDEST SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 PUSH2 0xFFD PUSH2 0x1A92 JUMP JUMPDEST PUSH2 0x104B CALLER ADDRESS DUP6 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AE1 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x1099 CALLER ADDRESS DUP5 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AE1 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH0 PUSH1 0x8 SLOAD GT DUP1 PUSH2 0x10AA JUMPI POP PUSH0 PUSH1 0x9 SLOAD GT JUMPDEST ISZERO PUSH2 0x110C JUMPI PUSH1 0x8 SLOAD DUP3 PUSH2 0x10BD SWAP2 SWAP1 PUSH2 0x289B JUMP JUMPDEST PUSH1 0x9 SLOAD DUP5 PUSH2 0x10CB SWAP2 SWAP1 PUSH2 0x289B JUMP JUMPDEST EQ PUSH2 0x110B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1102 SWAP1 PUSH2 0x2D89 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH0 PUSH2 0x1115 PUSH2 0x772 JUMP JUMPDEST SUB PUSH2 0x1135 JUMPI PUSH2 0x112E DUP3 DUP5 PUSH2 0x1129 SWAP2 SWAP1 PUSH2 0x289B JUMP JUMPDEST PUSH2 0x1CDE JUMP JUMPDEST SWAP1 POP PUSH2 0x1180 JUMP JUMPDEST PUSH2 0x117D PUSH1 0x8 SLOAD PUSH2 0x1143 PUSH2 0x772 JUMP JUMPDEST DUP6 PUSH2 0x114E SWAP2 SWAP1 PUSH2 0x289B JUMP JUMPDEST PUSH2 0x1158 SWAP2 SWAP1 PUSH2 0x293C JUMP JUMPDEST PUSH1 0x9 SLOAD PUSH2 0x1163 PUSH2 0x772 JUMP JUMPDEST DUP6 PUSH2 0x116E SWAP2 SWAP1 PUSH2 0x289B JUMP JUMPDEST PUSH2 0x1178 SWAP2 SWAP1 PUSH2 0x293C JUMP JUMPDEST PUSH2 0x1D55 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH0 DUP2 GT PUSH2 0x11C2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11B9 SWAP1 PUSH2 0x2E17 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11CC CALLER DUP3 PUSH2 0x1D6D JUMP JUMPDEST DUP3 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11DD SWAP2 SWAP1 PUSH2 0x28DC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x11F5 SWAP2 SWAP1 PUSH2 0x28DC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x64B83944E79C3CE8D4C297411DE637C3E102D064677AAC0C163976EBDCD6F50E DUP5 DUP5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1246 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x1256 PUSH2 0x1C55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x10 SLOAD DUP2 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x126C PUSH2 0x18F7 JUMP JUMPDEST SWAP1 POP PUSH2 0x1279 DUP2 DUP6 DUP6 PUSH2 0x19A2 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0xA SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x12B8 PUSH2 0x1A92 JUMP JUMPDEST PUSH0 DUP4 GT PUSH2 0x12FA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12F1 SWAP1 PUSH2 0x2A13 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1309 DUP4 PUSH1 0x8 SLOAD PUSH1 0x9 SLOAD PUSH2 0x61D JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x134E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1345 SWAP1 PUSH2 0x2A7B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x139C CALLER ADDRESS DUP6 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1AE1 SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST PUSH2 0x13E8 CALLER DUP3 PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B63 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP3 PUSH1 0x8 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x13F9 SWAP2 SWAP1 PUSH2 0x28DC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x9 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1411 SWAP2 SWAP1 PUSH2 0x2868 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1420 PUSH2 0x1BE2 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x53D794B2310B8D186A24AE24A65EE066983A52A6EFA6BD3DF09A7601A3CB4F3 DUP5 DUP4 PUSH1 0x6 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x7 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x40 MLOAD PUSH2 0x14AE SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2A99 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x14BE PUSH2 0x1C55 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x15EC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E3 SWAP1 PUSH2 0x2B26 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x165A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1651 SWAP1 PUSH2 0x2B8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xB PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x16E3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16DA SWAP1 PUSH2 0x2E7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 JUMPDEST PUSH1 0xC DUP1 SLOAD SWAP1 POP DUP2 LT ISZERO PUSH2 0x18B0 JUMPI DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1771 JUMPI PUSH2 0x1770 PUSH2 0x2E9D JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18A3 JUMPI PUSH1 0xC PUSH1 0x1 PUSH1 0xC DUP1 SLOAD SWAP1 POP PUSH2 0x17C8 SWAP2 SWAP1 PUSH2 0x2868 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x17D9 JUMPI PUSH2 0x17D8 PUSH2 0x2E9D JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0xC DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1815 JUMPI PUSH2 0x1814 PUSH2 0x2E9D JUMP JUMPDEST JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0xC DUP1 SLOAD DUP1 PUSH2 0x186C JUMPI PUSH2 0x186B PUSH2 0x2ECA JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE SWAP1 SSTORE PUSH2 0x18B0 JUMP JUMPDEST DUP1 DUP1 PUSH1 0x1 ADD SWAP2 POP POP PUSH2 0x1739 JUMP JUMPDEST POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x1EBE834E73D60A5FEC822C1E1727D34BC79F2AD977ED504581CC1822FE20FB5B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x190B DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x1DEC JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x191B DUP5 DUP5 PUSH2 0x14C4 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x199C JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x198D JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1984 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x199B DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x1DEC JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A12 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A09 SWAP2 SWAP1 PUSH2 0x24B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A82 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A79 SWAP2 SWAP1 PUSH2 0x24B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A8D DUP4 DUP4 DUP4 PUSH2 0x1FBB JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x5 SLOAD SUB PUSH2 0x1AD7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1ACE SWAP1 PUSH2 0x2F76 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1B5D DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1B16 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2F94 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x21D4 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0x1BDD DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1B96 SWAP3 SWAP2 SWAP1 PUSH2 0x2FC9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x21D4 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xD SLOAD PUSH1 0x10 SLOAD PUSH2 0x1BF2 SWAP2 SWAP1 PUSH2 0x28DC JUMP JUMPDEST TIMESTAMP LT PUSH2 0x1C53 JUMPI PUSH1 0x8 SLOAD PUSH1 0xE DUP2 SWAP1 SSTORE POP PUSH1 0x9 SLOAD PUSH1 0xF DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0x10 DUP2 SWAP1 SSTORE POP PUSH32 0x9CFE07A59EBB9A772E1FEE2ABD40B53001DE7C2F0B2E713DE333F564118C32C4 PUSH1 0xE SLOAD PUSH1 0xF SLOAD PUSH1 0x10 SLOAD PUSH1 0x40 MLOAD PUSH2 0x1C4A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2CE4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST JUMP JUMPDEST PUSH1 0x1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1CCF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1CC6 SWAP2 SWAP1 PUSH2 0x24B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CDA DUP3 PUSH0 DUP4 PUSH2 0x1FBB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x3 DUP3 GT ISZERO PUSH2 0x1D43 JUMPI DUP2 SWAP1 POP PUSH0 PUSH1 0x1 PUSH1 0x2 DUP5 PUSH2 0x1CFB SWAP2 SWAP1 PUSH2 0x293C JUMP JUMPDEST PUSH2 0x1D05 SWAP2 SWAP1 PUSH2 0x28DC JUMP JUMPDEST SWAP1 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D3D JUMPI DUP1 SWAP2 POP PUSH1 0x2 DUP2 DUP3 DUP6 PUSH2 0x1D22 SWAP2 SWAP1 PUSH2 0x293C JUMP JUMPDEST PUSH2 0x1D2C SWAP2 SWAP1 PUSH2 0x28DC JUMP JUMPDEST PUSH2 0x1D36 SWAP2 SWAP1 PUSH2 0x293C JUMP JUMPDEST SWAP1 POP PUSH2 0x1D08 JUMP JUMPDEST POP PUSH2 0x1D50 JUMP JUMPDEST PUSH0 DUP3 EQ PUSH2 0x1D4F JUMPI PUSH1 0x1 SWAP1 POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 DUP4 LT PUSH2 0x1D63 JUMPI DUP2 PUSH2 0x1D65 JUMP JUMPDEST DUP3 JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1DDD JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DD4 SWAP2 SWAP1 PUSH2 0x24B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1DE8 PUSH0 DUP4 DUP4 PUSH2 0x1FBB JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1E5C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1E53 SWAP2 SWAP1 PUSH2 0x24B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ECC JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EC3 SWAP2 SWAP1 PUSH2 0x24B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1FB5 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1FAC SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x200B JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1FFF SWAP2 SWAP1 PUSH2 0x28DC JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x20D9 JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x2094 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x208B SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2EF7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2120 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x216A JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x21C7 SWAP2 SWAP1 PUSH2 0x2531 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x21FE DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2269 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x2222 JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x2220 SWAP2 SWAP1 PUSH2 0x301A JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x2264 JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x225B SWAP2 SWAP1 PUSH2 0x24B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x2276 DUP4 DUP4 PUSH0 PUSH2 0x227E JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x22C5 JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x22BC SWAP2 SWAP1 PUSH2 0x24B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x22ED SWAP2 SWAP1 PUSH2 0x3089 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x2327 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x232C JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x233C DUP7 DUP4 DUP4 PUSH2 0x2347 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x235C JUMPI PUSH2 0x2357 DUP3 PUSH2 0x23D4 JUMP JUMPDEST PUSH2 0x23CC JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x2382 JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x23C4 JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x23BB SWAP2 SWAP1 PUSH2 0x24B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x23CD JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x23E6 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x242E DUP2 PUSH2 0x241C JUMP JUMPDEST DUP2 EQ PUSH2 0x2438 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2449 DUP2 PUSH2 0x2425 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2464 JUMPI PUSH2 0x2463 PUSH2 0x2418 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2471 DUP5 DUP3 DUP6 ADD PUSH2 0x243B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x24A3 DUP3 PUSH2 0x247A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x24B3 DUP2 PUSH2 0x2499 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x24CC PUSH0 DUP4 ADD DUP5 PUSH2 0x24AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x24E9 JUMPI PUSH2 0x24E8 PUSH2 0x2418 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24F6 DUP7 DUP3 DUP8 ADD PUSH2 0x243B JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2507 DUP7 DUP3 DUP8 ADD PUSH2 0x243B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2518 DUP7 DUP3 DUP8 ADD PUSH2 0x243B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x252B DUP2 PUSH2 0x241C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2544 PUSH0 DUP4 ADD DUP5 PUSH2 0x2522 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x258C DUP3 PUSH2 0x254A JUMP JUMPDEST PUSH2 0x2596 DUP2 DUP6 PUSH2 0x2554 JUMP JUMPDEST SWAP4 POP PUSH2 0x25A6 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2564 JUMP JUMPDEST PUSH2 0x25AF DUP2 PUSH2 0x2572 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x25D2 DUP2 DUP5 PUSH2 0x2582 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x25ED PUSH0 DUP4 ADD DUP6 PUSH2 0x2522 JUMP JUMPDEST PUSH2 0x25FA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2522 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x260A DUP2 PUSH2 0x2499 JUMP JUMPDEST DUP2 EQ PUSH2 0x2614 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2625 DUP2 PUSH2 0x2601 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2641 JUMPI PUSH2 0x2640 PUSH2 0x2418 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x264E DUP6 DUP3 DUP7 ADD PUSH2 0x2617 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x265F DUP6 DUP3 DUP7 ADD PUSH2 0x243B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x267D DUP2 PUSH2 0x2669 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2696 PUSH0 DUP4 ADD DUP5 PUSH2 0x2674 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x26BF PUSH2 0x26BA PUSH2 0x26B5 DUP5 PUSH2 0x247A JUMP JUMPDEST PUSH2 0x269C JUMP JUMPDEST PUSH2 0x247A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x26D0 DUP3 PUSH2 0x26A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x26E1 DUP3 PUSH2 0x26C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x26F1 DUP2 PUSH2 0x26D7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x270A PUSH0 DUP4 ADD DUP5 PUSH2 0x26E8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2727 JUMPI PUSH2 0x2726 PUSH2 0x2418 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2734 DUP7 DUP3 DUP8 ADD PUSH2 0x2617 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2745 DUP7 DUP3 DUP8 ADD PUSH2 0x2617 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2756 DUP7 DUP3 DUP8 ADD PUSH2 0x243B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2776 JUMPI PUSH2 0x2775 PUSH2 0x2418 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2783 DUP6 DUP3 DUP7 ADD PUSH2 0x243B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2794 DUP6 DUP3 DUP7 ADD PUSH2 0x243B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27B3 DUP2 PUSH2 0x279E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x27CC PUSH0 DUP4 ADD DUP5 PUSH2 0x27AA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x27E7 JUMPI PUSH2 0x27E6 PUSH2 0x2418 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x27F4 DUP5 DUP3 DUP6 ADD PUSH2 0x2617 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2813 JUMPI PUSH2 0x2812 PUSH2 0x2418 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2820 DUP6 DUP3 DUP7 ADD PUSH2 0x2617 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2831 DUP6 DUP3 DUP7 ADD PUSH2 0x2617 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2872 DUP3 PUSH2 0x241C JUMP JUMPDEST SWAP2 POP PUSH2 0x287D DUP4 PUSH2 0x241C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2895 JUMPI PUSH2 0x2894 PUSH2 0x283B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28A5 DUP3 PUSH2 0x241C JUMP JUMPDEST SWAP2 POP PUSH2 0x28B0 DUP4 PUSH2 0x241C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x28BE DUP2 PUSH2 0x241C JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x28D5 JUMPI PUSH2 0x28D4 PUSH2 0x283B JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x28E6 DUP3 PUSH2 0x241C JUMP JUMPDEST SWAP2 POP PUSH2 0x28F1 DUP4 PUSH2 0x241C JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x2909 JUMPI PUSH2 0x2908 PUSH2 0x283B JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2946 DUP3 PUSH2 0x241C JUMP JUMPDEST SWAP2 POP PUSH2 0x2951 DUP4 PUSH2 0x241C JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x2961 JUMPI PUSH2 0x2960 PUSH2 0x290F JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x29B0 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x29C3 JUMPI PUSH2 0x29C2 PUSH2 0x296C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x414D4D3A20496E76616C696420696E70757420616D6F756E7400000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x29FD PUSH1 0x19 DUP4 PUSH2 0x2554 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A08 DUP3 PUSH2 0x29C9 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A2A DUP2 PUSH2 0x29F1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x414D4D3A20496E73756666696369656E74206F757470757420616D6F756E7400 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2A65 PUSH1 0x1F DUP4 PUSH2 0x2554 JUMP JUMPDEST SWAP2 POP PUSH2 0x2A70 DUP3 PUSH2 0x2A31 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2A92 DUP2 PUSH2 0x2A59 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x2AAC PUSH0 DUP4 ADD DUP8 PUSH2 0x2522 JUMP JUMPDEST PUSH2 0x2AB9 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2522 JUMP JUMPDEST PUSH2 0x2AC6 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x24AA JUMP JUMPDEST PUSH2 0x2AD3 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x24AA JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x414D4D3A2063616C6C6572206973206E6F74206120676F7665726E6F72000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B10 PUSH1 0x1D DUP4 PUSH2 0x2554 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B1B DUP3 PUSH2 0x2ADC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2B3D DUP2 PUSH2 0x2B04 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x414D4D3A20496E76616C696420676F7665726E6F722061646472657373000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2B78 PUSH1 0x1D DUP4 PUSH2 0x2554 JUMP JUMPDEST SWAP2 POP PUSH2 0x2B83 DUP3 PUSH2 0x2B44 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2BA5 DUP2 PUSH2 0x2B6C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x414D4D3A20416C7265616479206120676F7665726E6F72000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2BE0 PUSH1 0x17 DUP4 PUSH2 0x2554 JUMP JUMPDEST SWAP2 POP PUSH2 0x2BEB DUP3 PUSH2 0x2BAC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C0D DUP2 PUSH2 0x2BD4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x414D4D3A20496E76616C69642066656500000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2C48 PUSH1 0x10 DUP4 PUSH2 0x2554 JUMP JUMPDEST SWAP2 POP PUSH2 0x2C53 DUP3 PUSH2 0x2C14 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2C75 DUP2 PUSH2 0x2C3C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x414D4D3A20496E76616C6964206C697175696469747920616D6F756E74000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2CB0 PUSH1 0x1D DUP4 PUSH2 0x2554 JUMP JUMPDEST SWAP2 POP PUSH2 0x2CBB DUP3 PUSH2 0x2C7C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2CDD DUP2 PUSH2 0x2CA4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2CF7 PUSH0 DUP4 ADD DUP7 PUSH2 0x2522 JUMP JUMPDEST PUSH2 0x2D04 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2522 JUMP JUMPDEST PUSH2 0x2D11 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2522 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x414D4D3A20556E62616C616E636564206C69717569646974792070726F766964 PUSH0 DUP3 ADD MSTORE PUSH32 0x6564000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2D73 PUSH1 0x22 DUP4 PUSH2 0x2554 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D7E DUP3 PUSH2 0x2D19 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2DA0 DUP2 PUSH2 0x2D67 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x414D4D3A20496E73756666696369656E74206C69717569646974792070726F76 PUSH0 DUP3 ADD MSTORE PUSH32 0x6964656400000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E01 PUSH1 0x24 DUP4 PUSH2 0x2554 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E0C DUP3 PUSH2 0x2DA7 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E2E DUP2 PUSH2 0x2DF5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x414D4D3A204E6F74206120676F7665726E6F7200000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2E69 PUSH1 0x13 DUP4 PUSH2 0x2554 JUMP JUMPDEST SWAP2 POP PUSH2 0x2E74 DUP3 PUSH2 0x2E35 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2E96 DUP2 PUSH2 0x2E5D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2F0A PUSH0 DUP4 ADD DUP7 PUSH2 0x24AA JUMP JUMPDEST PUSH2 0x2F17 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2522 JUMP JUMPDEST PUSH2 0x2F24 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2522 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2F60 PUSH1 0x1F DUP4 PUSH2 0x2554 JUMP JUMPDEST SWAP2 POP PUSH2 0x2F6B DUP3 PUSH2 0x2F2C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2F8D DUP2 PUSH2 0x2F54 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2FA7 PUSH0 DUP4 ADD DUP7 PUSH2 0x24AA JUMP JUMPDEST PUSH2 0x2FB4 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x24AA JUMP JUMPDEST PUSH2 0x2FC1 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2522 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2FDC PUSH0 DUP4 ADD DUP6 PUSH2 0x24AA JUMP JUMPDEST PUSH2 0x2FE9 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2522 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x2FF9 DUP2 PUSH2 0x2669 JUMP JUMPDEST DUP2 EQ PUSH2 0x3003 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x3014 DUP2 PUSH2 0x2FF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x302F JUMPI PUSH2 0x302E PUSH2 0x2418 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x303C DUP5 DUP3 DUP6 ADD PUSH2 0x3006 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3063 DUP3 PUSH2 0x3045 JUMP JUMPDEST PUSH2 0x306D DUP2 DUP6 PUSH2 0x304F JUMP JUMPDEST SWAP4 POP PUSH2 0x307D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2564 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x3094 DUP3 DUP5 PUSH2 0x3059 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 DUP6 0x24 DUP2 SLT 0xC0 0x2C ORIGIN PUSH19 0xB66EB04C4C555C4A703DB89E5DED1E477594EE 0xD2 AND 0xC2 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "635:9505:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1116:29;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6720:441;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:89:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7339:108:9;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;4293:186:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1283:29:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;981:52;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;747:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3144:97:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5039:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5753:628:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3002:82:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1205:37:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8343:325;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1248:29;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7981:247;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3299:116:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2276:93;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4019:612:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;2823:865;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1318:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3610:178:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;773:20:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;929:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4878:628;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3846:140:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1069:41:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8798:549;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1116:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;6720:441::-;6859:7;6878:26;6945:14;;1028:5;6922:37;;;;:::i;:::-;6907:11;:53;;;;:::i;:::-;6878:82;;6970:17;7011:13;6990:18;:34;;;;:::i;:::-;6970:54;;7034:19;7096:18;1028:5;7057:12;:35;;;;:::i;:::-;7056:58;;;;:::i;:::-;7034:80;;7143:11;7131:9;:23;;;;:::i;:::-;7124:30;;;;;6720:441;;;;;:::o;2074:89:2:-;2119:13;2151:5;2144:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2074:89;:::o;7339:108:9:-;7385:7;7394;7421:8;;7431;;7413:27;;;;7339:108;;:::o;4293:186:2:-;4366:4;4382:13;4398:12;:10;:12::i;:::-;4382:28;;4420:31;4429:5;4436:7;4445:5;4420:8;:31::i;:::-;4468:4;4461:11;;;4293:186;;;;:::o;1283:29:9:-;;;;:::o;981:52::-;1028:5;981:52;:::o;747:20::-;;;;;;;;;;;;;:::o;3144:97:2:-;3196:7;3222:12;;3215:19;;3144:97;:::o;5039:244::-;5126:4;5142:15;5160:12;:10;:12::i;:::-;5142:30;;5182:37;5198:4;5204:7;5213:5;5182:15;:37::i;:::-;5229:26;5239:4;5245:2;5249:5;5229:9;:26::i;:::-;5272:4;5265:11;;;5039:244;;;;;:::o;5753:628:9:-;5845:18;2261:21:1;:19;:21::i;:::-;5895:1:9::1;5883:9;:13;5875:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;5949:43;5962:9;5973:8;;5983;;5949:12;:43::i;:::-;5936:56;;6024:13;6010:10;:27;;6002:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;6084:61;6108:10;6128:4;6135:9;6084:6;;;;;;;;;;;:23;;;;:61;;;;;;:::i;:::-;6155:43;6175:10;6187;6155:6;;;;;;;;;;;:19;;;;:43;;;;;:::i;:::-;6221:9;6209:8;;:21;;;;;;;:::i;:::-;;;;;;;;6252:10;6240:8;;:22;;;;;;;:::i;:::-;;;;;;;;6273:12;:10;:12::i;:::-;6306:10;6301:73;;;6318:9;6329:10;6349:6;;;;;;;;;;;6366;;;;;;;;;;;6301:73;;;;;;;;;:::i;:::-;;;;;;;;2303:20:1::0;:18;:20::i;:::-;5753:628:9;;;;:::o;3002:82:2:-;3051:5;3075:2;3068:9;;3002:82;:::o;1205:37:9:-;;;;:::o;8343:325::-;1971:9;:21;1981:10;1971:21;;;;;;;;;;;;;;;;;;;;;;;;;1963:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;8444:1:::1;8423:23;;:9;:23;;::::0;8415:65:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;8499:9;:20;8509:9;8499:20;;;;;;;;;;;;;;;;;;;;;;;;;8498:21;8490:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;8580:4;8557:9;:20;8567:9;8557:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;8594:12;8612:9;8594:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8651:9;8637:24;;;;;;;;;;;;8343:325:::0;:::o;1248:29::-;;;;:::o;7981:247::-;1971:9;:21;1981:10;1971:21;;;;;;;;;;;;;;;;;;;;;;;;;1963:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1028:5:::1;8062:15;:38;8054:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;8136:43;8147:14;;8163:15;8136:43;;;;;;;:::i;:::-;;;;;;;;8206:15;8189:14;:32;;;;7981:247:::0;:::o;3299:116:2:-;3364:7;3390:9;:18;3400:7;3390:18;;;;;;;;;;;;;;;;3383:25;;3299:116;;;:::o;2276:93::-;2323:13;2355:7;2348:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2276:93;:::o;4019:612:9:-;4094:15;4111;2261:21:1;:19;:21::i;:::-;4158:1:9::1;4146:9;:13;4138:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;4204:19;4226:13;:11;:13::i;:::-;4204:35;;4285:11;4273:8;;4261:9;:20;;;;:::i;:::-;4260:36;;;;:::i;:::-;4250:46;;4341:11;4329:8;;4317:9;:20;;;;:::i;:::-;4316:36;;;;:::i;:::-;4306:46;;4363:28;4369:10;4381:9;4363:5;:28::i;:::-;4414:7;4402:8;;:19;;;;;;;:::i;:::-;;;;;;;;4443:7;4431:8;;:19;;;;;;;:::i;:::-;;;;;;;;4461:40;4481:10;4493:7;4461:6;;;;;;;;;;;:19;;;;:40;;;;;:::i;:::-;4511;4531:10;4543:7;4511:6;;;;;;;;;;;:19;;;;:40;;;;;:::i;:::-;4584:10;4567:57;;;4596:7;4605;4614:9;4567:57;;;;;;;;:::i;:::-;;;;;;;;4128:503;2303:20:1::0;:18;:20::i;:::-;4019:612:9;;;:::o;2823:865::-;2910:17;2261:21:1;:19;:21::i;:::-;2939:59:9::1;2963:10;2983:4;2990:7;2939:6;;;;;;;;;;;:23;;;;:59;;;;;;:::i;:::-;3008;3032:10;3052:4;3059:7;3008:6;;;;;;;;;;;:23;;;;:59;;;;;;:::i;:::-;3093:1;3082:8;;:12;:28;;;;3109:1;3098:8;;:12;3082:28;3078:146;;;3166:8;;3156:7;:18;;;;:::i;:::-;3144:8;;3134:7;:18;;;;:::i;:::-;:40;3126:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;3078:146;3255:1;3238:13;:11;:13::i;:::-;:18:::0;3234:206:::1;;3284:23;3299:7;3289;:17;;;;:::i;:::-;3284:4;:23::i;:::-;3272:35;;3234:206;;;3350:79;3382:8;;3365:13;:11;:13::i;:::-;3355:7;:23;;;;:::i;:::-;3354:36;;;;:::i;:::-;3420:8;;3403:13;:11;:13::i;:::-;3393:7;:23;;;;:::i;:::-;3392:36;;;;:::i;:::-;3350:3;:79::i;:::-;3338:91;;3234:206;3470:1;3458:9;:13;3450:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;3523:28;3529:10;3541:9;3523:5;:28::i;:::-;3574:7;3562:8;;:19;;;;;;;:::i;:::-;;;;;;;;3603:7;3591:8;;:19;;;;;;;:::i;:::-;;;;;;;;3641:10;3626:55;;;3653:7;3662;3671:9;3626:55;;;;;;;;:::i;:::-;;;;;;;;2303:20:1::0;:18;:20::i;:::-;2823:865:9;;;;:::o;1318:32::-;;;;:::o;3610:178:2:-;3679:4;3695:13;3711:12;:10;:12::i;:::-;3695:28;;3733:27;3743:5;3750:2;3754:5;3733:9;:27::i;:::-;3777:4;3770:11;;;3610:178;;;;:::o;773:20:9:-;;;;;;;;;;;;;:::o;929:34::-;;;;:::o;4878:628::-;4970:18;2261:21:1;:19;:21::i;:::-;5020:1:9::1;5008:9;:13;5000:51;;;;;;;;;;;;:::i;:::-;;;;;;;;;5074:43;5087:9;5098:8;;5108;;5074:12;:43::i;:::-;5061:56;;5149:13;5135:10;:27;;5127:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;5209:61;5233:10;5253:4;5260:9;5209:6;;;;;;;;;;;:23;;;;:61;;;;;;:::i;:::-;5280:43;5300:10;5312;5280:6;;;;;;;;;;;:19;;;;:43;;;;;:::i;:::-;5346:9;5334:8;;:21;;;;;;;:::i;:::-;;;;;;;;5377:10;5365:8;;:22;;;;;;;:::i;:::-;;;;;;;;5398:12;:10;:12::i;:::-;5431:10;5426:73;;;5443:9;5454:10;5474:6;;;;;;;;;;;5491;;;;;;;;;;;5426:73;;;;;;;;;:::i;:::-;;;;;;;;2303:20:1::0;:18;:20::i;:::-;4878:628:9;;;;:::o;3846:140:2:-;3926:7;3952:11;:18;3964:5;3952:18;;;;;;;;;;;;;;;:27;3971:7;3952:27;;;;;;;;;;;;;;;;3945:34;;3846:140;;;;:::o;1069:41:9:-;;;;;;;;;;;;;;;;;;;;;;:::o;8798:549::-;1971:9;:21;1981:10;1971:21;;;;;;;;;;;;;;;;;;;;;;;;;1963:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;8902:1:::1;8881:23;;:9;:23;;::::0;8873:65:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;8956:9;:20;8966:9;8956:20;;;;;;;;;;;;;;;;;;;;;;;;;8948:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;9033:5;9010:9;:20;9020:9;9010:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;9053:6;9048:252;9069:12;:19;;;;9065:1;:23;9048:252;;;9132:9;9113:28;;:12;9126:1;9113:15;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:28;;::::0;9109:181:::1;;9179:12;9214:1;9192:12;:19;;;;:23;;;;:::i;:::-;9179:37;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9161:12;9174:1;9161:15;;;;;;;;:::i;:::-;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;9234:12;:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;9270:5;;9109:181;9090:3;;;;;;;9048:252;;;;9330:9;9314:26;;;;;;;;;;;;8798:549:::0;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8989:128:2:-;9073:37;9082:5;9089:7;9098:5;9105:4;9073:8;:37::i;:::-;8989:128;;;:::o;10663:477::-;10762:24;10789:25;10799:5;10806:7;10789:9;:25::i;:::-;10762:52;;10848:17;10828:16;:37;10824:310;;10904:5;10885:16;:24;10881:130;;;10963:7;10972:16;10990:5;10936:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10881:130;11052:57;11061:5;11068:7;11096:5;11077:16;:24;11103:5;11052:8;:57::i;:::-;10824:310;10752:388;10663:477;;;:::o;5656:300::-;5755:1;5739:18;;:4;:18;;;5735:86;;5807:1;5780:30;;;;;;;;;;;:::i;:::-;;;;;;;;5735:86;5848:1;5834:16;;:2;:16;;;5830:86;;5902:1;5873:32;;;;;;;;;;;:::i;:::-;;;;;;;;5830:86;5925:24;5933:4;5939:2;5943:5;5925:7;:24::i;:::-;5656:300;;;:::o;2336:287:1:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;1702:188:6:-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;1303:160::-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;7532:323:9:-;7616:12;;7596:17;;:32;;;;:::i;:::-;7577:15;:51;7573:276;;7661:8;;7644:14;:25;;;;7700:8;;7683:14;:25;;;;7742:15;7722:17;:35;;;;7776:62;7788:14;;7804;;7820:17;;7776:62;;;;;;;;:::i;:::-;;;;;;;;7573:276;7532:323::o;2629:209:1:-;1716:1;2809:7;:22;;;;2629:209::o;8247:206:2:-;8336:1;8317:21;;:7;:21;;;8313:89;;8388:1;8361:30;;;;;;;;;;;:::i;:::-;;;;;;;;8313:89;8411:35;8419:7;8436:1;8440:5;8411:7;:35::i;:::-;8247:206;;:::o;9544:301:9:-;9592:9;9621:1;9617;:5;9613:226;;;9642:1;9638:5;;9657:9;9677:1;9673;9669;:5;;;;:::i;:::-;:9;;;;:::i;:::-;9657:21;;9692:89;9703:1;9699;:5;9692:89;;;9728:1;9724:5;;9765:1;9760;9756;9752;:5;;;;:::i;:::-;:9;;;;:::i;:::-;9751:15;;;;:::i;:::-;9747:19;;9692:89;;;9624:167;9613:226;;;9806:1;9801;:6;9797:42;;9827:1;9823:5;;9797:42;9613:226;9544:301;;;:::o;10034:104::-;10092:7;10122:1;10118;:5;:13;;10130:1;10118:13;;;10126:1;10118:13;10111:20;;10034:104;;;;:::o;7721:208:2:-;7810:1;7791:21;;:7;:21;;;7787:91;;7864:1;7835:32;;;;;;;;;;;:::i;:::-;;;;;;;;7787:91;7887:35;7903:1;7907:7;7916:5;7887:7;:35::i;:::-;7721:208;;:::o;9949:432::-;10078:1;10061:19;;:5;:19;;;10057:89;;10132:1;10103:32;;;;;;;;;;;:::i;:::-;;;;;;;;10057:89;10178:1;10159:21;;:7;:21;;;10155:90;;10231:1;10203:31;;;;;;;;;;;:::i;:::-;;;;;;;;10155:90;10284:5;10254:11;:18;10266:5;10254:18;;;;;;;;;;;;;;;:27;10273:7;10254:27;;;;;;;;;;;;;;;:35;;;;10303:9;10299:76;;;10349:7;10333:31;;10342:5;10333:31;;;10358:5;10333:31;;;;;;:::i;:::-;;;;;;;;10299:76;9949:432;;;;:::o;6271:1107::-;6376:1;6360:18;;:4;:18;;;6356:540;;6512:5;6496:12;;:21;;;;;;;:::i;:::-;;;;;;;;6356:540;;;6548:19;6570:9;:15;6580:4;6570:15;;;;;;;;;;;;;;;;6548:37;;6617:5;6603:11;:19;6599:115;;;6674:4;6680:11;6693:5;6649:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6599:115;6866:5;6852:11;:19;6834:9;:15;6844:4;6834:15;;;;;;;;;;;;;;;:37;;;;6534:362;6356:540;6924:1;6910:16;;:2;:16;;;6906:425;;7089:5;7073:12;;:21;;;;;;;;;;;6906:425;;;7301:5;7284:9;:13;7294:2;7284:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6906:425;7361:2;7346:25;;7355:4;7346:25;;;7365:5;7346:25;;;;;;:::i;:::-;;;;;;;;6271:1107;;;:::o;4059:629:6:-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;2705:151:7:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;88:117:10;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:619::-;1688:6;1696;1704;1753:2;1741:9;1732:7;1728:23;1724:32;1721:119;;;1759:79;;:::i;:::-;1721:119;1879:1;1904:53;1949:7;1940:6;1929:9;1925:22;1904:53;:::i;:::-;1894:63;;1850:117;2006:2;2032:53;2077:7;2068:6;2057:9;2053:22;2032:53;:::i;:::-;2022:63;;1977:118;2134:2;2160:53;2205:7;2196:6;2185:9;2181:22;2160:53;:::i;:::-;2150:63;;2105:118;1611:619;;;;;:::o;2236:118::-;2323:24;2341:5;2323:24;:::i;:::-;2318:3;2311:37;2236:118;;:::o;2360:222::-;2453:4;2491:2;2480:9;2476:18;2468:26;;2504:71;2572:1;2561:9;2557:17;2548:6;2504:71;:::i;:::-;2360:222;;;;:::o;2588:99::-;2640:6;2674:5;2668:12;2658:22;;2588:99;;;:::o;2693:169::-;2777:11;2811:6;2806:3;2799:19;2851:4;2846:3;2842:14;2827:29;;2693:169;;;;:::o;2868:139::-;2957:6;2952:3;2947;2941:23;2998:1;2989:6;2984:3;2980:16;2973:27;2868:139;;;:::o;3013:102::-;3054:6;3105:2;3101:7;3096:2;3089:5;3085:14;3081:28;3071:38;;3013:102;;;:::o;3121:377::-;3209:3;3237:39;3270:5;3237:39;:::i;:::-;3292:71;3356:6;3351:3;3292:71;:::i;:::-;3285:78;;3372:65;3430:6;3425:3;3418:4;3411:5;3407:16;3372:65;:::i;:::-;3462:29;3484:6;3462:29;:::i;:::-;3457:3;3453:39;3446:46;;3213:285;3121:377;;;;:::o;3504:313::-;3617:4;3655:2;3644:9;3640:18;3632:26;;3704:9;3698:4;3694:20;3690:1;3679:9;3675:17;3668:47;3732:78;3805:4;3796:6;3732:78;:::i;:::-;3724:86;;3504:313;;;;:::o;3823:332::-;3944:4;3982:2;3971:9;3967:18;3959:26;;3995:71;4063:1;4052:9;4048:17;4039:6;3995:71;:::i;:::-;4076:72;4144:2;4133:9;4129:18;4120:6;4076:72;:::i;:::-;3823:332;;;;;:::o;4161:122::-;4234:24;4252:5;4234:24;:::i;:::-;4227:5;4224:35;4214:63;;4273:1;4270;4263:12;4214:63;4161:122;:::o;4289:139::-;4335:5;4373:6;4360:20;4351:29;;4389:33;4416:5;4389:33;:::i;:::-;4289:139;;;;:::o;4434:474::-;4502:6;4510;4559:2;4547:9;4538:7;4534:23;4530:32;4527:119;;;4565:79;;:::i;:::-;4527:119;4685:1;4710:53;4755:7;4746:6;4735:9;4731:22;4710:53;:::i;:::-;4700:63;;4656:117;4812:2;4838:53;4883:7;4874:6;4863:9;4859:22;4838:53;:::i;:::-;4828:63;;4783:118;4434:474;;;;;:::o;4914:90::-;4948:7;4991:5;4984:13;4977:21;4966:32;;4914:90;;;:::o;5010:109::-;5091:21;5106:5;5091:21;:::i;:::-;5086:3;5079:34;5010:109;;:::o;5125:210::-;5212:4;5250:2;5239:9;5235:18;5227:26;;5263:65;5325:1;5314:9;5310:17;5301:6;5263:65;:::i;:::-;5125:210;;;;:::o;5341:60::-;5369:3;5390:5;5383:12;;5341:60;;;:::o;5407:142::-;5457:9;5490:53;5508:34;5517:24;5535:5;5517:24;:::i;:::-;5508:34;:::i;:::-;5490:53;:::i;:::-;5477:66;;5407:142;;;:::o;5555:126::-;5605:9;5638:37;5669:5;5638:37;:::i;:::-;5625:50;;5555:126;;;:::o;5687:140::-;5751:9;5784:37;5815:5;5784:37;:::i;:::-;5771:50;;5687:140;;;:::o;5833:159::-;5934:51;5979:5;5934:51;:::i;:::-;5929:3;5922:64;5833:159;;:::o;5998:250::-;6105:4;6143:2;6132:9;6128:18;6120:26;;6156:85;6238:1;6227:9;6223:17;6214:6;6156:85;:::i;:::-;5998:250;;;;:::o;6254:619::-;6331:6;6339;6347;6396:2;6384:9;6375:7;6371:23;6367:32;6364:119;;;6402:79;;:::i;:::-;6364:119;6522:1;6547:53;6592:7;6583:6;6572:9;6568:22;6547:53;:::i;:::-;6537:63;;6493:117;6649:2;6675:53;6720:7;6711:6;6700:9;6696:22;6675:53;:::i;:::-;6665:63;;6620:118;6777:2;6803:53;6848:7;6839:6;6828:9;6824:22;6803:53;:::i;:::-;6793:63;;6748:118;6254:619;;;;;:::o;6879:474::-;6947:6;6955;7004:2;6992:9;6983:7;6979:23;6975:32;6972:119;;;7010:79;;:::i;:::-;6972:119;7130:1;7155:53;7200:7;7191:6;7180:9;7176:22;7155:53;:::i;:::-;7145:63;;7101:117;7257:2;7283:53;7328:7;7319:6;7308:9;7304:22;7283:53;:::i;:::-;7273:63;;7228:118;6879:474;;;;;:::o;7359:86::-;7394:7;7434:4;7427:5;7423:16;7412:27;;7359:86;;;:::o;7451:112::-;7534:22;7550:5;7534:22;:::i;:::-;7529:3;7522:35;7451:112;;:::o;7569:214::-;7658:4;7696:2;7685:9;7681:18;7673:26;;7709:67;7773:1;7762:9;7758:17;7749:6;7709:67;:::i;:::-;7569:214;;;;:::o;7789:329::-;7848:6;7897:2;7885:9;7876:7;7872:23;7868:32;7865:119;;;7903:79;;:::i;:::-;7865:119;8023:1;8048:53;8093:7;8084:6;8073:9;8069:22;8048:53;:::i;:::-;8038:63;;7994:117;7789:329;;;;:::o;8124:474::-;8192:6;8200;8249:2;8237:9;8228:7;8224:23;8220:32;8217:119;;;8255:79;;:::i;:::-;8217:119;8375:1;8400:53;8445:7;8436:6;8425:9;8421:22;8400:53;:::i;:::-;8390:63;;8346:117;8502:2;8528:53;8573:7;8564:6;8553:9;8549:22;8528:53;:::i;:::-;8518:63;;8473:118;8124:474;;;;;:::o;8604:180::-;8652:77;8649:1;8642:88;8749:4;8746:1;8739:15;8773:4;8770:1;8763:15;8790:194;8830:4;8850:20;8868:1;8850:20;:::i;:::-;8845:25;;8884:20;8902:1;8884:20;:::i;:::-;8879:25;;8928:1;8925;8921:9;8913:17;;8952:1;8946:4;8943:11;8940:37;;;8957:18;;:::i;:::-;8940:37;8790:194;;;;:::o;8990:410::-;9030:7;9053:20;9071:1;9053:20;:::i;:::-;9048:25;;9087:20;9105:1;9087:20;:::i;:::-;9082:25;;9142:1;9139;9135:9;9164:30;9182:11;9164:30;:::i;:::-;9153:41;;9343:1;9334:7;9330:15;9327:1;9324:22;9304:1;9297:9;9277:83;9254:139;;9373:18;;:::i;:::-;9254:139;9038:362;8990:410;;;;:::o;9406:191::-;9446:3;9465:20;9483:1;9465:20;:::i;:::-;9460:25;;9499:20;9517:1;9499:20;:::i;:::-;9494:25;;9542:1;9539;9535:9;9528:16;;9563:3;9560:1;9557:10;9554:36;;;9570:18;;:::i;:::-;9554:36;9406:191;;;;:::o;9603:180::-;9651:77;9648:1;9641:88;9748:4;9745:1;9738:15;9772:4;9769:1;9762:15;9789:185;9829:1;9846:20;9864:1;9846:20;:::i;:::-;9841:25;;9880:20;9898:1;9880:20;:::i;:::-;9875:25;;9919:1;9909:35;;9924:18;;:::i;:::-;9909:35;9966:1;9963;9959:9;9954:14;;9789:185;;;;:::o;9980:180::-;10028:77;10025:1;10018:88;10125:4;10122:1;10115:15;10149:4;10146:1;10139:15;10166:320;10210:6;10247:1;10241:4;10237:12;10227:22;;10294:1;10288:4;10284:12;10315:18;10305:81;;10371:4;10363:6;10359:17;10349:27;;10305:81;10433:2;10425:6;10422:14;10402:18;10399:38;10396:84;;10452:18;;:::i;:::-;10396:84;10217:269;10166:320;;;:::o;10492:175::-;10632:27;10628:1;10620:6;10616:14;10609:51;10492:175;:::o;10673:366::-;10815:3;10836:67;10900:2;10895:3;10836:67;:::i;:::-;10829:74;;10912:93;11001:3;10912:93;:::i;:::-;11030:2;11025:3;11021:12;11014:19;;10673:366;;;:::o;11045:419::-;11211:4;11249:2;11238:9;11234:18;11226:26;;11298:9;11292:4;11288:20;11284:1;11273:9;11269:17;11262:47;11326:131;11452:4;11326:131;:::i;:::-;11318:139;;11045:419;;;:::o;11470:181::-;11610:33;11606:1;11598:6;11594:14;11587:57;11470:181;:::o;11657:366::-;11799:3;11820:67;11884:2;11879:3;11820:67;:::i;:::-;11813:74;;11896:93;11985:3;11896:93;:::i;:::-;12014:2;12009:3;12005:12;11998:19;;11657:366;;;:::o;12029:419::-;12195:4;12233:2;12222:9;12218:18;12210:26;;12282:9;12276:4;12272:20;12268:1;12257:9;12253:17;12246:47;12310:131;12436:4;12310:131;:::i;:::-;12302:139;;12029:419;;;:::o;12454:553::-;12631:4;12669:3;12658:9;12654:19;12646:27;;12683:71;12751:1;12740:9;12736:17;12727:6;12683:71;:::i;:::-;12764:72;12832:2;12821:9;12817:18;12808:6;12764:72;:::i;:::-;12846;12914:2;12903:9;12899:18;12890:6;12846:72;:::i;:::-;12928;12996:2;12985:9;12981:18;12972:6;12928:72;:::i;:::-;12454:553;;;;;;;:::o;13013:179::-;13153:31;13149:1;13141:6;13137:14;13130:55;13013:179;:::o;13198:366::-;13340:3;13361:67;13425:2;13420:3;13361:67;:::i;:::-;13354:74;;13437:93;13526:3;13437:93;:::i;:::-;13555:2;13550:3;13546:12;13539:19;;13198:366;;;:::o;13570:419::-;13736:4;13774:2;13763:9;13759:18;13751:26;;13823:9;13817:4;13813:20;13809:1;13798:9;13794:17;13787:47;13851:131;13977:4;13851:131;:::i;:::-;13843:139;;13570:419;;;:::o;13995:179::-;14135:31;14131:1;14123:6;14119:14;14112:55;13995:179;:::o;14180:366::-;14322:3;14343:67;14407:2;14402:3;14343:67;:::i;:::-;14336:74;;14419:93;14508:3;14419:93;:::i;:::-;14537:2;14532:3;14528:12;14521:19;;14180:366;;;:::o;14552:419::-;14718:4;14756:2;14745:9;14741:18;14733:26;;14805:9;14799:4;14795:20;14791:1;14780:9;14776:17;14769:47;14833:131;14959:4;14833:131;:::i;:::-;14825:139;;14552:419;;;:::o;14977:173::-;15117:25;15113:1;15105:6;15101:14;15094:49;14977:173;:::o;15156:366::-;15298:3;15319:67;15383:2;15378:3;15319:67;:::i;:::-;15312:74;;15395:93;15484:3;15395:93;:::i;:::-;15513:2;15508:3;15504:12;15497:19;;15156:366;;;:::o;15528:419::-;15694:4;15732:2;15721:9;15717:18;15709:26;;15781:9;15775:4;15771:20;15767:1;15756:9;15752:17;15745:47;15809:131;15935:4;15809:131;:::i;:::-;15801:139;;15528:419;;;:::o;15953:166::-;16093:18;16089:1;16081:6;16077:14;16070:42;15953:166;:::o;16125:366::-;16267:3;16288:67;16352:2;16347:3;16288:67;:::i;:::-;16281:74;;16364:93;16453:3;16364:93;:::i;:::-;16482:2;16477:3;16473:12;16466:19;;16125:366;;;:::o;16497:419::-;16663:4;16701:2;16690:9;16686:18;16678:26;;16750:9;16744:4;16740:20;16736:1;16725:9;16721:17;16714:47;16778:131;16904:4;16778:131;:::i;:::-;16770:139;;16497:419;;;:::o;16922:179::-;17062:31;17058:1;17050:6;17046:14;17039:55;16922:179;:::o;17107:366::-;17249:3;17270:67;17334:2;17329:3;17270:67;:::i;:::-;17263:74;;17346:93;17435:3;17346:93;:::i;:::-;17464:2;17459:3;17455:12;17448:19;;17107:366;;;:::o;17479:419::-;17645:4;17683:2;17672:9;17668:18;17660:26;;17732:9;17726:4;17722:20;17718:1;17707:9;17703:17;17696:47;17760:131;17886:4;17760:131;:::i;:::-;17752:139;;17479:419;;;:::o;17904:442::-;18053:4;18091:2;18080:9;18076:18;18068:26;;18104:71;18172:1;18161:9;18157:17;18148:6;18104:71;:::i;:::-;18185:72;18253:2;18242:9;18238:18;18229:6;18185:72;:::i;:::-;18267;18335:2;18324:9;18320:18;18311:6;18267:72;:::i;:::-;17904:442;;;;;;:::o;18352:221::-;18492:34;18488:1;18480:6;18476:14;18469:58;18561:4;18556:2;18548:6;18544:15;18537:29;18352:221;:::o;18579:366::-;18721:3;18742:67;18806:2;18801:3;18742:67;:::i;:::-;18735:74;;18818:93;18907:3;18818:93;:::i;:::-;18936:2;18931:3;18927:12;18920:19;;18579:366;;;:::o;18951:419::-;19117:4;19155:2;19144:9;19140:18;19132:26;;19204:9;19198:4;19194:20;19190:1;19179:9;19175:17;19168:47;19232:131;19358:4;19232:131;:::i;:::-;19224:139;;18951:419;;;:::o;19376:223::-;19516:34;19512:1;19504:6;19500:14;19493:58;19585:6;19580:2;19572:6;19568:15;19561:31;19376:223;:::o;19605:366::-;19747:3;19768:67;19832:2;19827:3;19768:67;:::i;:::-;19761:74;;19844:93;19933:3;19844:93;:::i;:::-;19962:2;19957:3;19953:12;19946:19;;19605:366;;;:::o;19977:419::-;20143:4;20181:2;20170:9;20166:18;20158:26;;20230:9;20224:4;20220:20;20216:1;20205:9;20201:17;20194:47;20258:131;20384:4;20258:131;:::i;:::-;20250:139;;19977:419;;;:::o;20402:169::-;20542:21;20538:1;20530:6;20526:14;20519:45;20402:169;:::o;20577:366::-;20719:3;20740:67;20804:2;20799:3;20740:67;:::i;:::-;20733:74;;20816:93;20905:3;20816:93;:::i;:::-;20934:2;20929:3;20925:12;20918:19;;20577:366;;;:::o;20949:419::-;21115:4;21153:2;21142:9;21138:18;21130:26;;21202:9;21196:4;21192:20;21188:1;21177:9;21173:17;21166:47;21230:131;21356:4;21230:131;:::i;:::-;21222:139;;20949:419;;;:::o;21374:180::-;21422:77;21419:1;21412:88;21519:4;21516:1;21509:15;21543:4;21540:1;21533:15;21560:180;21608:77;21605:1;21598:88;21705:4;21702:1;21695:15;21729:4;21726:1;21719:15;21746:442;21895:4;21933:2;21922:9;21918:18;21910:26;;21946:71;22014:1;22003:9;21999:17;21990:6;21946:71;:::i;:::-;22027:72;22095:2;22084:9;22080:18;22071:6;22027:72;:::i;:::-;22109;22177:2;22166:9;22162:18;22153:6;22109:72;:::i;:::-;21746:442;;;;;;:::o;22194:181::-;22334:33;22330:1;22322:6;22318:14;22311:57;22194:181;:::o;22381:366::-;22523:3;22544:67;22608:2;22603:3;22544:67;:::i;:::-;22537:74;;22620:93;22709:3;22620:93;:::i;:::-;22738:2;22733:3;22729:12;22722:19;;22381:366;;;:::o;22753:419::-;22919:4;22957:2;22946:9;22942:18;22934:26;;23006:9;23000:4;22996:20;22992:1;22981:9;22977:17;22970:47;23034:131;23160:4;23034:131;:::i;:::-;23026:139;;22753:419;;;:::o;23178:442::-;23327:4;23365:2;23354:9;23350:18;23342:26;;23378:71;23446:1;23435:9;23431:17;23422:6;23378:71;:::i;:::-;23459:72;23527:2;23516:9;23512:18;23503:6;23459:72;:::i;:::-;23541;23609:2;23598:9;23594:18;23585:6;23541:72;:::i;:::-;23178:442;;;;;;:::o;23626:332::-;23747:4;23785:2;23774:9;23770:18;23762:26;;23798:71;23866:1;23855:9;23851:17;23842:6;23798:71;:::i;:::-;23879:72;23947:2;23936:9;23932:18;23923:6;23879:72;:::i;:::-;23626:332;;;;;:::o;23964:116::-;24034:21;24049:5;24034:21;:::i;:::-;24027:5;24024:32;24014:60;;24070:1;24067;24060:12;24014:60;23964:116;:::o;24086:137::-;24140:5;24171:6;24165:13;24156:22;;24187:30;24211:5;24187:30;:::i;:::-;24086:137;;;;:::o;24229:345::-;24296:6;24345:2;24333:9;24324:7;24320:23;24316:32;24313:119;;;24351:79;;:::i;:::-;24313:119;24471:1;24496:61;24549:7;24540:6;24529:9;24525:22;24496:61;:::i;:::-;24486:71;;24442:125;24229:345;;;;:::o;24580:98::-;24631:6;24665:5;24659:12;24649:22;;24580:98;;;:::o;24684:147::-;24785:11;24822:3;24807:18;;24684:147;;;;:::o;24837:386::-;24941:3;24969:38;25001:5;24969:38;:::i;:::-;25023:88;25104:6;25099:3;25023:88;:::i;:::-;25016:95;;25120:65;25178:6;25173:3;25166:4;25159:5;25155:16;25120:65;:::i;:::-;25210:6;25205:3;25201:16;25194:23;;24945:278;24837:386;;;;:::o;25229:271::-;25359:3;25381:93;25470:3;25461:6;25381:93;:::i;:::-;25374:100;;25491:3;25484:10;;25229:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2500200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"BASIS_POINTS_DIVISOR()": "437",
								"addGovernor(address)": "79167",
								"addLiquidity(uint256,uint256)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2919",
								"decimals()": "405",
								"feeBasisPoints()": "2514",
								"getAmountOut(uint256,uint256,uint256)": "infinite",
								"getReserves()": "infinite",
								"governorList(uint256)": "4991",
								"governors(address)": "2921",
								"lastTwapPriceX()": "2471",
								"lastTwapPriceY()": "2515",
								"lastTwapTimestamp()": "2536",
								"name()": "infinite",
								"removeGovernor(address)": "infinite",
								"removeLiquidity(uint256)": "infinite",
								"setFee(uint256)": "infinite",
								"swapXForY(uint256,uint256)": "infinite",
								"swapYForX(uint256,uint256)": "infinite",
								"symbol()": "infinite",
								"tokenX()": "infinite",
								"tokenY()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"twapInterval()": "2514"
							},
							"internal": {
								"min(uint256,uint256)": "63",
								"sqrt(uint256)": "infinite",
								"updateTwap()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 635,
									"end": 10140,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 635,
									"end": 10140,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 635,
									"end": 10140,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 961,
									"end": 963,
									"name": "PUSH",
									"source": 9,
									"value": "1E"
								},
								{
									"begin": 929,
									"end": 963,
									"name": "PUSH",
									"source": 9,
									"value": "A"
								},
								{
									"begin": 929,
									"end": 963,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1235,
									"end": 1242,
									"name": "PUSH",
									"source": 9,
									"value": "E10"
								},
								{
									"begin": 1205,
									"end": 1242,
									"name": "PUSH",
									"source": 9,
									"value": "D"
								},
								{
									"begin": 1205,
									"end": 1242,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "CODESIZE",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "PUSHSIZE",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "3"
								},
								{
									"begin": 2247,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "tag",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "414D4D204C697175696469747920546F6B656E00000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "5"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "PUSH",
									"source": 2,
									"value": "414D4D4C54000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1970,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1967,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1962,
									"end": 1975,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1962,
									"end": 1975,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1995,
									"end": 2002,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 1992,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 1985,
									"end": 2002,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1985,
									"end": 2002,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1896,
									"end": 2009,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2357,
									"end": 2364,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2347,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "6"
								},
								{
									"begin": 2341,
									"end": 2347,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2341,
									"end": 2365,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 2341,
									"end": 2365,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2365,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2365,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2365,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2365,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2341,
									"end": 2365,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2365,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2365,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2365,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2365,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2365,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2341,
									"end": 2365,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2365,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2365,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2365,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2365,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2341,
									"end": 2365,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2391,
									"end": 2398,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2375,
									"end": 2381,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 2375,
									"end": 2381,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2375,
									"end": 2399,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 2375,
									"end": 2399,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 2375,
									"end": 2399,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2375,
									"end": 2399,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2375,
									"end": 2399,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2375,
									"end": 2399,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2375,
									"end": 2399,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2375,
									"end": 2399,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2375,
									"end": 2399,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2375,
									"end": 2399,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2375,
									"end": 2399,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2375,
									"end": 2399,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2375,
									"end": 2399,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2375,
									"end": 2399,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2375,
									"end": 2399,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2375,
									"end": 2399,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2375,
									"end": 2399,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2375,
									"end": 2399,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2433,
									"end": 2437,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2409,
									"end": 2418,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 2409,
									"end": 2430,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2419,
									"end": 2429,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2430,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2409,
									"end": 2430,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2430,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2409,
									"end": 2430,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2430,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2430,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2430,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2409,
									"end": 2430,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2430,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2430,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2430,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2430,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2409,
									"end": 2430,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2430,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2409,
									"end": 2430,
									"modifierDepth": 1,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2430,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2409,
									"end": 2437,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 2409,
									"end": 2437,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2437,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2437,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2437,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2437,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 2409,
									"end": 2437,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2437,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2437,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2437,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2437,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2437,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2437,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2437,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2437,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2437,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2437,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2409,
									"end": 2437,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2459,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "C"
								},
								{
									"begin": 2465,
									"end": 2475,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "KECCAK256",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 9,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 2447,
									"end": 2476,
									"modifierDepth": 1,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 2247,
									"end": 2483,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 635,
									"end": 10140,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 635,
									"end": 10140,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "18"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "19"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "tag",
									"source": 10,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 924,
									"end": 930,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 932,
									"end": 938,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 981,
									"end": 983,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 969,
									"end": 978,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 960,
									"end": 967,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 956,
									"end": 979,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 952,
									"end": 984,
									"name": "SLT",
									"source": 10
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "16"
								},
								{
									"begin": 987,
									"end": 1066,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 987,
									"end": 1066,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 949,
									"end": 1068,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1107,
									"end": 1108,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1188,
									"end": 1195,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1179,
									"end": 1185,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1168,
									"end": 1177,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1164,
									"end": 1186,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1132,
									"end": 1196,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1132,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1122,
									"end": 1196,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1078,
									"end": 1206,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1247,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1327,
									"end": 1334,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 1318,
									"end": 1324,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1307,
									"end": 1316,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1303,
									"end": 1325,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "21"
								},
								{
									"begin": 1271,
									"end": 1335,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1271,
									"end": 1335,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1261,
									"end": 1335,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1216,
									"end": 1345,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 845,
									"end": 1352,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1410,
									"end": 1416,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1444,
									"end": 1449,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1438,
									"end": 1450,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 1428,
									"end": 1450,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1428,
									"end": 1450,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1457,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1358,
									"end": 1457,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1463,
									"end": 1643,
									"name": "tag",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 1463,
									"end": 1643,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1511,
									"end": 1588,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1508,
									"end": 1509,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1501,
									"end": 1589,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1608,
									"end": 1612,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 1605,
									"end": 1606,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1598,
									"end": 1613,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1632,
									"end": 1636,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1629,
									"end": 1630,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1622,
									"end": 1637,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1649,
									"end": 1829,
									"name": "tag",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1649,
									"end": 1829,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1697,
									"end": 1774,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1694,
									"end": 1695,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1687,
									"end": 1775,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1794,
									"end": 1798,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 1791,
									"end": 1792,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 1784,
									"end": 1799,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 1818,
									"end": 1822,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 1815,
									"end": 1816,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1808,
									"end": 1823,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "tag",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1879,
									"end": 1885,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1916,
									"end": 1917,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 1910,
									"end": 1914,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1906,
									"end": 1918,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1896,
									"end": 1918,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1963,
									"end": 1964,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 1957,
									"end": 1961,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1953,
									"end": 1965,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1984,
									"end": 2002,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2040,
									"end": 2044,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 2032,
									"end": 2038,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2028,
									"end": 2045,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2018,
									"end": 2045,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2018,
									"end": 2045,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 1974,
									"end": 2055,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2102,
									"end": 2104,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2094,
									"end": 2100,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2091,
									"end": 2105,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2071,
									"end": 2089,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2068,
									"end": 2106,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 2121,
									"end": 2139,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 2121,
									"end": 2139,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 2065,
									"end": 2149,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1886,
									"end": 2155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1835,
									"end": 2155,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1835,
									"end": 2155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "tag",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2210,
									"end": 2214,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2233,
									"end": 2236,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2225,
									"end": 2236,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2225,
									"end": 2236,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2256,
									"end": 2259,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2253,
									"end": 2254,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2246,
									"end": 2260,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 2290,
									"end": 2294,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2287,
									"end": 2288,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 2269,
									"end": 2295,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2269,
									"end": 2295,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2161,
									"end": 2302,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2161,
									"end": 2302,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "tag",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2345,
									"end": 2351,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2392,
									"end": 2394,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 2387,
									"end": 2389,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2380,
									"end": 2385,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2376,
									"end": 2390,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2372,
									"end": 2395,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 2362,
									"end": 2395,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2362,
									"end": 2395,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2308,
									"end": 2401,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2308,
									"end": 2401,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "tag",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2451,
									"end": 2459,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2501,
									"end": 2506,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2499,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2491,
									"end": 2507,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 2470,
									"end": 2507,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2470,
									"end": 2507,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2407,
									"end": 2514,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2407,
									"end": 2514,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "tag",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2589,
									"end": 2595,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2639,
									"end": 2640,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 2627,
									"end": 2637,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2623,
									"end": 2641,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 2692,
									"end": 2758,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2681,
									"end": 2690,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 2662,
									"end": 2759,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 2662,
									"end": 2759,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 2810,
									"end": 2818,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2799,
									"end": 2808,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "28"
								},
								{
									"begin": 2780,
									"end": 2819,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 2780,
									"end": 2819,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2768,
									"end": 2819,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 2768,
									"end": 2819,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2852,
									"end": 2856,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2848,
									"end": 2857,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 2841,
									"end": 2846,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2837,
									"end": 2858,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2828,
									"end": 2858,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 2828,
									"end": 2858,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2901,
									"end": 2905,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 2891,
									"end": 2899,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 2887,
									"end": 2906,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 2880,
									"end": 2885,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2877,
									"end": 2907,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 2867,
									"end": 2907,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2867,
									"end": 2907,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2596,
									"end": 2913,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2596,
									"end": 2913,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2913,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2520,
									"end": 2913,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "tag",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2956,
									"end": 2963,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2985,
									"end": 2990,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2974,
									"end": 2990,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2974,
									"end": 2990,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2919,
									"end": 2996,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2919,
									"end": 2996,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "tag",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3030,
									"end": 3033,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3051,
									"end": 3056,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3044,
									"end": 3056,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3044,
									"end": 3056,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3002,
									"end": 3062,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3002,
									"end": 3062,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "tag",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3118,
									"end": 3127,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 3196,
									"end": 3201,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 3178,
									"end": 3202,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "tag",
									"source": 10,
									"value": "77"
								},
								{
									"begin": 3178,
									"end": 3202,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "31"
								},
								{
									"begin": 3169,
									"end": 3203,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "tag",
									"source": 10,
									"value": "76"
								},
								{
									"begin": 3169,
									"end": 3203,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "30"
								},
								{
									"begin": 3151,
									"end": 3204,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "tag",
									"source": 10,
									"value": "75"
								},
								{
									"begin": 3151,
									"end": 3204,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3138,
									"end": 3204,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3138,
									"end": 3204,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3068,
									"end": 3210,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3068,
									"end": 3210,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "tag",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3259,
									"end": 3262,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3280,
									"end": 3285,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3273,
									"end": 3285,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3273,
									"end": 3285,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3216,
									"end": 3291,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3216,
									"end": 3291,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "tag",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 3438,
									"end": 3445,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "32"
								},
								{
									"begin": 3407,
									"end": 3446,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 3407,
									"end": 3446,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 3541,
									"end": 3557,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "33"
								},
								{
									"begin": 3517,
									"end": 3558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 3517,
									"end": 3558,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3509,
									"end": 3515,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3502,
									"end": 3506,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3496,
									"end": 3507,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "29"
								},
								{
									"begin": 3468,
									"end": 3559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 3468,
									"end": 3559,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3462,
									"end": 3466,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3455,
									"end": 3560,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 3373,
									"end": 3566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3297,
									"end": 3566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3297,
									"end": 3566,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "tag",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3617,
									"end": 3620,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3572,
									"end": 3645,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3572,
									"end": 3645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "tag",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "35"
								},
								{
									"begin": 3728,
									"end": 3760,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "tag",
									"source": 10,
									"value": "85"
								},
								{
									"begin": 3728,
									"end": 3760,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 3827,
									"end": 3833,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3819,
									"end": 3825,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3813,
									"end": 3817,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "34"
								},
								{
									"begin": 3769,
									"end": 3834,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "tag",
									"source": 10,
									"value": "86"
								},
								{
									"begin": 3769,
									"end": 3834,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3704,
									"end": 3840,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3651,
									"end": 3840,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3651,
									"end": 3840,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "tag",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "tag",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3923,
									"end": 3926,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3916,
									"end": 3921,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3913,
									"end": 3927,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 4014,
									"end": 4015,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4007,
									"end": 4012,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "36"
								},
								{
									"begin": 3977,
									"end": 4016,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "tag",
									"source": 10,
									"value": "91"
								},
								{
									"begin": 3977,
									"end": 4016,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3950,
									"end": 3951,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 3943,
									"end": 3948,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3939,
									"end": 3952,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3930,
									"end": 3952,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3930,
									"end": 3952,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "tag",
									"source": 10,
									"value": "90"
								},
								{
									"begin": 3906,
									"end": 4026,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3846,
									"end": 4032,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3846,
									"end": 4032,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "tag",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4139,
									"end": 4141,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4134,
									"end": 4137,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4131,
									"end": 4142,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 4205,
									"end": 4210,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 4173,
									"end": 4211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "tag",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 4173,
									"end": 4211,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 4275,
									"end": 4285,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 4257,
									"end": 4286,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "tag",
									"source": 10,
									"value": "95"
								},
								{
									"begin": 4257,
									"end": 4286,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4247,
									"end": 4255,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4243,
									"end": 4287,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4440,
									"end": 4442,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4428,
									"end": 4438,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4425,
									"end": 4443,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4461,
									"end": 4469,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4446,
									"end": 4469,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4446,
									"end": 4469,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "tag",
									"source": 10,
									"value": "96"
								},
								{
									"begin": 4422,
									"end": 4471,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 4558,
									"end": 4561,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "27"
								},
								{
									"begin": 4540,
									"end": 4562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "tag",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 4540,
									"end": 4562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4530,
									"end": 4538,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4526,
									"end": 4563,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4513,
									"end": 4524,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "37"
								},
								{
									"begin": 4484,
									"end": 4564,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "tag",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 4484,
									"end": 4564,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4143,
									"end": 4574,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4143,
									"end": 4574,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "tag",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 4128,
									"end": 4574,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4581,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4581,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "tag",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4641,
									"end": 4649,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4691,
									"end": 4696,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4685,
									"end": 4689,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4681,
									"end": 4697,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 4660,
									"end": 4697,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4660,
									"end": 4697,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4587,
									"end": 4704,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4587,
									"end": 4704,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4754,
									"end": 4760,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 4835,
									"end": 4836,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4831,
									"end": 4837,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4823,
									"end": 4828,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4820,
									"end": 4821,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 4816,
									"end": 4829,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "39"
								},
								{
									"begin": 4787,
									"end": 4838,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "tag",
									"source": 10,
									"value": "101"
								},
								{
									"begin": 4787,
									"end": 4838,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4783,
									"end": 4839,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4868,
									"end": 4872,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 4862,
									"end": 4866,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4858,
									"end": 4873,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4848,
									"end": 4873,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4848,
									"end": 4873,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4761,
									"end": 4879,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4710,
									"end": 4879,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4710,
									"end": 4879,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "tag",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4960,
									"end": 4964,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 5131,
									"end": 5134,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5125,
									"end": 5129,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 5106,
									"end": 5135,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "tag",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 5106,
									"end": 5135,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5098,
									"end": 5135,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5098,
									"end": 5135,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5168,
									"end": 5171,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5165,
									"end": 5166,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 5161,
									"end": 5172,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 5155,
									"end": 5159,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5152,
									"end": 5173,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5173,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5173,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4884,
									"end": 5179,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4884,
									"end": 5179,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "tag",
									"source": 10,
									"value": "9"
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 5334,
									"end": 5337,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 5301,
									"end": 5338,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "tag",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 5301,
									"end": 5338,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5403,
									"end": 5421,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5395,
									"end": 5401,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5392,
									"end": 5422,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "107"
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "23"
								},
								{
									"begin": 5425,
									"end": 5443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "tag",
									"source": 10,
									"value": "107"
								},
								{
									"begin": 5425,
									"end": 5443,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "tag",
									"source": 10,
									"value": "106"
								},
								{
									"begin": 5389,
									"end": 5445,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 5501,
									"end": 5505,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5495,
									"end": 5506,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "25"
								},
								{
									"begin": 5469,
									"end": 5507,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "tag",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 5469,
									"end": 5507,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 5614,
									"end": 5620,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5606,
									"end": 5612,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5600,
									"end": 5604,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "38"
								},
								{
									"begin": 5554,
									"end": 5621,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "tag",
									"source": 10,
									"value": "109"
								},
								{
									"begin": 5554,
									"end": 5621,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5648,
									"end": 5649,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5672,
									"end": 5676,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5659,
									"end": 5676,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5659,
									"end": 5676,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5704,
									"end": 5706,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 5696,
									"end": 5702,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5693,
									"end": 5707,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 5721,
									"end": 5722,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6378,
									"end": 6379,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6395,
									"end": 6401,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6444,
									"end": 6453,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6439,
									"end": 6442,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 6435,
									"end": 6454,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6429,
									"end": 6455,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 6420,
									"end": 6455,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6420,
									"end": 6455,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "tag",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 6392,
									"end": 6469,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 6555,
									"end": 6561,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6548,
									"end": 6553,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 6495,
									"end": 6562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "tag",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 6495,
									"end": 6562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6489,
									"end": 6493,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 6482,
									"end": 6563,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 6351,
									"end": 6573,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "tag",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 5716,
									"end": 6334,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5768,
									"end": 5772,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 5764,
									"end": 5773,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 5756,
									"end": 5762,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5752,
									"end": 5774,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 5834,
									"end": 5838,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "26"
								},
								{
									"begin": 5802,
									"end": 5839,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "tag",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 5802,
									"end": 5839,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5861,
									"end": 5862,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "tag",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5889,
									"end": 5896,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5886,
									"end": 5887,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5883,
									"end": 5897,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5968,
									"end": 5977,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5963,
									"end": 5966,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 5959,
									"end": 5978,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5953,
									"end": 5979,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5945,
									"end": 5951,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5938,
									"end": 5980,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 6019,
									"end": 6020,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 6011,
									"end": 6017,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6007,
									"end": 6021,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5997,
									"end": 6021,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5997,
									"end": 6021,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6066,
									"end": 6068,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6055,
									"end": 6064,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 6051,
									"end": 6069,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6038,
									"end": 6069,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 6038,
									"end": 6069,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5912,
									"end": 5916,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5909,
									"end": 5910,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5905,
									"end": 5917,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5900,
									"end": 5917,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5900,
									"end": 5917,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "tag",
									"source": 10,
									"value": "117"
								},
								{
									"begin": 5875,
									"end": 6083,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6111,
									"end": 6117,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 6102,
									"end": 6109,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6099,
									"end": 6118,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6169,
									"end": 6178,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6164,
									"end": 6167,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 6160,
									"end": 6179,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6154,
									"end": 6180,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 6254,
									"end": 6258,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 6246,
									"end": 6252,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 6242,
									"end": 6259,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 6231,
									"end": 6240,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 6212,
									"end": 6260,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "tag",
									"source": 10,
									"value": "119"
								},
								{
									"begin": 6212,
									"end": 6260,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6204,
									"end": 6210,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6197,
									"end": 6261,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 6119,
									"end": 6275,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "tag",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 6096,
									"end": 6275,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6321,
									"end": 6322,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 6317,
									"end": 6318,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 6309,
									"end": 6315,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 6305,
									"end": 6319,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 6301,
									"end": 6323,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6295,
									"end": 6299,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 6288,
									"end": 6324,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5723,
									"end": 6334,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "tag",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5686,
									"end": 6573,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5276,
									"end": 6579,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5184,
									"end": 6579,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5184,
									"end": 6579,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 635,
									"end": 10140,
									"name": "tag",
									"source": 9,
									"value": "14"
								},
								{
									"begin": 635,
									"end": 10140,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 635,
									"end": 10140,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 635,
									"end": 10140,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 635,
									"end": 10140,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 635,
									"end": 10140,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 635,
									"end": 10140,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 635,
									"end": 10140,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 635,
									"end": 10140,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a085248112c02c3272b66eb04c4c555c4a703db89e5ded1e477594eed216c23864736f6c63430008190033",
									".code": [
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "58D50F0A"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "C7F8A78D"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "C7F8A78D"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "E3EECE26"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "EECDAC88"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "B7D19FC4"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "B8606EEF"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "9C8F9F23"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "9CD441DA"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "9D6F09C1"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "tag",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "58D50F0A"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "69FE0E2D"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "16DC165B"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "31018339"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "31018339"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "3C1D5DF0"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "3C4A25D0"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "16DC165B"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "902F1AC"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "902F1AC"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "10F669B3"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "126082CF"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "tag",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "2AAC7B2"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "54D50D4"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 635,
											"end": 10140,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "tag",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1116,
											"end": 1145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 1116,
											"end": 1145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "tag",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "46"
										},
										{
											"begin": 6720,
											"end": 7161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 6720,
											"end": 7161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 6720,
											"end": 7161,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "tag",
											"source": 9,
											"value": "48"
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7447,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 7339,
											"end": 7447,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 7339,
											"end": 7447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 7339,
											"end": 7447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7447,
											"name": "tag",
											"source": 9,
											"value": "54"
										},
										{
											"begin": 7339,
											"end": 7447,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7447,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7339,
											"end": 7447,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 7339,
											"end": 7447,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7447,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7447,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7447,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 7339,
											"end": 7447,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7447,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 7339,
											"end": 7447,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7447,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7339,
											"end": 7447,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7447,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7447,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7447,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7447,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7447,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "tag",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1283,
											"end": 1312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "tag",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1283,
											"end": 1312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "tag",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 981,
											"end": 1033,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 981,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 981,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 981,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 981,
											"end": 1033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 981,
											"end": 1033,
											"name": "tag",
											"source": 9,
											"value": "67"
										},
										{
											"begin": 981,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 981,
											"end": 1033,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 981,
											"end": 1033,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 981,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 981,
											"end": 1033,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 981,
											"end": 1033,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 981,
											"end": 1033,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 981,
											"end": 1033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 981,
											"end": 1033,
											"name": "tag",
											"source": 9,
											"value": "69"
										},
										{
											"begin": 981,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 981,
											"end": 1033,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 981,
											"end": 1033,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 981,
											"end": 1033,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 981,
											"end": 1033,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 981,
											"end": 1033,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 981,
											"end": 1033,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 981,
											"end": 1033,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 747,
											"end": 767,
											"name": "tag",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 747,
											"end": 767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 747,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 747,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 747,
											"end": 767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 747,
											"end": 767,
											"name": "tag",
											"source": 9,
											"value": "70"
										},
										{
											"begin": 747,
											"end": 767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 747,
											"end": 767,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 767,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 747,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 747,
											"end": 767,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 747,
											"end": 767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 747,
											"end": 767,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 747,
											"end": 767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 747,
											"end": 767,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 747,
											"end": 767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 747,
											"end": 767,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 747,
											"end": 767,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 747,
											"end": 767,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 747,
											"end": 767,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 747,
											"end": 767,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 747,
											"end": 767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 747,
											"end": 767,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 5753,
											"end": 6381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 5753,
											"end": 6381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 5753,
											"end": 6381,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1205,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1205,
											"end": 1242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 8343,
											"end": 8668,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 8343,
											"end": 8668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8343,
											"end": 8668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 8343,
											"end": 8668,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8343,
											"end": 8668,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8343,
											"end": 8668,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8343,
											"end": 8668,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8343,
											"end": 8668,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8343,
											"end": 8668,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8343,
											"end": 8668,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8343,
											"end": 8668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 8343,
											"end": 8668,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8343,
											"end": 8668,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8343,
											"end": 8668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 8343,
											"end": 8668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8343,
											"end": 8668,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 8343,
											"end": 8668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8343,
											"end": 8668,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 8343,
											"end": 8668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8343,
											"end": 8668,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 8343,
											"end": 8668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8343,
											"end": 8668,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "tag",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 1248,
											"end": 1277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "tag",
											"source": 9,
											"value": "98"
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1248,
											"end": 1277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "tag",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 7981,
											"end": 8228,
											"name": "tag",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 7981,
											"end": 8228,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7981,
											"end": 8228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 7981,
											"end": 8228,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 7981,
											"end": 8228,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7981,
											"end": 8228,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 7981,
											"end": 8228,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7981,
											"end": 8228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7981,
											"end": 8228,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 7981,
											"end": 8228,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7981,
											"end": 8228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 7981,
											"end": 8228,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7981,
											"end": 8228,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7981,
											"end": 8228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7981,
											"end": 8228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7981,
											"end": 8228,
											"name": "tag",
											"source": 9,
											"value": "102"
										},
										{
											"begin": 7981,
											"end": 8228,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7981,
											"end": 8228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 7981,
											"end": 8228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7981,
											"end": 8228,
											"name": "tag",
											"source": 9,
											"value": "101"
										},
										{
											"begin": 7981,
											"end": 8228,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7981,
											"end": 8228,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "105"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4019,
											"end": 4631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 4019,
											"end": 4631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 4019,
											"end": 4631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 2823,
											"end": 3688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2823,
											"end": 3688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 2823,
											"end": 3688,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "tag",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1318,
											"end": 1350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "tag",
											"source": 9,
											"value": "119"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 1318,
											"end": 1350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 773,
											"end": 793,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 773,
											"end": 793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 773,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 773,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 773,
											"end": 793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 773,
											"end": 793,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 773,
											"end": 793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 773,
											"end": 793,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 793,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 773,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 773,
											"end": 793,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 773,
											"end": 793,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 773,
											"end": 793,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 773,
											"end": 793,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 773,
											"end": 793,
											"name": "tag",
											"source": 9,
											"value": "128"
										},
										{
											"begin": 773,
											"end": 793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 773,
											"end": 793,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 773,
											"end": 793,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 773,
											"end": 793,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 773,
											"end": 793,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 773,
											"end": 793,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 773,
											"end": 793,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 773,
											"end": 793,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 929,
											"end": 963,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 929,
											"end": 963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 929,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 929,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 929,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 929,
											"end": 963,
											"name": "tag",
											"source": 9,
											"value": "129"
										},
										{
											"begin": 929,
											"end": 963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 929,
											"end": 963,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 963,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 929,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 929,
											"end": 963,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 929,
											"end": 963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 929,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 929,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 929,
											"end": 963,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 929,
											"end": 963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 929,
											"end": 963,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 929,
											"end": 963,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 929,
											"end": 963,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 929,
											"end": 963,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 929,
											"end": 963,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 929,
											"end": 963,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 929,
											"end": 963,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "tag",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4878,
											"end": 5506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 4878,
											"end": 5506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "49"
										},
										{
											"begin": 4878,
											"end": 5506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 1069,
											"end": 1110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 1069,
											"end": 1110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "63"
										},
										{
											"begin": 1069,
											"end": 1110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 8798,
											"end": 9347,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 8798,
											"end": 9347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8798,
											"end": 9347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 8798,
											"end": 9347,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8798,
											"end": 9347,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8798,
											"end": 9347,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 8798,
											"end": 9347,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8798,
											"end": 9347,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8798,
											"end": 9347,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8798,
											"end": 9347,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8798,
											"end": 9347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 8798,
											"end": 9347,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8798,
											"end": 9347,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8798,
											"end": 9347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 8798,
											"end": 9347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8798,
											"end": 9347,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 8798,
											"end": 9347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8798,
											"end": 9347,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 8798,
											"end": 9347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8798,
											"end": 9347,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 8798,
											"end": 9347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8798,
											"end": 9347,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "tag",
											"source": 9,
											"value": "148"
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1116,
											"end": 1145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "tag",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6859,
											"end": 6866,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6878,
											"end": 6904,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6945,
											"end": 6959,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 6945,
											"end": 6959,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1028,
											"end": 1033,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 6922,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 6922,
											"end": 6959,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6922,
											"end": 6959,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6922,
											"end": 6959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 6922,
											"end": 6959,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6922,
											"end": 6959,
											"name": "tag",
											"source": 9,
											"value": "151"
										},
										{
											"begin": 6922,
											"end": 6959,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6918,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 6907,
											"end": 6960,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6960,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 6907,
											"end": 6960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6907,
											"end": 6960,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 6907,
											"end": 6960,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6878,
											"end": 6960,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6878,
											"end": 6960,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6970,
											"end": 6987,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7011,
											"end": 7024,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6990,
											"end": 7024,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 6990,
											"end": 7024,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6990,
											"end": 7024,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6990,
											"end": 7024,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 6990,
											"end": 7024,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6990,
											"end": 7024,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 6990,
											"end": 7024,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6970,
											"end": 7024,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6970,
											"end": 7024,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7034,
											"end": 7053,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7096,
											"end": 7114,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 1028,
											"end": 1033,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 7057,
											"end": 7069,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7057,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 7057,
											"end": 7092,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7057,
											"end": 7092,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7057,
											"end": 7092,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 7057,
											"end": 7092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7057,
											"end": 7092,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 7057,
											"end": 7092,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7056,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 7056,
											"end": 7114,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7056,
											"end": 7114,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7056,
											"end": 7114,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 7056,
											"end": 7114,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7056,
											"end": 7114,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 7056,
											"end": 7114,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7034,
											"end": 7114,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7034,
											"end": 7114,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7143,
											"end": 7154,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7140,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 7131,
											"end": 7154,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7154,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7154,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 7131,
											"end": 7154,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7131,
											"end": 7154,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 7131,
											"end": 7154,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7124,
											"end": 7154,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7124,
											"end": 7154,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7124,
											"end": 7154,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7124,
											"end": 7154,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7124,
											"end": 7154,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6720,
											"end": 7161,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2119,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2151,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2144,
											"end": 2156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "tag",
											"source": 2,
											"value": "165"
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2144,
											"end": 2156,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2163,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7339,
											"end": 7447,
											"name": "tag",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 7339,
											"end": 7447,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7385,
											"end": 7392,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 7394,
											"end": 7401,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7421,
											"end": 7429,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 7421,
											"end": 7429,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7431,
											"end": 7439,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 7431,
											"end": 7439,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7413,
											"end": 7440,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7413,
											"end": 7440,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7413,
											"end": 7440,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7413,
											"end": 7440,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7447,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7447,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4366,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4382,
											"end": 4395,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 4398,
											"end": 4408,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 4398,
											"end": 4410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 4398,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4382,
											"end": 4410,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 4429,
											"end": 4434,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4436,
											"end": 4443,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4445,
											"end": 4450,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 4420,
											"end": 4451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 4420,
											"end": 4451,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4468,
											"end": 4472,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4461,
											"end": 4472,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4293,
											"end": 4479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "tag",
											"source": 9,
											"value": "65"
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1312,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1283,
											"end": 1312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 981,
											"end": 1033,
											"name": "tag",
											"source": 9,
											"value": "68"
										},
										{
											"begin": 981,
											"end": 1033,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1028,
											"end": 1033,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 981,
											"end": 1033,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 981,
											"end": 1033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 747,
											"end": 767,
											"name": "tag",
											"source": 9,
											"value": "71"
										},
										{
											"begin": 747,
											"end": 767,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 747,
											"end": 767,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 747,
											"end": 767,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 747,
											"end": 767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 747,
											"end": 767,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 747,
											"end": 767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 747,
											"end": 767,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 747,
											"end": 767,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 747,
											"end": 767,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 747,
											"end": 767,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 747,
											"end": 767,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 747,
											"end": 767,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 747,
											"end": 767,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 747,
											"end": 767,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3222,
											"end": 3234,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3215,
											"end": 3234,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3144,
											"end": 3241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5126,
											"end": 5130,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5142,
											"end": 5157,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 5160,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 5160,
											"end": 5172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "tag",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 5160,
											"end": 5172,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5142,
											"end": 5172,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 5198,
											"end": 5202,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5204,
											"end": 5211,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5213,
											"end": 5218,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 5182,
											"end": 5219,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "tag",
											"source": 2,
											"value": "177"
										},
										{
											"begin": 5182,
											"end": 5219,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 5239,
											"end": 5243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5245,
											"end": 5247,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5249,
											"end": 5254,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5238,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 5229,
											"end": 5255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 5229,
											"end": 5255,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5272,
											"end": 5276,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5265,
											"end": 5276,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5039,
											"end": 5283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "tag",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5845,
											"end": 5863,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5895,
											"end": 5896,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5883,
											"end": 5892,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5883,
											"end": 5896,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5875,
											"end": 5926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 5875,
											"end": 5926,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5875,
											"end": 5926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5875,
											"end": 5926,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5875,
											"end": 5926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5875,
											"end": 5926,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5875,
											"end": 5926,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5875,
											"end": 5926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5875,
											"end": 5926,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5875,
											"end": 5926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 5875,
											"end": 5926,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5875,
											"end": 5926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 5875,
											"end": 5926,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5875,
											"end": 5926,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 5875,
											"end": 5926,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5875,
											"end": 5926,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5875,
											"end": 5926,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5875,
											"end": 5926,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5875,
											"end": 5926,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5875,
											"end": 5926,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5875,
											"end": 5926,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5875,
											"end": 5926,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5875,
											"end": 5926,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 5875,
											"end": 5926,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5949,
											"end": 5992,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 5962,
											"end": 5971,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5973,
											"end": 5981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 5973,
											"end": 5981,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5983,
											"end": 5991,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 5983,
											"end": 5991,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5949,
											"end": 5961,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 5949,
											"end": 5992,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5949,
											"end": 5992,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 5949,
											"end": 5992,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5936,
											"end": 5992,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5936,
											"end": 5992,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6024,
											"end": 6037,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6010,
											"end": 6020,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6010,
											"end": 6037,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 6010,
											"end": 6037,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6002,
											"end": 6073,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 6002,
											"end": 6073,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6002,
											"end": 6073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6002,
											"end": 6073,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6002,
											"end": 6073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6002,
											"end": 6073,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6002,
											"end": 6073,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6002,
											"end": 6073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6002,
											"end": 6073,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6002,
											"end": 6073,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 6002,
											"end": 6073,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6002,
											"end": 6073,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 6002,
											"end": 6073,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6002,
											"end": 6073,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 6002,
											"end": 6073,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6002,
											"end": 6073,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6002,
											"end": 6073,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6002,
											"end": 6073,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6002,
											"end": 6073,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6002,
											"end": 6073,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6002,
											"end": 6073,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6002,
											"end": 6073,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6002,
											"end": 6073,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 6002,
											"end": 6073,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6145,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 6108,
											"end": 6118,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6128,
											"end": 6132,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 6135,
											"end": 6144,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 6084,
											"end": 6090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6084,
											"end": 6090,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6090,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6090,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6084,
											"end": 6090,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6090,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6090,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6084,
											"end": 6090,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6107,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6084,
											"end": 6107,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 6084,
											"end": 6107,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6145,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6145,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6145,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6145,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6145,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6084,
											"end": 6145,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6145,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6084,
											"end": 6145,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "192"
										},
										{
											"begin": 6084,
											"end": 6145,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6155,
											"end": 6198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 6175,
											"end": 6185,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6187,
											"end": 6197,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6155,
											"end": 6161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 6155,
											"end": 6161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6155,
											"end": 6161,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6155,
											"end": 6161,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6155,
											"end": 6161,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6155,
											"end": 6161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6155,
											"end": 6161,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6155,
											"end": 6161,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6155,
											"end": 6161,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6155,
											"end": 6161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6155,
											"end": 6161,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6155,
											"end": 6174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6155,
											"end": 6174,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6155,
											"end": 6174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 6155,
											"end": 6174,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6155,
											"end": 6198,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6155,
											"end": 6198,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6155,
											"end": 6198,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6155,
											"end": 6198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6155,
											"end": 6198,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6155,
											"end": 6198,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6155,
											"end": 6198,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "194"
										},
										{
											"begin": 6155,
											"end": 6198,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6221,
											"end": 6230,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6209,
											"end": 6217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 6209,
											"end": 6217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6209,
											"end": 6230,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6209,
											"end": 6230,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6209,
											"end": 6230,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6209,
											"end": 6230,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 6209,
											"end": 6230,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6209,
											"end": 6230,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6209,
											"end": 6230,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 6209,
											"end": 6230,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6209,
											"end": 6230,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "196"
										},
										{
											"begin": 6209,
											"end": 6230,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6209,
											"end": 6230,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6209,
											"end": 6230,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6209,
											"end": 6230,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6209,
											"end": 6230,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6209,
											"end": 6230,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6209,
											"end": 6230,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6209,
											"end": 6230,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6252,
											"end": 6262,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6240,
											"end": 6248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 6240,
											"end": 6248,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6240,
											"end": 6262,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6240,
											"end": 6262,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6240,
											"end": 6262,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6240,
											"end": 6262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 6240,
											"end": 6262,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6240,
											"end": 6262,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6240,
											"end": 6262,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 6240,
											"end": 6262,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6240,
											"end": 6262,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 6240,
											"end": 6262,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6240,
											"end": 6262,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6240,
											"end": 6262,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6240,
											"end": 6262,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6240,
											"end": 6262,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6240,
											"end": 6262,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6240,
											"end": 6262,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6240,
											"end": 6262,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6273,
											"end": 6285,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 6273,
											"end": 6283,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 6273,
											"end": 6285,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6273,
											"end": 6285,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "198"
										},
										{
											"begin": 6273,
											"end": 6285,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6306,
											"end": 6316,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 6301,
											"end": 6374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6301,
											"end": 6374,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6301,
											"end": 6374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "53D794B2310B8D186A24AE24A65EE066983A52A6EFA6BD3DF09A7601A3CB4F3"
										},
										{
											"begin": 6318,
											"end": 6327,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6329,
											"end": 6339,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6349,
											"end": 6355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 6349,
											"end": 6355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6349,
											"end": 6355,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6349,
											"end": 6355,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6349,
											"end": 6355,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6349,
											"end": 6355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6349,
											"end": 6355,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6349,
											"end": 6355,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6349,
											"end": 6355,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6349,
											"end": 6355,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6349,
											"end": 6355,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6366,
											"end": 6372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 6366,
											"end": 6372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6366,
											"end": 6372,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6366,
											"end": 6372,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6366,
											"end": 6372,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6366,
											"end": 6372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6366,
											"end": 6372,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6366,
											"end": 6372,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6366,
											"end": 6372,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6366,
											"end": 6372,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6366,
											"end": 6372,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6301,
											"end": 6374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6301,
											"end": 6374,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6301,
											"end": 6374,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 6301,
											"end": 6374,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 6301,
											"end": 6374,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6301,
											"end": 6374,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6301,
											"end": 6374,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6301,
											"end": 6374,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6301,
											"end": 6374,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 6301,
											"end": 6374,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6301,
											"end": 6374,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "200"
										},
										{
											"begin": 6301,
											"end": 6374,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6301,
											"end": 6374,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6301,
											"end": 6374,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6301,
											"end": 6374,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6301,
											"end": 6374,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6301,
											"end": 6374,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6301,
											"end": 6374,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6301,
											"end": 6374,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "202"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 6381,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5753,
											"end": 6381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3051,
											"end": 3056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3075,
											"end": 3077,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3077,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3002,
											"end": 3084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1242,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1205,
											"end": 1242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8343,
											"end": 8668,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 8343,
											"end": 8668,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1980,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 1991,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 1963,
											"end": 2026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 9,
											"value": "206"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8444,
											"end": 8445,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8423,
											"end": 8446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8423,
											"end": 8446,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8423,
											"end": 8432,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8423,
											"end": 8446,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8423,
											"end": 8446,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8423,
											"end": 8446,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8415,
											"end": 8480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 8415,
											"end": 8480,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8415,
											"end": 8480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8415,
											"end": 8480,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8415,
											"end": 8480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8415,
											"end": 8480,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8415,
											"end": 8480,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8415,
											"end": 8480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8415,
											"end": 8480,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8415,
											"end": 8480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 8415,
											"end": 8480,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8415,
											"end": 8480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 8415,
											"end": 8480,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8415,
											"end": 8480,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 8415,
											"end": 8480,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8415,
											"end": 8480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8415,
											"end": 8480,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8415,
											"end": 8480,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8415,
											"end": 8480,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8415,
											"end": 8480,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8415,
											"end": 8480,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8415,
											"end": 8480,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8415,
											"end": 8480,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 8415,
											"end": 8480,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8499,
											"end": 8508,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 8499,
											"end": 8519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8509,
											"end": 8518,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8499,
											"end": 8519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8499,
											"end": 8519,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8499,
											"end": 8519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8499,
											"end": 8519,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8499,
											"end": 8519,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8499,
											"end": 8519,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8499,
											"end": 8519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8499,
											"end": 8519,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8499,
											"end": 8519,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8499,
											"end": 8519,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8499,
											"end": 8519,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8499,
											"end": 8519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8499,
											"end": 8519,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8499,
											"end": 8519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8499,
											"end": 8519,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8499,
											"end": 8519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8499,
											"end": 8519,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8499,
											"end": 8519,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8499,
											"end": 8519,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8499,
											"end": 8519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8499,
											"end": 8519,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8499,
											"end": 8519,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8499,
											"end": 8519,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8499,
											"end": 8519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 8499,
											"end": 8519,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8498,
											"end": 8519,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8490,
											"end": 8547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 8490,
											"end": 8547,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8490,
											"end": 8547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8490,
											"end": 8547,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8490,
											"end": 8547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8490,
											"end": 8547,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8490,
											"end": 8547,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8490,
											"end": 8547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8490,
											"end": 8547,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8490,
											"end": 8547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 8490,
											"end": 8547,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8490,
											"end": 8547,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 8490,
											"end": 8547,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8490,
											"end": 8547,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 8490,
											"end": 8547,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8490,
											"end": 8547,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8490,
											"end": 8547,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8490,
											"end": 8547,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8490,
											"end": 8547,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8490,
											"end": 8547,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8490,
											"end": 8547,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8490,
											"end": 8547,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8490,
											"end": 8547,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 8490,
											"end": 8547,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8580,
											"end": 8584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8557,
											"end": 8566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 8557,
											"end": 8577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8567,
											"end": 8576,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8557,
											"end": 8577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8557,
											"end": 8577,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8557,
											"end": 8577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8557,
											"end": 8577,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8557,
											"end": 8577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8557,
											"end": 8577,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8557,
											"end": 8577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8557,
											"end": 8577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8557,
											"end": 8577,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8557,
											"end": 8577,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8557,
											"end": 8577,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8557,
											"end": 8577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8557,
											"end": 8577,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8557,
											"end": 8577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8557,
											"end": 8577,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8557,
											"end": 8577,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8557,
											"end": 8584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8557,
											"end": 8584,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8557,
											"end": 8584,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8557,
											"end": 8584,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8557,
											"end": 8584,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8557,
											"end": 8584,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 8557,
											"end": 8584,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 8557,
											"end": 8584,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 8557,
											"end": 8584,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8557,
											"end": 8584,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8557,
											"end": 8584,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8557,
											"end": 8584,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8557,
											"end": 8584,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 8557,
											"end": 8584,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 8557,
											"end": 8584,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 8557,
											"end": 8584,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8557,
											"end": 8584,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8557,
											"end": 8584,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8606,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 8612,
											"end": 8621,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8594,
											"end": 8622,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8651,
											"end": 8660,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8637,
											"end": 8661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8637,
											"end": 8661,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8637,
											"end": 8661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "DC5A48D79E2E147530FF63ECDBED5A5A66ADB9D5CF339384D5D076DA197C40B5"
										},
										{
											"begin": 8637,
											"end": 8661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8637,
											"end": 8661,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8637,
											"end": 8661,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8637,
											"end": 8661,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8637,
											"end": 8661,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8637,
											"end": 8661,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8637,
											"end": 8661,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8637,
											"end": 8661,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8637,
											"end": 8661,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 8343,
											"end": 8668,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8343,
											"end": 8668,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "tag",
											"source": 9,
											"value": "99"
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1277,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1248,
											"end": 1277,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7981,
											"end": 8228,
											"name": "tag",
											"source": 9,
											"value": "103"
										},
										{
											"begin": 7981,
											"end": 8228,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1980,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 1991,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 1963,
											"end": 2026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 9,
											"value": "219"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 9,
											"value": "218"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1028,
											"end": 1033,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 8062,
											"end": 8077,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8062,
											"end": 8100,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 8054,
											"end": 8121,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 8054,
											"end": 8121,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8054,
											"end": 8121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8054,
											"end": 8121,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8054,
											"end": 8121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8054,
											"end": 8121,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8054,
											"end": 8121,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8054,
											"end": 8121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8054,
											"end": 8121,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8054,
											"end": 8121,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 8054,
											"end": 8121,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8054,
											"end": 8121,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "223"
										},
										{
											"begin": 8054,
											"end": 8121,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8054,
											"end": 8121,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 8054,
											"end": 8121,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8054,
											"end": 8121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8054,
											"end": 8121,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8054,
											"end": 8121,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8054,
											"end": 8121,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8054,
											"end": 8121,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8054,
											"end": 8121,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8054,
											"end": 8121,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8054,
											"end": 8121,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "221"
										},
										{
											"begin": 8054,
											"end": 8121,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8136,
											"end": 8179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "528D9479E9F9889A87A3C30C7F7BA537E5E59C4C85A37733B16E57C62DF61302"
										},
										{
											"begin": 8147,
											"end": 8161,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 8147,
											"end": 8161,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8163,
											"end": 8178,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8136,
											"end": 8179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8136,
											"end": 8179,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8136,
											"end": 8179,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 8136,
											"end": 8179,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 8136,
											"end": 8179,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8136,
											"end": 8179,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8136,
											"end": 8179,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 8136,
											"end": 8179,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8136,
											"end": 8179,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 8136,
											"end": 8179,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8136,
											"end": 8179,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8136,
											"end": 8179,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8136,
											"end": 8179,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8136,
											"end": 8179,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8136,
											"end": 8179,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8136,
											"end": 8179,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8136,
											"end": 8179,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 8206,
											"end": 8221,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8189,
											"end": 8203,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 8189,
											"end": 8221,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8189,
											"end": 8221,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8189,
											"end": 8221,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 8189,
											"end": 8221,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7981,
											"end": 8228,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7981,
											"end": 8228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3364,
											"end": 3371,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3399,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3407,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3383,
											"end": 3408,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3299,
											"end": 3415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2323,
											"end": 2336,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2355,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2348,
											"end": 2362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2348,
											"end": 2362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2276,
											"end": 2369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4094,
											"end": 4109,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4111,
											"end": 4126,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "233"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4146,
											"end": 4155,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4146,
											"end": 4159,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4138,
											"end": 4193,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 4138,
											"end": 4193,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4138,
											"end": 4193,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4138,
											"end": 4193,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4138,
											"end": 4193,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4138,
											"end": 4193,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4138,
											"end": 4193,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4138,
											"end": 4193,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4138,
											"end": 4193,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4138,
											"end": 4193,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4138,
											"end": 4193,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4138,
											"end": 4193,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "237"
										},
										{
											"begin": 4138,
											"end": 4193,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4138,
											"end": 4193,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "236"
										},
										{
											"begin": 4138,
											"end": 4193,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4138,
											"end": 4193,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4138,
											"end": 4193,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4138,
											"end": 4193,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4138,
											"end": 4193,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4138,
											"end": 4193,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4138,
											"end": 4193,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4138,
											"end": 4193,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4138,
											"end": 4193,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "235"
										},
										{
											"begin": 4138,
											"end": 4193,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 4223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4226,
											"end": 4239,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 4226,
											"end": 4237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 4226,
											"end": 4239,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4226,
											"end": 4239,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "238"
										},
										{
											"begin": 4226,
											"end": 4239,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 4239,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4204,
											"end": 4239,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4285,
											"end": 4296,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4273,
											"end": 4281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 4273,
											"end": 4281,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4270,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4281,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 4261,
											"end": 4281,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4281,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4281,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 4261,
											"end": 4281,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4261,
											"end": 4281,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "239"
										},
										{
											"begin": 4261,
											"end": 4281,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4260,
											"end": 4296,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 4260,
											"end": 4296,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4260,
											"end": 4296,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4260,
											"end": 4296,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 4260,
											"end": 4296,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4260,
											"end": 4296,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "240"
										},
										{
											"begin": 4260,
											"end": 4296,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4250,
											"end": 4296,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4250,
											"end": 4296,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4341,
											"end": 4352,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4329,
											"end": 4337,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4329,
											"end": 4337,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4317,
											"end": 4326,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4317,
											"end": 4337,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 4317,
											"end": 4337,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4317,
											"end": 4337,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4317,
											"end": 4337,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 4317,
											"end": 4337,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4317,
											"end": 4337,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "241"
										},
										{
											"begin": 4317,
											"end": 4337,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4352,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 4316,
											"end": 4352,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4352,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4352,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 4316,
											"end": 4352,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4316,
											"end": 4352,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "242"
										},
										{
											"begin": 4316,
											"end": 4352,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4306,
											"end": 4352,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4306,
											"end": 4352,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4363,
											"end": 4391,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 4369,
											"end": 4379,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4381,
											"end": 4390,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4363,
											"end": 4368,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "244"
										},
										{
											"begin": 4363,
											"end": 4391,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4363,
											"end": 4391,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "243"
										},
										{
											"begin": 4363,
											"end": 4391,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4414,
											"end": 4421,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4402,
											"end": 4410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 4402,
											"end": 4410,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4402,
											"end": 4421,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4402,
											"end": 4421,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4402,
											"end": 4421,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4402,
											"end": 4421,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 4402,
											"end": 4421,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4402,
											"end": 4421,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4402,
											"end": 4421,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 4402,
											"end": 4421,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4402,
											"end": 4421,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "245"
										},
										{
											"begin": 4402,
											"end": 4421,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4402,
											"end": 4421,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4402,
											"end": 4421,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4402,
											"end": 4421,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4402,
											"end": 4421,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4402,
											"end": 4421,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4402,
											"end": 4421,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4402,
											"end": 4421,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4443,
											"end": 4450,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4431,
											"end": 4439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 4431,
											"end": 4439,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4431,
											"end": 4450,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4431,
											"end": 4450,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4431,
											"end": 4450,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4431,
											"end": 4450,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 4431,
											"end": 4450,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4431,
											"end": 4450,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4431,
											"end": 4450,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 4431,
											"end": 4450,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4431,
											"end": 4450,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "246"
										},
										{
											"begin": 4431,
											"end": 4450,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4431,
											"end": 4450,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4431,
											"end": 4450,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4431,
											"end": 4450,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4431,
											"end": 4450,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4431,
											"end": 4450,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4431,
											"end": 4450,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4431,
											"end": 4450,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4461,
											"end": 4501,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 4481,
											"end": 4491,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4493,
											"end": 4500,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4461,
											"end": 4467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 4461,
											"end": 4467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4461,
											"end": 4467,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4461,
											"end": 4467,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4461,
											"end": 4467,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4461,
											"end": 4467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4461,
											"end": 4467,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4461,
											"end": 4467,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4461,
											"end": 4467,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4461,
											"end": 4467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4461,
											"end": 4467,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4461,
											"end": 4480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4461,
											"end": 4480,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4461,
											"end": 4480,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 4461,
											"end": 4480,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4461,
											"end": 4501,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4461,
											"end": 4501,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4461,
											"end": 4501,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4461,
											"end": 4501,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4461,
											"end": 4501,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4461,
											"end": 4501,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4461,
											"end": 4501,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "247"
										},
										{
											"begin": 4461,
											"end": 4501,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4511,
											"end": 4551,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 4531,
											"end": 4541,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4543,
											"end": 4550,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4511,
											"end": 4517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 4511,
											"end": 4517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4511,
											"end": 4517,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4511,
											"end": 4517,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4511,
											"end": 4517,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4511,
											"end": 4517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 4511,
											"end": 4517,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 4511,
											"end": 4517,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4511,
											"end": 4517,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4511,
											"end": 4517,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4511,
											"end": 4517,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4511,
											"end": 4530,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4511,
											"end": 4530,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4511,
											"end": 4530,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 4511,
											"end": 4530,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4511,
											"end": 4551,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4511,
											"end": 4551,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4511,
											"end": 4551,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4511,
											"end": 4551,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4511,
											"end": 4551,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4511,
											"end": 4551,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4511,
											"end": 4551,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "248"
										},
										{
											"begin": 4511,
											"end": 4551,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4584,
											"end": 4594,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4567,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4567,
											"end": 4624,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4567,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1DC8BB69DF2B8E91FBDCBFCF93D951B3F0000F085A95FE3F7946D6161439245D"
										},
										{
											"begin": 4596,
											"end": 4603,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4605,
											"end": 4612,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4614,
											"end": 4623,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4567,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4567,
											"end": 4624,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4567,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 4567,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 4567,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4567,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4567,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4567,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 4567,
											"end": 4624,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4567,
											"end": 4624,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "249"
										},
										{
											"begin": 4567,
											"end": 4624,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4567,
											"end": 4624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4567,
											"end": 4624,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4567,
											"end": 4624,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4567,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4567,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4567,
											"end": 4624,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4567,
											"end": 4624,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 4128,
											"end": 4631,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4631,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4019,
											"end": 4631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "tag",
											"source": 9,
											"value": "117"
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2910,
											"end": 2927,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2939,
											"end": 2998,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 2963,
											"end": 2973,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2983,
											"end": 2987,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 2990,
											"end": 2997,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 2939,
											"end": 2945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2939,
											"end": 2945,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2945,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2945,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2939,
											"end": 2945,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2945,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2945,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2945,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2939,
											"end": 2945,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2962,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2939,
											"end": 2962,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2962,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 2939,
											"end": 2962,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2998,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2998,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2998,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2998,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2998,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2939,
											"end": 2998,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2998,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2939,
											"end": 2998,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 2939,
											"end": 2998,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3067,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 3032,
											"end": 3042,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3052,
											"end": 3056,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 3059,
											"end": 3066,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3008,
											"end": 3014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3008,
											"end": 3014,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3014,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3014,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3008,
											"end": 3014,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3014,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3014,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3014,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3008,
											"end": 3014,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3031,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3008,
											"end": 3031,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3031,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 3008,
											"end": 3031,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3067,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3067,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3067,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3067,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3008,
											"end": 3067,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3067,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3008,
											"end": 3067,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 3008,
											"end": 3067,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3093,
											"end": 3094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3082,
											"end": 3090,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3082,
											"end": 3090,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3094,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3110,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3110,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 3082,
											"end": 3110,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3110,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3109,
											"end": 3110,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3098,
											"end": 3106,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3098,
											"end": 3110,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3082,
											"end": 3110,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 3082,
											"end": 3110,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3078,
											"end": 3224,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3078,
											"end": 3224,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 3078,
											"end": 3224,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3166,
											"end": 3174,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3166,
											"end": 3174,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3156,
											"end": 3163,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3156,
											"end": 3174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 3156,
											"end": 3174,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3156,
											"end": 3174,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3156,
											"end": 3174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3156,
											"end": 3174,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3156,
											"end": 3174,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 3156,
											"end": 3174,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3144,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3144,
											"end": 3152,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3141,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 3134,
											"end": 3152,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3152,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3152,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3134,
											"end": 3152,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3152,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 3134,
											"end": 3152,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3134,
											"end": 3174,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3213,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 3126,
											"end": 3213,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3126,
											"end": 3213,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3126,
											"end": 3213,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3213,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3126,
											"end": 3213,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3213,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 3126,
											"end": 3213,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3213,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 3126,
											"end": 3213,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3213,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "262"
										},
										{
											"begin": 3126,
											"end": 3213,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3213,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3126,
											"end": 3213,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3213,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3213,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3213,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3213,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3213,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3126,
											"end": 3213,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 3126,
											"end": 3213,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3078,
											"end": 3224,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "258"
										},
										{
											"begin": 3078,
											"end": 3224,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3255,
											"end": 3256,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3238,
											"end": 3251,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 3238,
											"end": 3249,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 3238,
											"end": 3251,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3238,
											"end": 3251,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 3238,
											"end": 3251,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3238,
											"end": 3256,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3234,
											"end": 3440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 3234,
											"end": 3440,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3284,
											"end": 3307,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 3299,
											"end": 3306,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3289,
											"end": 3296,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3289,
											"end": 3306,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 3289,
											"end": 3306,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3289,
											"end": 3306,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3289,
											"end": 3306,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3289,
											"end": 3306,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3289,
											"end": 3306,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 3289,
											"end": 3306,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3284,
											"end": 3288,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 3284,
											"end": 3307,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3284,
											"end": 3307,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "266"
										},
										{
											"begin": 3284,
											"end": 3307,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3272,
											"end": 3307,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3272,
											"end": 3307,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3234,
											"end": 3440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 3234,
											"end": 3440,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3234,
											"end": 3440,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 3234,
											"end": 3440,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3350,
											"end": 3429,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 3382,
											"end": 3390,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3382,
											"end": 3390,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3365,
											"end": 3378,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 3365,
											"end": 3376,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 3365,
											"end": 3378,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3365,
											"end": 3378,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 3365,
											"end": 3378,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3355,
											"end": 3362,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3355,
											"end": 3378,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 3355,
											"end": 3378,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3355,
											"end": 3378,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3355,
											"end": 3378,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3355,
											"end": 3378,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3355,
											"end": 3378,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 3355,
											"end": 3378,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3354,
											"end": 3390,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 3354,
											"end": 3390,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3354,
											"end": 3390,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3354,
											"end": 3390,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 3354,
											"end": 3390,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3354,
											"end": 3390,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 3354,
											"end": 3390,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3420,
											"end": 3428,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3420,
											"end": 3428,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3403,
											"end": 3416,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 3403,
											"end": 3414,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 3403,
											"end": 3416,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3403,
											"end": 3416,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 3403,
											"end": 3416,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3393,
											"end": 3400,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3393,
											"end": 3416,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 3393,
											"end": 3416,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3393,
											"end": 3416,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3393,
											"end": 3416,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 3393,
											"end": 3416,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3393,
											"end": 3416,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 3393,
											"end": 3416,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3392,
											"end": 3428,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 3392,
											"end": 3428,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3392,
											"end": 3428,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3392,
											"end": 3428,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 3392,
											"end": 3428,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3392,
											"end": 3428,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 3392,
											"end": 3428,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3350,
											"end": 3353,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 3350,
											"end": 3429,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3350,
											"end": 3429,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 3350,
											"end": 3429,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3338,
											"end": 3429,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3338,
											"end": 3429,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3234,
											"end": 3440,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 3234,
											"end": 3440,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3470,
											"end": 3471,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3458,
											"end": 3467,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3458,
											"end": 3471,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3450,
											"end": 3512,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 3450,
											"end": 3512,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3450,
											"end": 3512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3450,
											"end": 3512,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3450,
											"end": 3512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3450,
											"end": 3512,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3450,
											"end": 3512,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3450,
											"end": 3512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3450,
											"end": 3512,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3450,
											"end": 3512,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 3450,
											"end": 3512,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3450,
											"end": 3512,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "280"
										},
										{
											"begin": 3450,
											"end": 3512,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3450,
											"end": 3512,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "279"
										},
										{
											"begin": 3450,
											"end": 3512,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3450,
											"end": 3512,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3450,
											"end": 3512,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3450,
											"end": 3512,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3450,
											"end": 3512,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3450,
											"end": 3512,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3450,
											"end": 3512,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3450,
											"end": 3512,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3450,
											"end": 3512,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 3450,
											"end": 3512,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3551,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 3529,
											"end": 3539,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3541,
											"end": 3550,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3528,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 3523,
											"end": 3551,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3523,
											"end": 3551,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "281"
										},
										{
											"begin": 3523,
											"end": 3551,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3574,
											"end": 3581,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3562,
											"end": 3570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 3562,
											"end": 3570,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3562,
											"end": 3581,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3562,
											"end": 3581,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3562,
											"end": 3581,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3562,
											"end": 3581,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 3562,
											"end": 3581,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3562,
											"end": 3581,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3562,
											"end": 3581,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 3562,
											"end": 3581,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3562,
											"end": 3581,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 3562,
											"end": 3581,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3562,
											"end": 3581,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3562,
											"end": 3581,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3562,
											"end": 3581,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3562,
											"end": 3581,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3562,
											"end": 3581,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3562,
											"end": 3581,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3562,
											"end": 3581,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3603,
											"end": 3610,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3591,
											"end": 3599,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 3591,
											"end": 3610,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3591,
											"end": 3610,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3641,
											"end": 3651,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 3626,
											"end": 3681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3626,
											"end": 3681,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3626,
											"end": 3681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "64B83944E79C3CE8D4C297411DE637C3E102D064677AAC0C163976EBDCD6F50E"
										},
										{
											"begin": 3653,
											"end": 3660,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3662,
											"end": 3669,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3671,
											"end": 3680,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 3626,
											"end": 3681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3626,
											"end": 3681,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3626,
											"end": 3681,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 3626,
											"end": 3681,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3626,
											"end": 3681,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3626,
											"end": 3681,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3626,
											"end": 3681,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3626,
											"end": 3681,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 3626,
											"end": 3681,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3626,
											"end": 3681,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 3626,
											"end": 3681,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3626,
											"end": 3681,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3626,
											"end": 3681,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3626,
											"end": 3681,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3626,
											"end": 3681,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3626,
											"end": 3681,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3626,
											"end": 3681,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3626,
											"end": 3681,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "286"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2823,
											"end": 3688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "tag",
											"source": 9,
											"value": "120"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1350,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1318,
											"end": 1350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3679,
											"end": 3683,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3695,
											"end": 3708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 3711,
											"end": 3721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 3711,
											"end": 3723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "tag",
											"source": 2,
											"value": "288"
										},
										{
											"begin": 3711,
											"end": 3723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3695,
											"end": 3723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 3743,
											"end": 3748,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3750,
											"end": 3752,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3754,
											"end": 3759,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3742,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 3733,
											"end": 3760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "tag",
											"source": 2,
											"value": "289"
										},
										{
											"begin": 3733,
											"end": 3760,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3777,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3770,
											"end": 3781,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3610,
											"end": 3788,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 773,
											"end": 793,
											"name": "tag",
											"source": 9,
											"value": "127"
										},
										{
											"begin": 773,
											"end": 793,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 773,
											"end": 793,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 773,
											"end": 793,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 773,
											"end": 793,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 773,
											"end": 793,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 773,
											"end": 793,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 773,
											"end": 793,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 773,
											"end": 793,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 773,
											"end": 793,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 773,
											"end": 793,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 773,
											"end": 793,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 773,
											"end": 793,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 773,
											"end": 793,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 773,
											"end": 793,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 929,
											"end": 963,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 929,
											"end": 963,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 929,
											"end": 963,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 929,
											"end": 963,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 929,
											"end": 963,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 929,
											"end": 963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4970,
											"end": 4988,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 2261,
											"end": 2280,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "tag",
											"source": 1,
											"value": "291"
										},
										{
											"begin": 2261,
											"end": 2282,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5020,
											"end": 5021,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5008,
											"end": 5017,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5008,
											"end": 5021,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5000,
											"end": 5051,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 5000,
											"end": 5051,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5000,
											"end": 5051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5000,
											"end": 5051,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5000,
											"end": 5051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5000,
											"end": 5051,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5000,
											"end": 5051,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5000,
											"end": 5051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5000,
											"end": 5051,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5000,
											"end": 5051,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 5000,
											"end": 5051,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5000,
											"end": 5051,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 5000,
											"end": 5051,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5000,
											"end": 5051,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 5000,
											"end": 5051,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5000,
											"end": 5051,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5000,
											"end": 5051,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5000,
											"end": 5051,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5000,
											"end": 5051,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5000,
											"end": 5051,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5000,
											"end": 5051,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5000,
											"end": 5051,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5000,
											"end": 5051,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 5000,
											"end": 5051,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5074,
											"end": 5117,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 5087,
											"end": 5096,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5098,
											"end": 5106,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 5098,
											"end": 5106,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5108,
											"end": 5116,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 5108,
											"end": 5116,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5074,
											"end": 5086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "47"
										},
										{
											"begin": 5074,
											"end": 5117,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5074,
											"end": 5117,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "295"
										},
										{
											"begin": 5074,
											"end": 5117,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5061,
											"end": 5117,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5061,
											"end": 5117,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5149,
											"end": 5162,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5135,
											"end": 5145,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5135,
											"end": 5162,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5135,
											"end": 5162,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 5127,
											"end": 5198,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5127,
											"end": 5198,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5127,
											"end": 5198,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5198,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5127,
											"end": 5198,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 5127,
											"end": 5198,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5198,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "191"
										},
										{
											"begin": 5127,
											"end": 5198,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5198,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 5127,
											"end": 5198,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5127,
											"end": 5198,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5198,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5198,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5198,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5198,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5198,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5127,
											"end": 5198,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 5127,
											"end": 5198,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5209,
											"end": 5270,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 5233,
											"end": 5243,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5253,
											"end": 5257,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 5260,
											"end": 5269,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5209,
											"end": 5215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5209,
											"end": 5215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5209,
											"end": 5215,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5209,
											"end": 5215,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5209,
											"end": 5215,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5209,
											"end": 5215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5209,
											"end": 5215,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5209,
											"end": 5215,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5209,
											"end": 5215,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5209,
											"end": 5215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5209,
											"end": 5215,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5209,
											"end": 5232,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5209,
											"end": 5232,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5209,
											"end": 5232,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "193"
										},
										{
											"begin": 5209,
											"end": 5232,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5209,
											"end": 5270,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5209,
											"end": 5270,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5209,
											"end": 5270,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5209,
											"end": 5270,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5209,
											"end": 5270,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5209,
											"end": 5270,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5209,
											"end": 5270,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5209,
											"end": 5270,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 5209,
											"end": 5270,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5280,
											"end": 5323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 5300,
											"end": 5310,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5312,
											"end": 5322,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5280,
											"end": 5286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 5280,
											"end": 5286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5280,
											"end": 5286,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5280,
											"end": 5286,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5280,
											"end": 5286,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5280,
											"end": 5286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5280,
											"end": 5286,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5280,
											"end": 5286,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5280,
											"end": 5286,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5280,
											"end": 5286,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5280,
											"end": 5286,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5280,
											"end": 5299,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5280,
											"end": 5299,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5280,
											"end": 5299,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "195"
										},
										{
											"begin": 5280,
											"end": 5299,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5280,
											"end": 5323,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5280,
											"end": 5323,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5280,
											"end": 5323,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5280,
											"end": 5323,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 5280,
											"end": 5323,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5280,
											"end": 5323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5280,
											"end": 5323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 5280,
											"end": 5323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5346,
											"end": 5355,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5334,
											"end": 5342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 5334,
											"end": 5342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5334,
											"end": 5355,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5334,
											"end": 5355,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5334,
											"end": 5355,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5334,
											"end": 5355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 5334,
											"end": 5355,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5334,
											"end": 5355,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5334,
											"end": 5355,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 5334,
											"end": 5355,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5334,
											"end": 5355,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "300"
										},
										{
											"begin": 5334,
											"end": 5355,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5334,
											"end": 5355,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5334,
											"end": 5355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5334,
											"end": 5355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5334,
											"end": 5355,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5334,
											"end": 5355,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5334,
											"end": 5355,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5334,
											"end": 5355,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5377,
											"end": 5387,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 5365,
											"end": 5373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5365,
											"end": 5387,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5387,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5387,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 5365,
											"end": 5387,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5387,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 5365,
											"end": 5387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 5365,
											"end": 5387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5387,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5387,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5387,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5387,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5387,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5387,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5365,
											"end": 5387,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5398,
											"end": 5410,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 5398,
											"end": 5408,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 5398,
											"end": 5410,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5398,
											"end": 5410,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 5398,
											"end": 5410,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5431,
											"end": 5441,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5426,
											"end": 5499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5426,
											"end": 5499,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5426,
											"end": 5499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "53D794B2310B8D186A24AE24A65EE066983A52A6EFA6BD3DF09A7601A3CB4F3"
										},
										{
											"begin": 5443,
											"end": 5452,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5454,
											"end": 5464,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5474,
											"end": 5480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5474,
											"end": 5480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5474,
											"end": 5480,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5474,
											"end": 5480,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5474,
											"end": 5480,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5474,
											"end": 5480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5474,
											"end": 5480,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5474,
											"end": 5480,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5474,
											"end": 5480,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5474,
											"end": 5480,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5474,
											"end": 5480,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5491,
											"end": 5497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 5491,
											"end": 5497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5491,
											"end": 5497,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5491,
											"end": 5497,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5491,
											"end": 5497,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5491,
											"end": 5497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5491,
											"end": 5497,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 5491,
											"end": 5497,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5491,
											"end": 5497,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 5491,
											"end": 5497,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5491,
											"end": 5497,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5426,
											"end": 5499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5426,
											"end": 5499,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5426,
											"end": 5499,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 5426,
											"end": 5499,
											"modifierDepth": 1,
											"name": "SWAP5",
											"source": 9
										},
										{
											"begin": 5426,
											"end": 5499,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 5426,
											"end": 5499,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5426,
											"end": 5499,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5426,
											"end": 5499,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5426,
											"end": 5499,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "201"
										},
										{
											"begin": 5426,
											"end": 5499,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5426,
											"end": 5499,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 5426,
											"end": 5499,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5426,
											"end": 5499,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5426,
											"end": 5499,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5426,
											"end": 5499,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5426,
											"end": 5499,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5426,
											"end": 5499,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5426,
											"end": 5499,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5426,
											"end": 5499,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 2303,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "tag",
											"source": 1,
											"value": "304"
										},
										{
											"begin": 2303,
											"end": 2323,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4878,
											"end": 5506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3926,
											"end": 3933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3963,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3964,
											"end": 3969,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3970,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3971,
											"end": 3978,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3952,
											"end": 3979,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3945,
											"end": 3979,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3846,
											"end": 3986,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1069,
											"end": 1110,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8798,
											"end": 9347,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 8798,
											"end": 9347,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1980,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1981,
											"end": 1991,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1971,
											"end": 1992,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "208"
										},
										{
											"begin": 1963,
											"end": 2026,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8902,
											"end": 8903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8881,
											"end": 8904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8881,
											"end": 8904,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8890,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8904,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8881,
											"end": 8904,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8881,
											"end": 8904,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8873,
											"end": 8938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 8873,
											"end": 8938,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8873,
											"end": 8938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8873,
											"end": 8938,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8873,
											"end": 8938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8873,
											"end": 8938,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8873,
											"end": 8938,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8873,
											"end": 8938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8873,
											"end": 8938,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8873,
											"end": 8938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 8873,
											"end": 8938,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8873,
											"end": 8938,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "212"
										},
										{
											"begin": 8873,
											"end": 8938,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8873,
											"end": 8938,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 8873,
											"end": 8938,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8873,
											"end": 8938,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8873,
											"end": 8938,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8873,
											"end": 8938,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8873,
											"end": 8938,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8873,
											"end": 8938,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8873,
											"end": 8938,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8873,
											"end": 8938,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8873,
											"end": 8938,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 8873,
											"end": 8938,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8956,
											"end": 8965,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 8956,
											"end": 8976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8966,
											"end": 8975,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 8956,
											"end": 8976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8956,
											"end": 8976,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8956,
											"end": 8976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8956,
											"end": 8976,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8956,
											"end": 8976,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8956,
											"end": 8976,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8956,
											"end": 8976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8956,
											"end": 8976,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8956,
											"end": 8976,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8956,
											"end": 8976,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8956,
											"end": 8976,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8956,
											"end": 8976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 8956,
											"end": 8976,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8956,
											"end": 8976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8956,
											"end": 8976,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 8956,
											"end": 8976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 8956,
											"end": 8976,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8956,
											"end": 8976,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 8956,
											"end": 8976,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8956,
											"end": 8976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 8956,
											"end": 8976,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 8956,
											"end": 8976,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8956,
											"end": 8976,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 8956,
											"end": 8976,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 8956,
											"end": 8976,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 8948,
											"end": 9000,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 8948,
											"end": 9000,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 8948,
											"end": 9000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8948,
											"end": 9000,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8948,
											"end": 9000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8948,
											"end": 9000,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 8948,
											"end": 9000,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 8948,
											"end": 9000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 8948,
											"end": 9000,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 8948,
											"end": 9000,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 8948,
											"end": 9000,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8948,
											"end": 9000,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "314"
										},
										{
											"begin": 8948,
											"end": 9000,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 8948,
											"end": 9000,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "313"
										},
										{
											"begin": 8948,
											"end": 9000,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 8948,
											"end": 9000,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 8948,
											"end": 9000,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 8948,
											"end": 9000,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 8948,
											"end": 9000,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 8948,
											"end": 9000,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 8948,
											"end": 9000,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 8948,
											"end": 9000,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 8948,
											"end": 9000,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "312"
										},
										{
											"begin": 8948,
											"end": 9000,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9033,
											"end": 9038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9010,
											"end": 9019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 9010,
											"end": 9030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9020,
											"end": 9029,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9010,
											"end": 9030,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9010,
											"end": 9030,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9030,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9030,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9010,
											"end": 9030,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9030,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9030,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9030,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9010,
											"end": 9030,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9010,
											"end": 9030,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9030,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9010,
											"end": 9038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9010,
											"end": 9038,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9038,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9038,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9038,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9038,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 9010,
											"end": 9038,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9038,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9038,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9038,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9038,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9038,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9038,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9038,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9038,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9038,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9038,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9010,
											"end": 9038,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9053,
											"end": 9059,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9048,
											"end": 9300,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 9048,
											"end": 9300,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9069,
											"end": 9081,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 9069,
											"end": 9088,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9069,
											"end": 9088,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9069,
											"end": 9088,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9069,
											"end": 9088,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9065,
											"end": 9066,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9065,
											"end": 9088,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9048,
											"end": 9300,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9048,
											"end": 9300,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 9048,
											"end": 9300,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9132,
											"end": 9141,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9113,
											"end": 9141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9113,
											"end": 9141,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9113,
											"end": 9125,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 9126,
											"end": 9127,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 9113,
											"end": 9128,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "319"
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "318"
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9113,
											"end": 9128,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9113,
											"end": 9141,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9113,
											"end": 9141,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9113,
											"end": 9141,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 9109,
											"end": 9290,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 9214,
											"end": 9215,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9192,
											"end": 9204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 9192,
											"end": 9211,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9192,
											"end": 9211,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9192,
											"end": 9211,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9192,
											"end": 9211,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9192,
											"end": 9215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 9192,
											"end": 9215,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9192,
											"end": 9215,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9192,
											"end": 9215,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "152"
										},
										{
											"begin": 9192,
											"end": 9215,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9192,
											"end": 9215,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 9192,
											"end": 9215,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 9179,
											"end": 9216,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "325"
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9179,
											"end": 9216,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9173,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 9174,
											"end": 9175,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9176,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9176,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9176,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9176,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9176,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 9161,
											"end": 9176,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9176,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 9161,
											"end": 9176,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "320"
										},
										{
											"begin": 9161,
											"end": 9176,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9176,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "328"
										},
										{
											"begin": 9161,
											"end": 9176,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9176,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 9161,
											"end": 9176,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9176,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9176,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9161,
											"end": 9176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9176,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9176,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9176,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9161,
											"end": 9216,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9216,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9216,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9216,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9216,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9216,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9216,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9216,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9216,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9216,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9161,
											"end": 9216,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9216,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9216,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9216,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9216,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9161,
											"end": 9216,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9246,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "332"
										},
										{
											"begin": 9234,
											"end": 9252,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "331"
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "330"
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9234,
											"end": 9252,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 9270,
											"end": 9275,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 9270,
											"end": 9275,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9109,
											"end": 9290,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 9109,
											"end": 9290,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9090,
											"end": 9093,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9090,
											"end": 9093,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9090,
											"end": 9093,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9090,
											"end": 9093,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 9090,
											"end": 9093,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9090,
											"end": 9093,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9090,
											"end": 9093,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9048,
											"end": 9300,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 9048,
											"end": 9300,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9048,
											"end": 9300,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 9048,
											"end": 9300,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9048,
											"end": 9300,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9330,
											"end": 9339,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9314,
											"end": 9340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9314,
											"end": 9340,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 9314,
											"end": 9340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1EBE834E73D60A5FEC822C1E1727D34BC79F2AD977ED504581CC1822FE20FB5B"
										},
										{
											"begin": 9314,
											"end": 9340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9314,
											"end": 9340,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9314,
											"end": 9340,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 9314,
											"end": 9340,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 9314,
											"end": 9340,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9314,
											"end": 9340,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9314,
											"end": 9340,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 9314,
											"end": 9340,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9314,
											"end": 9340,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 8798,
											"end": 9347,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 8798,
											"end": 9347,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "171"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 9082,
											"end": 9087,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9089,
											"end": 9096,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9098,
											"end": 9103,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 9105,
											"end": 9109,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 9073,
											"end": 9081,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 9073,
											"end": 9110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "tag",
											"source": 2,
											"value": "336"
										},
										{
											"begin": 9073,
											"end": 9110,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8989,
											"end": 9117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "tag",
											"source": 2,
											"value": "178"
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10786,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 10799,
											"end": 10804,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10806,
											"end": 10813,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10798,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 10789,
											"end": 10814,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "tag",
											"source": 2,
											"value": "339"
										},
										{
											"begin": 10789,
											"end": 10814,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10762,
											"end": 10814,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10848,
											"end": 10865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10828,
											"end": 10844,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10828,
											"end": 10865,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10904,
											"end": 10909,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10901,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10885,
											"end": 10909,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10963,
											"end": 10970,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10972,
											"end": 10988,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10990,
											"end": 10995,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 10936,
											"end": 10996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "tag",
											"source": 2,
											"value": "342"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10936,
											"end": 10996,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "tag",
											"source": 2,
											"value": "341"
										},
										{
											"begin": 10881,
											"end": 11011,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 11061,
											"end": 11066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11068,
											"end": 11075,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11096,
											"end": 11101,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11093,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 11077,
											"end": 11101,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11103,
											"end": 11108,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11052,
											"end": 11060,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 11052,
											"end": 11109,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "tag",
											"source": 2,
											"value": "344"
										},
										{
											"begin": 11052,
											"end": 11109,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "tag",
											"source": 2,
											"value": "340"
										},
										{
											"begin": 10824,
											"end": 11134,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10752,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10663,
											"end": 11140,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5755,
											"end": 5756,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5743,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5739,
											"end": 5757,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5807,
											"end": 5808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5780,
											"end": 5810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "tag",
											"source": 2,
											"value": "347"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5780,
											"end": 5810,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "tag",
											"source": 2,
											"value": "346"
										},
										{
											"begin": 5735,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5848,
											"end": 5849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5834,
											"end": 5850,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5902,
											"end": 5903,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 5873,
											"end": 5905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "tag",
											"source": 2,
											"value": "349"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5873,
											"end": 5905,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "tag",
											"source": 2,
											"value": "348"
										},
										{
											"begin": 5830,
											"end": 5916,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 5933,
											"end": 5937,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5939,
											"end": 5941,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5943,
											"end": 5948,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5932,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 5925,
											"end": 5949,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "tag",
											"source": 2,
											"value": "350"
										},
										{
											"begin": 5925,
											"end": 5949,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 5656,
											"end": 5956,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 6,
											"value": "23B872DD"
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "359"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 6,
											"value": "358"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 6,
											"value": "357"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 6,
											"value": "195"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 6,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "364"
										},
										{
											"begin": 1412,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 6,
											"value": "363"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 6,
											"value": "362"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7532,
											"end": 7855,
											"name": "tag",
											"source": 9,
											"value": "199"
										},
										{
											"begin": 7532,
											"end": 7855,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7616,
											"end": 7628,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 7616,
											"end": 7628,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7596,
											"end": 7613,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 7596,
											"end": 7613,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7596,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 7596,
											"end": 7628,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7596,
											"end": 7628,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7596,
											"end": 7628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 7596,
											"end": 7628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7596,
											"end": 7628,
											"name": "tag",
											"source": 9,
											"value": "366"
										},
										{
											"begin": 7596,
											"end": 7628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7577,
											"end": 7592,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 7577,
											"end": 7628,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 7573,
											"end": 7849,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 7573,
											"end": 7849,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 7661,
											"end": 7669,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 7661,
											"end": 7669,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 7658,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 7644,
											"end": 7669,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 7669,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 7669,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7644,
											"end": 7669,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7700,
											"end": 7708,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 7700,
											"end": 7708,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7683,
											"end": 7697,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 7683,
											"end": 7708,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7683,
											"end": 7708,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7683,
											"end": 7708,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7683,
											"end": 7708,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7742,
											"end": 7757,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 7722,
											"end": 7739,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 7722,
											"end": 7757,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7722,
											"end": 7757,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7722,
											"end": 7757,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 7722,
											"end": 7757,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7776,
											"end": 7838,
											"name": "PUSH",
											"source": 9,
											"value": "9CFE07A59EBB9A772E1FEE2ABD40B53001DE7C2F0B2E713DE333F564118C32C4"
										},
										{
											"begin": 7788,
											"end": 7802,
											"name": "PUSH",
											"source": 9,
											"value": "E"
										},
										{
											"begin": 7788,
											"end": 7802,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7804,
											"end": 7818,
											"name": "PUSH",
											"source": 9,
											"value": "F"
										},
										{
											"begin": 7804,
											"end": 7818,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7820,
											"end": 7837,
											"name": "PUSH",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 7820,
											"end": 7837,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 7776,
											"end": 7838,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7776,
											"end": 7838,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7776,
											"end": 7838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 7776,
											"end": 7838,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 7776,
											"end": 7838,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 7776,
											"end": 7838,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7776,
											"end": 7838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7776,
											"end": 7838,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 7776,
											"end": 7838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7776,
											"end": 7838,
											"name": "tag",
											"source": 9,
											"value": "368"
										},
										{
											"begin": 7776,
											"end": 7838,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7776,
											"end": 7838,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 7776,
											"end": 7838,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 7776,
											"end": 7838,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7776,
											"end": 7838,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 7776,
											"end": 7838,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7776,
											"end": 7838,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7776,
											"end": 7838,
											"name": "LOG1",
											"source": 9
										},
										{
											"begin": 7573,
											"end": 7849,
											"name": "tag",
											"source": 9,
											"value": "367"
										},
										{
											"begin": 7573,
											"end": 7849,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 7532,
											"end": 7855,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 1,
											"value": "203"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "tag",
											"source": 2,
											"value": "244"
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8336,
											"end": 8337,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8317,
											"end": 8338,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8388,
											"end": 8389,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 8361,
											"end": 8391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "tag",
											"source": 2,
											"value": "372"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8361,
											"end": 8391,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "tag",
											"source": 2,
											"value": "371"
										},
										{
											"begin": 8313,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 8419,
											"end": 8426,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8436,
											"end": 8437,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8440,
											"end": 8445,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8418,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 8411,
											"end": 8446,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "tag",
											"source": 2,
											"value": "373"
										},
										{
											"begin": 8411,
											"end": 8446,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8247,
											"end": 8453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9544,
											"end": 9845,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 9544,
											"end": 9845,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9592,
											"end": 9601,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9621,
											"end": 9622,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 9617,
											"end": 9618,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9617,
											"end": 9622,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 9613,
											"end": 9839,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9613,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 9613,
											"end": 9839,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9642,
											"end": 9643,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9638,
											"end": 9643,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9638,
											"end": 9643,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9657,
											"end": 9666,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9677,
											"end": 9678,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9673,
											"end": 9674,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9669,
											"end": 9670,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 9669,
											"end": 9674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 9669,
											"end": 9674,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9669,
											"end": 9674,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9669,
											"end": 9674,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 9669,
											"end": 9674,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9669,
											"end": 9674,
											"name": "tag",
											"source": 9,
											"value": "376"
										},
										{
											"begin": 9669,
											"end": 9674,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9669,
											"end": 9678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 9669,
											"end": 9678,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9669,
											"end": 9678,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9669,
											"end": 9678,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 9669,
											"end": 9678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9669,
											"end": 9678,
											"name": "tag",
											"source": 9,
											"value": "377"
										},
										{
											"begin": 9669,
											"end": 9678,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9657,
											"end": 9678,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9657,
											"end": 9678,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9692,
											"end": 9781,
											"name": "tag",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 9692,
											"end": 9781,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9703,
											"end": 9704,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9699,
											"end": 9700,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9699,
											"end": 9704,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 9692,
											"end": 9781,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 9692,
											"end": 9781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 9692,
											"end": 9781,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9728,
											"end": 9729,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 9724,
											"end": 9729,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9724,
											"end": 9729,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9765,
											"end": 9766,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 9760,
											"end": 9761,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 9756,
											"end": 9757,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9752,
											"end": 9753,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 9752,
											"end": 9757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 9752,
											"end": 9757,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9752,
											"end": 9757,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9752,
											"end": 9757,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 9752,
											"end": 9757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9752,
											"end": 9757,
											"name": "tag",
											"source": 9,
											"value": "380"
										},
										{
											"begin": 9752,
											"end": 9757,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9752,
											"end": 9761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 9752,
											"end": 9761,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9752,
											"end": 9761,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9752,
											"end": 9761,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 9752,
											"end": 9761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9752,
											"end": 9761,
											"name": "tag",
											"source": 9,
											"value": "381"
										},
										{
											"begin": 9752,
											"end": 9761,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9751,
											"end": 9766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 9751,
											"end": 9766,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9751,
											"end": 9766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9751,
											"end": 9766,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "160"
										},
										{
											"begin": 9751,
											"end": 9766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9751,
											"end": 9766,
											"name": "tag",
											"source": 9,
											"value": "382"
										},
										{
											"begin": 9751,
											"end": 9766,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9747,
											"end": 9766,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9747,
											"end": 9766,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9692,
											"end": 9781,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "378"
										},
										{
											"begin": 9692,
											"end": 9781,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9692,
											"end": 9781,
											"name": "tag",
											"source": 9,
											"value": "379"
										},
										{
											"begin": 9692,
											"end": 9781,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9624,
											"end": 9791,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9613,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 9613,
											"end": 9839,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 9613,
											"end": 9839,
											"name": "tag",
											"source": 9,
											"value": "375"
										},
										{
											"begin": 9613,
											"end": 9839,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9806,
											"end": 9807,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 9801,
											"end": 9802,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 9801,
											"end": 9807,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 9797,
											"end": 9839,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 9797,
											"end": 9839,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 9827,
											"end": 9828,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 9823,
											"end": 9828,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9823,
											"end": 9828,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9797,
											"end": 9839,
											"name": "tag",
											"source": 9,
											"value": "384"
										},
										{
											"begin": 9797,
											"end": 9839,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9613,
											"end": 9839,
											"name": "tag",
											"source": 9,
											"value": "383"
										},
										{
											"begin": 9613,
											"end": 9839,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 9544,
											"end": 9845,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 9544,
											"end": 9845,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 9544,
											"end": 9845,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 9544,
											"end": 9845,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10034,
											"end": 10138,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 10034,
											"end": 10138,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10092,
											"end": 10099,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 10122,
											"end": 10123,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10118,
											"end": 10119,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 10118,
											"end": 10123,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 10118,
											"end": 10131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 10118,
											"end": 10131,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 10130,
											"end": 10131,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 10118,
											"end": 10131,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 10118,
											"end": 10131,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 10118,
											"end": 10131,
											"name": "tag",
											"source": 9,
											"value": "386"
										},
										{
											"begin": 10118,
											"end": 10131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10126,
											"end": 10127,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 10118,
											"end": 10131,
											"name": "tag",
											"source": 9,
											"value": "387"
										},
										{
											"begin": 10118,
											"end": 10131,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 10111,
											"end": 10131,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 10111,
											"end": 10131,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10034,
											"end": 10138,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 10034,
											"end": 10138,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 10034,
											"end": 10138,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10034,
											"end": 10138,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 10034,
											"end": 10138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7810,
											"end": 7811,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7798,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7791,
											"end": 7812,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "389"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7864,
											"end": 7865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "390"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 7835,
											"end": 7867,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "tag",
											"source": 2,
											"value": "390"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7835,
											"end": 7867,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "tag",
											"source": 2,
											"value": "389"
										},
										{
											"begin": 7787,
											"end": 7878,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "391"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7907,
											"end": 7914,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7916,
											"end": 7921,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7894,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 7887,
											"end": 7922,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "tag",
											"source": 2,
											"value": "391"
										},
										{
											"begin": 7887,
											"end": 7922,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7721,
											"end": 7929,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "tag",
											"source": 2,
											"value": "337"
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10078,
											"end": 10079,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10066,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10080,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "393"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10133,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 10103,
											"end": 10135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "tag",
											"source": 2,
											"value": "394"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10103,
											"end": 10135,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "tag",
											"source": 2,
											"value": "393"
										},
										{
											"begin": 10057,
											"end": 10146,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10178,
											"end": 10179,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10166,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10180,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10231,
											"end": 10232,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "396"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 10203,
											"end": 10234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "tag",
											"source": 2,
											"value": "396"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10203,
											"end": 10234,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "tag",
											"source": 2,
											"value": "395"
										},
										{
											"begin": 10155,
											"end": 10245,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10284,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10265,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10266,
											"end": 10271,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10272,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10273,
											"end": 10280,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10254,
											"end": 10281,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 10254,
											"end": 10289,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10303,
											"end": 10312,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10349,
											"end": 10356,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10358,
											"end": 10363,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 10333,
											"end": 10364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "tag",
											"source": 2,
											"value": "398"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10333,
											"end": 10364,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "tag",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 10299,
											"end": 10375,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 9949,
											"end": 10381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "tag",
											"source": 2,
											"value": "351"
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6376,
											"end": 6377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6364,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6360,
											"end": 6378,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6512,
											"end": 6517,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 6496,
											"end": 6508,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "401"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "158"
										},
										{
											"begin": 6496,
											"end": 6517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "tag",
											"source": 2,
											"value": "401"
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6496,
											"end": 6517,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "400"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6567,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6579,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6584,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6570,
											"end": 6585,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6548,
											"end": 6585,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6617,
											"end": 6622,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6614,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6603,
											"end": 6622,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6674,
											"end": 6678,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6680,
											"end": 6691,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6693,
											"end": 6698,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "343"
										},
										{
											"begin": 6649,
											"end": 6699,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "tag",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6649,
											"end": 6699,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "tag",
											"source": 2,
											"value": "403"
										},
										{
											"begin": 6599,
											"end": 6714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6866,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6863,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6852,
											"end": 6871,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6843,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6844,
											"end": 6848,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6834,
											"end": 6849,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 6834,
											"end": 6871,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6534,
											"end": 6896,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "tag",
											"source": 2,
											"value": "402"
										},
										{
											"begin": 6356,
											"end": 6896,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6924,
											"end": 6925,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6912,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6910,
											"end": 6926,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7089,
											"end": 7094,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 7073,
											"end": 7085,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7073,
											"end": 7094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "406"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7301,
											"end": 7306,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7293,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7297,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 7284,
											"end": 7306,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "tag",
											"source": 2,
											"value": "406"
										},
										{
											"begin": 6906,
											"end": 7331,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7361,
											"end": 7363,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7355,
											"end": 7359,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7365,
											"end": 7370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "407"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 7346,
											"end": 7371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "tag",
											"source": 2,
											"value": "407"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7346,
											"end": 7371,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6271,
											"end": 7378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "410"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 6,
											"value": "409"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "413"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 6,
											"value": "412"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 6,
											"value": "411"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 6,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 6,
											"value": "415"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 6,
											"value": "414"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 7,
											"value": "410"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 7,
											"value": "417"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 7,
											"value": "418"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 7
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 7,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 7,
											"value": "421"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 7,
											"value": "420"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "423"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 7,
											"value": "422"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 7,
											"value": "426"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 7,
											"value": "425"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 7
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 7,
											"value": "427"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 7,
											"value": "428"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 7,
											"value": "431"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 7,
											"value": "430"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 7
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 7,
											"value": "434"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 7,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "43"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 7,
											"value": "436"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 7,
											"value": "435"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 7,
											"value": "433"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 7,
											"value": "429"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 7,
											"value": "432"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 7
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 7,
											"value": "438"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 7,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 10,
											"value": "503"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "444"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 10,
											"value": "508"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 10,
											"value": "507"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "tag",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1062,
											"end": 1069,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1102,
											"end": 1144,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1095,
											"end": 1100,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1091,
											"end": 1145,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1080,
											"end": 1145,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1151,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1025,
											"end": 1151,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1194,
											"end": 1201,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 1241,
											"end": 1246,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 1223,
											"end": 1247,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "tag",
											"source": 10,
											"value": "512"
										},
										{
											"begin": 1223,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1212,
											"end": 1247,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1157,
											"end": 1253,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1157,
											"end": 1253,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "tag",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 1346,
											"end": 1370,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "tag",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 1346,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1341,
											"end": 1344,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1334,
											"end": 1371,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1377,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1259,
											"end": 1377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "tag",
											"source": 10,
											"value": "43"
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1476,
											"end": 1480,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1514,
											"end": 1516,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1503,
											"end": 1512,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1499,
											"end": 1517,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1491,
											"end": 1517,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 1595,
											"end": 1596,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1593,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1580,
											"end": 1597,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 1527,
											"end": 1598,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "tag",
											"source": 10,
											"value": "516"
										},
										{
											"begin": 1527,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1383,
											"end": 1605,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 2230,
											"name": "tag",
											"source": 10,
											"value": "46"
										},
										{
											"begin": 1611,
											"end": 2230,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1688,
											"end": 1694,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1696,
											"end": 1702,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1704,
											"end": 1710,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1755,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 1741,
											"end": 1750,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1732,
											"end": 1739,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1728,
											"end": 1751,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1724,
											"end": 1756,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 1721,
											"end": 1840,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 1721,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 1721,
											"end": 1840,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 1759,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 1759,
											"end": 1838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1759,
											"end": 1838,
											"name": "tag",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 1759,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1721,
											"end": 1840,
											"name": "tag",
											"source": 10,
											"value": "518"
										},
										{
											"begin": 1721,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1879,
											"end": 1880,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1904,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 1940,
											"end": 1946,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1929,
											"end": 1938,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 1925,
											"end": 1947,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1957,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 1904,
											"end": 1957,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1904,
											"end": 1957,
											"name": "tag",
											"source": 10,
											"value": "520"
										},
										{
											"begin": 1904,
											"end": 1957,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1894,
											"end": 1957,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 1894,
											"end": 1957,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1850,
											"end": 1967,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2006,
											"end": 2008,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2032,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 2077,
											"end": 2084,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2068,
											"end": 2074,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2057,
											"end": 2066,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2053,
											"end": 2075,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2085,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 2032,
											"end": 2085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2032,
											"end": 2085,
											"name": "tag",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 2032,
											"end": 2085,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2022,
											"end": 2085,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2022,
											"end": 2085,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1977,
											"end": 2095,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2134,
											"end": 2136,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 2205,
											"end": 2212,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2196,
											"end": 2202,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2185,
											"end": 2194,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 2181,
											"end": 2203,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 2160,
											"end": 2213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "tag",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 2160,
											"end": 2213,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2150,
											"end": 2213,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2105,
											"end": 2223,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 2230,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 2230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 2230,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 2230,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 2230,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1611,
											"end": 2230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2354,
											"name": "tag",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 2236,
											"end": 2354,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2323,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2323,
											"end": 2347,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 2323,
											"end": 2347,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2323,
											"end": 2347,
											"name": "tag",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 2323,
											"end": 2347,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2318,
											"end": 2321,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2311,
											"end": 2348,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2236,
											"end": 2354,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2360,
											"end": 2582,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 2360,
											"end": 2582,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2453,
											"end": 2457,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2491,
											"end": 2493,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2480,
											"end": 2489,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2476,
											"end": 2494,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2468,
											"end": 2494,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2468,
											"end": 2494,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2504,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 2572,
											"end": 2573,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2561,
											"end": 2570,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2557,
											"end": 2574,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2548,
											"end": 2554,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 2504,
											"end": 2575,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 2504,
											"end": 2575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2504,
											"end": 2575,
											"name": "tag",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 2504,
											"end": 2575,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2360,
											"end": 2582,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2360,
											"end": 2582,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2360,
											"end": 2582,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2360,
											"end": 2582,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2360,
											"end": 2582,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2687,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 2588,
											"end": 2687,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2640,
											"end": 2646,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2674,
											"end": 2679,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2668,
											"end": 2680,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2680,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2658,
											"end": 2680,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2687,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2687,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2687,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2588,
											"end": 2687,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2693,
											"end": 2862,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 2693,
											"end": 2862,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2777,
											"end": 2788,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2817,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2806,
											"end": 2809,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2799,
											"end": 2818,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2855,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2846,
											"end": 2849,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2842,
											"end": 2856,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2827,
											"end": 2856,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2827,
											"end": 2856,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2693,
											"end": 2862,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2693,
											"end": 2862,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2693,
											"end": 2862,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2693,
											"end": 2862,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2693,
											"end": 2862,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 3007,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 2868,
											"end": 3007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2957,
											"end": 2963,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2952,
											"end": 2955,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2947,
											"end": 2950,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2941,
											"end": 2964,
											"name": "MCOPY",
											"source": 10
										},
										{
											"begin": 2998,
											"end": 2999,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2995,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2984,
											"end": 2987,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2980,
											"end": 2996,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2973,
											"end": 3000,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 3007,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 3007,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 3007,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2868,
											"end": 3007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3013,
											"end": 3115,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 3013,
											"end": 3115,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3054,
											"end": 3060,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3107,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3101,
											"end": 3108,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 3096,
											"end": 3098,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 3089,
											"end": 3094,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3085,
											"end": 3099,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3081,
											"end": 3109,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3109,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3013,
											"end": 3115,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3013,
											"end": 3115,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3013,
											"end": 3115,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3013,
											"end": 3115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3121,
											"end": 3498,
											"name": "tag",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 3121,
											"end": 3498,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3209,
											"end": 3212,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3237,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 3270,
											"end": 3275,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3237,
											"end": 3276,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 3237,
											"end": 3276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3237,
											"end": 3276,
											"name": "tag",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 3237,
											"end": 3276,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 3356,
											"end": 3362,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3351,
											"end": 3354,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3363,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 3292,
											"end": 3363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3292,
											"end": 3363,
											"name": "tag",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 3292,
											"end": 3363,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3363,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3285,
											"end": 3363,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3372,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 3430,
											"end": 3436,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3425,
											"end": 3428,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3418,
											"end": 3422,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3411,
											"end": 3416,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 3407,
											"end": 3423,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3372,
											"end": 3437,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 3372,
											"end": 3437,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3372,
											"end": 3437,
											"name": "tag",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 3372,
											"end": 3437,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 3484,
											"end": 3490,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 3462,
											"end": 3491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3462,
											"end": 3491,
											"name": "tag",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 3462,
											"end": 3491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3457,
											"end": 3460,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3453,
											"end": 3492,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3492,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3492,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3213,
											"end": 3498,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3121,
											"end": 3498,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3121,
											"end": 3498,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3121,
											"end": 3498,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3121,
											"end": 3498,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3121,
											"end": 3498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3504,
											"end": 3817,
											"name": "tag",
											"source": 10,
											"value": "53"
										},
										{
											"begin": 3504,
											"end": 3817,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3617,
											"end": 3621,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3655,
											"end": 3657,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3644,
											"end": 3653,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3640,
											"end": 3658,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3632,
											"end": 3658,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3632,
											"end": 3658,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3704,
											"end": 3713,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3698,
											"end": 3702,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3694,
											"end": 3714,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3690,
											"end": 3691,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3679,
											"end": 3688,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3675,
											"end": 3692,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3668,
											"end": 3715,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 3805,
											"end": 3809,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3796,
											"end": 3802,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "454"
										},
										{
											"begin": 3732,
											"end": 3810,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "tag",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 3732,
											"end": 3810,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3724,
											"end": 3810,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3724,
											"end": 3810,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3504,
											"end": 3817,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3504,
											"end": 3817,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3504,
											"end": 3817,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3504,
											"end": 3817,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3504,
											"end": 3817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3823,
											"end": 4155,
											"name": "tag",
											"source": 10,
											"value": "57"
										},
										{
											"begin": 3823,
											"end": 4155,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3944,
											"end": 3948,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3982,
											"end": 3984,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3971,
											"end": 3980,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3967,
											"end": 3985,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3959,
											"end": 3985,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3959,
											"end": 3985,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3995,
											"end": 4066,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 4063,
											"end": 4064,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4052,
											"end": 4061,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4048,
											"end": 4065,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4039,
											"end": 4045,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3995,
											"end": 4066,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 3995,
											"end": 4066,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3995,
											"end": 4066,
											"name": "tag",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 3995,
											"end": 4066,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 4144,
											"end": 4146,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4133,
											"end": 4142,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4129,
											"end": 4147,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4120,
											"end": 4126,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4148,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 4076,
											"end": 4148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4076,
											"end": 4148,
											"name": "tag",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 4076,
											"end": 4148,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3823,
											"end": 4155,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 3823,
											"end": 4155,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3823,
											"end": 4155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3823,
											"end": 4155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3823,
											"end": 4155,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3823,
											"end": 4155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4161,
											"end": 4283,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 4161,
											"end": 4283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4234,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 4252,
											"end": 4257,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4234,
											"end": 4258,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 4234,
											"end": 4258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4234,
											"end": 4258,
											"name": "tag",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 4234,
											"end": 4258,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4227,
											"end": 4232,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4224,
											"end": 4259,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4214,
											"end": 4277,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 4214,
											"end": 4277,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4273,
											"end": 4274,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4270,
											"end": 4271,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4263,
											"end": 4275,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 4214,
											"end": 4277,
											"name": "tag",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 4214,
											"end": 4277,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4161,
											"end": 4283,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4161,
											"end": 4283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4289,
											"end": 4428,
											"name": "tag",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 4289,
											"end": 4428,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4335,
											"end": 4340,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4373,
											"end": 4379,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4360,
											"end": 4380,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 4351,
											"end": 4380,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4351,
											"end": 4380,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 4416,
											"end": 4421,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4422,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 4389,
											"end": 4422,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4389,
											"end": 4422,
											"name": "tag",
											"source": 10,
											"value": "545"
										},
										{
											"begin": 4389,
											"end": 4422,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4289,
											"end": 4428,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4289,
											"end": 4428,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4289,
											"end": 4428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4289,
											"end": 4428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4289,
											"end": 4428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 4908,
											"name": "tag",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4434,
											"end": 4908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4502,
											"end": 4508,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4510,
											"end": 4516,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4559,
											"end": 4561,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4547,
											"end": 4556,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4538,
											"end": 4545,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4534,
											"end": 4557,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4530,
											"end": 4562,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4527,
											"end": 4646,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4527,
											"end": 4646,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 4527,
											"end": 4646,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4565,
											"end": 4644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 4565,
											"end": 4644,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 4565,
											"end": 4644,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4565,
											"end": 4644,
											"name": "tag",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 4565,
											"end": 4644,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4527,
											"end": 4646,
											"name": "tag",
											"source": 10,
											"value": "547"
										},
										{
											"begin": 4527,
											"end": 4646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4685,
											"end": 4686,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4710,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 4755,
											"end": 4762,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4746,
											"end": 4752,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4735,
											"end": 4744,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4731,
											"end": 4753,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4710,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 4710,
											"end": 4763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4710,
											"end": 4763,
											"name": "tag",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 4710,
											"end": 4763,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4700,
											"end": 4763,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4700,
											"end": 4763,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4656,
											"end": 4773,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4812,
											"end": 4814,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4838,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 4883,
											"end": 4890,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4874,
											"end": 4880,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4863,
											"end": 4872,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4859,
											"end": 4881,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4838,
											"end": 4891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 4838,
											"end": 4891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4838,
											"end": 4891,
											"name": "tag",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 4838,
											"end": 4891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4828,
											"end": 4891,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4828,
											"end": 4891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4783,
											"end": 4901,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 4908,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 4908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 4908,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 4908,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 4908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4434,
											"end": 4908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4914,
											"end": 5004,
											"name": "tag",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 4914,
											"end": 5004,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4948,
											"end": 4955,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4991,
											"end": 4996,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4984,
											"end": 4997,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4977,
											"end": 4998,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4966,
											"end": 4998,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4966,
											"end": 4998,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4914,
											"end": 5004,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4914,
											"end": 5004,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4914,
											"end": 5004,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4914,
											"end": 5004,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5010,
											"end": 5119,
											"name": "tag",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 5010,
											"end": 5119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5091,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 5106,
											"end": 5111,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5091,
											"end": 5112,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 5091,
											"end": 5112,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5091,
											"end": 5112,
											"name": "tag",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 5091,
											"end": 5112,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5086,
											"end": 5089,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5079,
											"end": 5113,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5010,
											"end": 5119,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5010,
											"end": 5119,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5010,
											"end": 5119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5125,
											"end": 5335,
											"name": "tag",
											"source": 10,
											"value": "63"
										},
										{
											"begin": 5125,
											"end": 5335,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5212,
											"end": 5216,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5250,
											"end": 5252,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5239,
											"end": 5248,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5235,
											"end": 5253,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5227,
											"end": 5253,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5227,
											"end": 5253,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5263,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 5325,
											"end": 5326,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5314,
											"end": 5323,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5310,
											"end": 5327,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5301,
											"end": 5307,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5263,
											"end": 5328,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "458"
										},
										{
											"begin": 5263,
											"end": 5328,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5263,
											"end": 5328,
											"name": "tag",
											"source": 10,
											"value": "555"
										},
										{
											"begin": 5263,
											"end": 5328,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5125,
											"end": 5335,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5125,
											"end": 5335,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5125,
											"end": 5335,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5125,
											"end": 5335,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5125,
											"end": 5335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5341,
											"end": 5401,
											"name": "tag",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 5341,
											"end": 5401,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5369,
											"end": 5372,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5390,
											"end": 5395,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5383,
											"end": 5395,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5383,
											"end": 5395,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5341,
											"end": 5401,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5341,
											"end": 5401,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5341,
											"end": 5401,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5341,
											"end": 5401,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5407,
											"end": 5549,
											"name": "tag",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 5407,
											"end": 5549,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5457,
											"end": 5466,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5490,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 5508,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 5517,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 5535,
											"end": 5540,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5517,
											"end": 5541,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 5517,
											"end": 5541,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5517,
											"end": 5541,
											"name": "tag",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 5517,
											"end": 5541,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5508,
											"end": 5542,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "459"
										},
										{
											"begin": 5508,
											"end": 5542,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5508,
											"end": 5542,
											"name": "tag",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 5508,
											"end": 5542,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5490,
											"end": 5543,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "446"
										},
										{
											"begin": 5490,
											"end": 5543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5490,
											"end": 5543,
											"name": "tag",
											"source": 10,
											"value": "558"
										},
										{
											"begin": 5490,
											"end": 5543,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5477,
											"end": 5543,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5477,
											"end": 5543,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5407,
											"end": 5549,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5407,
											"end": 5549,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5407,
											"end": 5549,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5407,
											"end": 5549,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5555,
											"end": 5681,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 5555,
											"end": 5681,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5605,
											"end": 5614,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5638,
											"end": 5675,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "562"
										},
										{
											"begin": 5669,
											"end": 5674,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 5675,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "460"
										},
										{
											"begin": 5638,
											"end": 5675,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5638,
											"end": 5675,
											"name": "tag",
											"source": 10,
											"value": "562"
										},
										{
											"begin": 5638,
											"end": 5675,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5625,
											"end": 5675,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5625,
											"end": 5675,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5555,
											"end": 5681,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5555,
											"end": 5681,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5555,
											"end": 5681,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5555,
											"end": 5681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5687,
											"end": 5827,
											"name": "tag",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 5687,
											"end": 5827,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5751,
											"end": 5760,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5784,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 5815,
											"end": 5820,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5784,
											"end": 5821,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 5784,
											"end": 5821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5784,
											"end": 5821,
											"name": "tag",
											"source": 10,
											"value": "564"
										},
										{
											"begin": 5784,
											"end": 5821,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5771,
											"end": 5821,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5771,
											"end": 5821,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5687,
											"end": 5827,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5687,
											"end": 5827,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5687,
											"end": 5827,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5687,
											"end": 5827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5833,
											"end": 5992,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 5833,
											"end": 5992,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5934,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 5979,
											"end": 5984,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5934,
											"end": 5985,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "462"
										},
										{
											"begin": 5934,
											"end": 5985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5934,
											"end": 5985,
											"name": "tag",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 5934,
											"end": 5985,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5929,
											"end": 5932,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5922,
											"end": 5986,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5833,
											"end": 5992,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5833,
											"end": 5992,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5833,
											"end": 5992,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5998,
											"end": 6248,
											"name": "tag",
											"source": 10,
											"value": "73"
										},
										{
											"begin": 5998,
											"end": 6248,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6105,
											"end": 6109,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6143,
											"end": 6145,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6132,
											"end": 6141,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6128,
											"end": 6146,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6120,
											"end": 6146,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6120,
											"end": 6146,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6156,
											"end": 6241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 6238,
											"end": 6239,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6227,
											"end": 6236,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6223,
											"end": 6240,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6214,
											"end": 6220,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6156,
											"end": 6241,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 6156,
											"end": 6241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6156,
											"end": 6241,
											"name": "tag",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 6156,
											"end": 6241,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5998,
											"end": 6248,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5998,
											"end": 6248,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5998,
											"end": 6248,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5998,
											"end": 6248,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5998,
											"end": 6248,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6254,
											"end": 6873,
											"name": "tag",
											"source": 10,
											"value": "79"
										},
										{
											"begin": 6254,
											"end": 6873,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6331,
											"end": 6337,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6339,
											"end": 6345,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6347,
											"end": 6353,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6396,
											"end": 6398,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 6384,
											"end": 6393,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6375,
											"end": 6382,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6371,
											"end": 6394,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6367,
											"end": 6399,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6364,
											"end": 6483,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6364,
											"end": 6483,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 6364,
											"end": 6483,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6402,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 6402,
											"end": 6481,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 6402,
											"end": 6481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6402,
											"end": 6481,
											"name": "tag",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 6402,
											"end": 6481,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6364,
											"end": 6483,
											"name": "tag",
											"source": 10,
											"value": "570"
										},
										{
											"begin": 6364,
											"end": 6483,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6522,
											"end": 6523,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6547,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 6592,
											"end": 6599,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6583,
											"end": 6589,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6572,
											"end": 6581,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6568,
											"end": 6590,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6547,
											"end": 6600,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 6547,
											"end": 6600,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6547,
											"end": 6600,
											"name": "tag",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 6547,
											"end": 6600,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6537,
											"end": 6600,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 6537,
											"end": 6600,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6493,
											"end": 6610,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6649,
											"end": 6651,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6675,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 6720,
											"end": 6727,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6711,
											"end": 6717,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6700,
											"end": 6709,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6696,
											"end": 6718,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6675,
											"end": 6728,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 6675,
											"end": 6728,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6675,
											"end": 6728,
											"name": "tag",
											"source": 10,
											"value": "573"
										},
										{
											"begin": 6675,
											"end": 6728,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6665,
											"end": 6728,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6665,
											"end": 6728,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6620,
											"end": 6738,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6777,
											"end": 6779,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6803,
											"end": 6856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 6848,
											"end": 6855,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6839,
											"end": 6845,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6828,
											"end": 6837,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 6824,
											"end": 6846,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6803,
											"end": 6856,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 6803,
											"end": 6856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6803,
											"end": 6856,
											"name": "tag",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 6803,
											"end": 6856,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6793,
											"end": 6856,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6793,
											"end": 6856,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6748,
											"end": 6866,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6254,
											"end": 6873,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6254,
											"end": 6873,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6254,
											"end": 6873,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6254,
											"end": 6873,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6254,
											"end": 6873,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6254,
											"end": 6873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6879,
											"end": 7353,
											"name": "tag",
											"source": 10,
											"value": "84"
										},
										{
											"begin": 6879,
											"end": 7353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6947,
											"end": 6953,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6955,
											"end": 6961,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7004,
											"end": 7006,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6992,
											"end": 7001,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6983,
											"end": 6990,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6979,
											"end": 7002,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6975,
											"end": 7007,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6972,
											"end": 7091,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6972,
											"end": 7091,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 6972,
											"end": 7091,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7010,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 7010,
											"end": 7089,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 7010,
											"end": 7089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7010,
											"end": 7089,
											"name": "tag",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 7010,
											"end": 7089,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6972,
											"end": 7091,
											"name": "tag",
											"source": 10,
											"value": "576"
										},
										{
											"begin": 6972,
											"end": 7091,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7130,
											"end": 7131,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7155,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 7200,
											"end": 7207,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7191,
											"end": 7197,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7180,
											"end": 7189,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7176,
											"end": 7198,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7155,
											"end": 7208,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 7155,
											"end": 7208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7155,
											"end": 7208,
											"name": "tag",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 7155,
											"end": 7208,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7145,
											"end": 7208,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7145,
											"end": 7208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7101,
											"end": 7218,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7257,
											"end": 7259,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7283,
											"end": 7336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 7328,
											"end": 7335,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7319,
											"end": 7325,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7308,
											"end": 7317,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7304,
											"end": 7326,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7283,
											"end": 7336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 7283,
											"end": 7336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7283,
											"end": 7336,
											"name": "tag",
											"source": 10,
											"value": "579"
										},
										{
											"begin": 7283,
											"end": 7336,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7273,
											"end": 7336,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7273,
											"end": 7336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7228,
											"end": 7346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6879,
											"end": 7353,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6879,
											"end": 7353,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6879,
											"end": 7353,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6879,
											"end": 7353,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6879,
											"end": 7353,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6879,
											"end": 7353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7445,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 7359,
											"end": 7445,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7394,
											"end": 7401,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7434,
											"end": 7438,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 7427,
											"end": 7432,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7423,
											"end": 7439,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7412,
											"end": 7439,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7412,
											"end": 7439,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7445,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7445,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7445,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7359,
											"end": 7445,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7451,
											"end": 7563,
											"name": "tag",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 7451,
											"end": 7563,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7534,
											"end": 7556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 7550,
											"end": 7555,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7534,
											"end": 7556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 7534,
											"end": 7556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7534,
											"end": 7556,
											"name": "tag",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 7534,
											"end": 7556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7529,
											"end": 7532,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7522,
											"end": 7557,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7451,
											"end": 7563,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7451,
											"end": 7563,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7451,
											"end": 7563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7569,
											"end": 7783,
											"name": "tag",
											"source": 10,
											"value": "90"
										},
										{
											"begin": 7569,
											"end": 7783,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7658,
											"end": 7662,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7696,
											"end": 7698,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7685,
											"end": 7694,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7681,
											"end": 7699,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7673,
											"end": 7699,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7673,
											"end": 7699,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 7773,
											"end": 7774,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7762,
											"end": 7771,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7758,
											"end": 7775,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7749,
											"end": 7755,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7776,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "465"
										},
										{
											"begin": 7709,
											"end": 7776,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7709,
											"end": 7776,
											"name": "tag",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 7709,
											"end": 7776,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7569,
											"end": 7783,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7569,
											"end": 7783,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7569,
											"end": 7783,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7569,
											"end": 7783,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7569,
											"end": 7783,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7789,
											"end": 8118,
											"name": "tag",
											"source": 10,
											"value": "96"
										},
										{
											"begin": 7789,
											"end": 8118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7848,
											"end": 7854,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7897,
											"end": 7899,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7885,
											"end": 7894,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7876,
											"end": 7883,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 7872,
											"end": 7895,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7868,
											"end": 7900,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 7865,
											"end": 7984,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 7865,
											"end": 7984,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 7865,
											"end": 7984,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7903,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 7903,
											"end": 7982,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 7903,
											"end": 7982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7903,
											"end": 7982,
											"name": "tag",
											"source": 10,
											"value": "587"
										},
										{
											"begin": 7903,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7865,
											"end": 7984,
											"name": "tag",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 7865,
											"end": 7984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8023,
											"end": 8024,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8048,
											"end": 8101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "588"
										},
										{
											"begin": 8093,
											"end": 8100,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 8084,
											"end": 8090,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8073,
											"end": 8082,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8069,
											"end": 8091,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8048,
											"end": 8101,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 8048,
											"end": 8101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8048,
											"end": 8101,
											"name": "tag",
											"source": 10,
											"value": "588"
										},
										{
											"begin": 8048,
											"end": 8101,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8038,
											"end": 8101,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8038,
											"end": 8101,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7994,
											"end": 8111,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7789,
											"end": 8118,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 7789,
											"end": 8118,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7789,
											"end": 8118,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7789,
											"end": 8118,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7789,
											"end": 8118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8124,
											"end": 8598,
											"name": "tag",
											"source": 10,
											"value": "138"
										},
										{
											"begin": 8124,
											"end": 8598,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8192,
											"end": 8198,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8200,
											"end": 8206,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 8249,
											"end": 8251,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 8237,
											"end": 8246,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8228,
											"end": 8235,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8224,
											"end": 8247,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8220,
											"end": 8252,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8336,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 8217,
											"end": 8336,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8255,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "591"
										},
										{
											"begin": 8255,
											"end": 8334,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 8255,
											"end": 8334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8255,
											"end": 8334,
											"name": "tag",
											"source": 10,
											"value": "591"
										},
										{
											"begin": 8255,
											"end": 8334,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8217,
											"end": 8336,
											"name": "tag",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 8217,
											"end": 8336,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8375,
											"end": 8376,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8400,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 8445,
											"end": 8452,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8436,
											"end": 8442,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8425,
											"end": 8434,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8421,
											"end": 8443,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8400,
											"end": 8453,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 8400,
											"end": 8453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8400,
											"end": 8453,
											"name": "tag",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 8400,
											"end": 8453,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8390,
											"end": 8453,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8390,
											"end": 8453,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8346,
											"end": 8463,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8502,
											"end": 8504,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8528,
											"end": 8581,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 8573,
											"end": 8580,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 8564,
											"end": 8570,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8553,
											"end": 8562,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 8549,
											"end": 8571,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8528,
											"end": 8581,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "456"
										},
										{
											"begin": 8528,
											"end": 8581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8528,
											"end": 8581,
											"name": "tag",
											"source": 10,
											"value": "593"
										},
										{
											"begin": 8528,
											"end": 8581,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8518,
											"end": 8581,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8518,
											"end": 8581,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8473,
											"end": 8591,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8124,
											"end": 8598,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8124,
											"end": 8598,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8124,
											"end": 8598,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8124,
											"end": 8598,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8124,
											"end": 8598,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8124,
											"end": 8598,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8604,
											"end": 8784,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 8604,
											"end": 8784,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8652,
											"end": 8729,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8649,
											"end": 8650,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8642,
											"end": 8730,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8749,
											"end": 8753,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 8746,
											"end": 8747,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8739,
											"end": 8754,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8773,
											"end": 8777,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8770,
											"end": 8771,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8763,
											"end": 8778,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8790,
											"end": 8984,
											"name": "tag",
											"source": 10,
											"value": "152"
										},
										{
											"begin": 8790,
											"end": 8984,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8830,
											"end": 8834,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8850,
											"end": 8870,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 8868,
											"end": 8869,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8850,
											"end": 8870,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 8850,
											"end": 8870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8850,
											"end": 8870,
											"name": "tag",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 8850,
											"end": 8870,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8845,
											"end": 8870,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8845,
											"end": 8870,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8884,
											"end": 8904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 8902,
											"end": 8903,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8884,
											"end": 8904,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 8884,
											"end": 8904,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8884,
											"end": 8904,
											"name": "tag",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 8884,
											"end": 8904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8879,
											"end": 8904,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8879,
											"end": 8904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8928,
											"end": 8929,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8925,
											"end": 8926,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8921,
											"end": 8930,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8913,
											"end": 8930,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8913,
											"end": 8930,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8952,
											"end": 8953,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8946,
											"end": 8950,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8943,
											"end": 8954,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8977,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8977,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "598"
										},
										{
											"begin": 8940,
											"end": 8977,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8957,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 8957,
											"end": 8975,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 8957,
											"end": 8975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8957,
											"end": 8975,
											"name": "tag",
											"source": 10,
											"value": "599"
										},
										{
											"begin": 8957,
											"end": 8975,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8940,
											"end": 8977,
											"name": "tag",
											"source": 10,
											"value": "598"
										},
										{
											"begin": 8940,
											"end": 8977,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8790,
											"end": 8984,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8790,
											"end": 8984,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8790,
											"end": 8984,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8790,
											"end": 8984,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8790,
											"end": 8984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8990,
											"end": 9400,
											"name": "tag",
											"source": 10,
											"value": "154"
										},
										{
											"begin": 8990,
											"end": 9400,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9030,
											"end": 9037,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9053,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "601"
										},
										{
											"begin": 9071,
											"end": 9072,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9053,
											"end": 9073,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 9053,
											"end": 9073,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9053,
											"end": 9073,
											"name": "tag",
											"source": 10,
											"value": "601"
										},
										{
											"begin": 9053,
											"end": 9073,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9048,
											"end": 9073,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9048,
											"end": 9073,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9087,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 9105,
											"end": 9106,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9087,
											"end": 9107,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 9087,
											"end": 9107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9087,
											"end": 9107,
											"name": "tag",
											"source": 10,
											"value": "602"
										},
										{
											"begin": 9087,
											"end": 9107,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9082,
											"end": 9107,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9082,
											"end": 9107,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9142,
											"end": 9143,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9139,
											"end": 9140,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9135,
											"end": 9144,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 9164,
											"end": 9194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "603"
										},
										{
											"begin": 9182,
											"end": 9193,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9164,
											"end": 9194,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 9164,
											"end": 9194,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9164,
											"end": 9194,
											"name": "tag",
											"source": 10,
											"value": "603"
										},
										{
											"begin": 9164,
											"end": 9194,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9153,
											"end": 9194,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9153,
											"end": 9194,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9343,
											"end": 9344,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9334,
											"end": 9341,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9330,
											"end": 9345,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9327,
											"end": 9328,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9324,
											"end": 9346,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 9304,
											"end": 9305,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9297,
											"end": 9306,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9277,
											"end": 9360,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 9254,
											"end": 9393,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "604"
										},
										{
											"begin": 9254,
											"end": 9393,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9373,
											"end": 9391,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 9373,
											"end": 9391,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 9373,
											"end": 9391,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9373,
											"end": 9391,
											"name": "tag",
											"source": 10,
											"value": "605"
										},
										{
											"begin": 9373,
											"end": 9391,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9254,
											"end": 9393,
											"name": "tag",
											"source": 10,
											"value": "604"
										},
										{
											"begin": 9254,
											"end": 9393,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9038,
											"end": 9400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8990,
											"end": 9400,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8990,
											"end": 9400,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8990,
											"end": 9400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8990,
											"end": 9400,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8990,
											"end": 9400,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9406,
											"end": 9597,
											"name": "tag",
											"source": 10,
											"value": "158"
										},
										{
											"begin": 9406,
											"end": 9597,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9446,
											"end": 9449,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9465,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "607"
										},
										{
											"begin": 9483,
											"end": 9484,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9465,
											"end": 9485,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 9465,
											"end": 9485,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9465,
											"end": 9485,
											"name": "tag",
											"source": 10,
											"value": "607"
										},
										{
											"begin": 9465,
											"end": 9485,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9460,
											"end": 9485,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9460,
											"end": 9485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9499,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "608"
										},
										{
											"begin": 9517,
											"end": 9518,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9499,
											"end": 9519,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 9499,
											"end": 9519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9499,
											"end": 9519,
											"name": "tag",
											"source": 10,
											"value": "608"
										},
										{
											"begin": 9499,
											"end": 9519,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9494,
											"end": 9519,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9494,
											"end": 9519,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9542,
											"end": 9543,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9539,
											"end": 9540,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9535,
											"end": 9544,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9528,
											"end": 9544,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9528,
											"end": 9544,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9563,
											"end": 9566,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 9560,
											"end": 9561,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9557,
											"end": 9567,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 9554,
											"end": 9590,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9554,
											"end": 9590,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 9554,
											"end": 9590,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "610"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 9570,
											"end": 9588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "tag",
											"source": 10,
											"value": "610"
										},
										{
											"begin": 9570,
											"end": 9588,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9554,
											"end": 9590,
											"name": "tag",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 9554,
											"end": 9590,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9406,
											"end": 9597,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9406,
											"end": 9597,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9406,
											"end": 9597,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9406,
											"end": 9597,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9406,
											"end": 9597,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9603,
											"end": 9783,
											"name": "tag",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 9603,
											"end": 9783,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9651,
											"end": 9728,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9648,
											"end": 9649,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9641,
											"end": 9729,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9748,
											"end": 9752,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 9745,
											"end": 9746,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 9738,
											"end": 9753,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9772,
											"end": 9776,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 9769,
											"end": 9770,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9762,
											"end": 9777,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 9789,
											"end": 9974,
											"name": "tag",
											"source": 10,
											"value": "160"
										},
										{
											"begin": 9789,
											"end": 9974,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9829,
											"end": 9830,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9846,
											"end": 9866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "613"
										},
										{
											"begin": 9864,
											"end": 9865,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9846,
											"end": 9866,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 9846,
											"end": 9866,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9846,
											"end": 9866,
											"name": "tag",
											"source": 10,
											"value": "613"
										},
										{
											"begin": 9846,
											"end": 9866,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9841,
											"end": 9866,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9841,
											"end": 9866,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9880,
											"end": 9900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "614"
										},
										{
											"begin": 9898,
											"end": 9899,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9880,
											"end": 9900,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "443"
										},
										{
											"begin": 9880,
											"end": 9900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9880,
											"end": 9900,
											"name": "tag",
											"source": 10,
											"value": "614"
										},
										{
											"begin": 9880,
											"end": 9900,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9875,
											"end": 9900,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9875,
											"end": 9900,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9919,
											"end": 9920,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9909,
											"end": 9944,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 9909,
											"end": 9944,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9924,
											"end": 9942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "616"
										},
										{
											"begin": 9924,
											"end": 9942,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "467"
										},
										{
											"begin": 9924,
											"end": 9942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9924,
											"end": 9942,
											"name": "tag",
											"source": 10,
											"value": "616"
										},
										{
											"begin": 9924,
											"end": 9942,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9909,
											"end": 9944,
											"name": "tag",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 9909,
											"end": 9944,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9966,
											"end": 9967,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9963,
											"end": 9964,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9959,
											"end": 9968,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 9954,
											"end": 9968,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9954,
											"end": 9968,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9789,
											"end": 9974,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9789,
											"end": 9974,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9789,
											"end": 9974,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9789,
											"end": 9974,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9789,
											"end": 9974,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9980,
											"end": 10160,
											"name": "tag",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 9980,
											"end": 10160,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10028,
											"end": 10105,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10025,
											"end": 10026,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10106,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10125,
											"end": 10129,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 10122,
											"end": 10123,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 10115,
											"end": 10130,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10149,
											"end": 10153,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 10146,
											"end": 10147,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10139,
											"end": 10154,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 10166,
											"end": 10486,
											"name": "tag",
											"source": 10,
											"value": "163"
										},
										{
											"begin": 10166,
											"end": 10486,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10210,
											"end": 10216,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10247,
											"end": 10248,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 10241,
											"end": 10245,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10237,
											"end": 10249,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 10227,
											"end": 10249,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10227,
											"end": 10249,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10294,
											"end": 10295,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 10288,
											"end": 10292,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10284,
											"end": 10296,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10315,
											"end": 10333,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 10305,
											"end": 10386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 10305,
											"end": 10386,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10371,
											"end": 10375,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 10363,
											"end": 10369,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10359,
											"end": 10376,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 10349,
											"end": 10376,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10349,
											"end": 10376,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10305,
											"end": 10386,
											"name": "tag",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 10305,
											"end": 10386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10433,
											"end": 10435,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10425,
											"end": 10431,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10422,
											"end": 10436,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 10402,
											"end": 10420,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10399,
											"end": 10437,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10396,
											"end": 10480,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "620"
										},
										{
											"begin": 10396,
											"end": 10480,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 10452,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 10452,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "468"
										},
										{
											"begin": 10452,
											"end": 10470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10452,
											"end": 10470,
											"name": "tag",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 10452,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10396,
											"end": 10480,
											"name": "tag",
											"source": 10,
											"value": "620"
										},
										{
											"begin": 10396,
											"end": 10480,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10217,
											"end": 10486,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10166,
											"end": 10486,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10166,
											"end": 10486,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10166,
											"end": 10486,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10166,
											"end": 10486,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10492,
											"end": 10667,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 10492,
											"end": 10667,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10632,
											"end": 10659,
											"name": "PUSH",
											"source": 10,
											"value": "414D4D3A20496E76616C696420696E70757420616D6F756E7400000000000000"
										},
										{
											"begin": 10628,
											"end": 10629,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10620,
											"end": 10626,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10616,
											"end": 10630,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10609,
											"end": 10660,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10492,
											"end": 10667,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10492,
											"end": 10667,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10673,
											"end": 11039,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 10673,
											"end": 11039,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10815,
											"end": 10818,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10836,
											"end": 10903,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 10900,
											"end": 10902,
											"name": "PUSH",
											"source": 10,
											"value": "19"
										},
										{
											"begin": 10895,
											"end": 10898,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10836,
											"end": 10903,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 10836,
											"end": 10903,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10836,
											"end": 10903,
											"name": "tag",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 10836,
											"end": 10903,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10829,
											"end": 10903,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10829,
											"end": 10903,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10912,
											"end": 11005,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 11001,
											"end": 11004,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10912,
											"end": 11005,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 10912,
											"end": 11005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10912,
											"end": 11005,
											"name": "tag",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 10912,
											"end": 11005,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11030,
											"end": 11032,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11025,
											"end": 11028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11021,
											"end": 11033,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11014,
											"end": 11033,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11014,
											"end": 11033,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10673,
											"end": 11039,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10673,
											"end": 11039,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10673,
											"end": 11039,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10673,
											"end": 11039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11045,
											"end": 11464,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 11045,
											"end": 11464,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11211,
											"end": 11215,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11249,
											"end": 11251,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11238,
											"end": 11247,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11234,
											"end": 11252,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11226,
											"end": 11252,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11226,
											"end": 11252,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11298,
											"end": 11307,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11292,
											"end": 11296,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11288,
											"end": 11308,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11284,
											"end": 11285,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11273,
											"end": 11282,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11269,
											"end": 11286,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11262,
											"end": 11309,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11326,
											"end": 11457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "627"
										},
										{
											"begin": 11452,
											"end": 11456,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11326,
											"end": 11457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 11326,
											"end": 11457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11326,
											"end": 11457,
											"name": "tag",
											"source": 10,
											"value": "627"
										},
										{
											"begin": 11326,
											"end": 11457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11318,
											"end": 11457,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11318,
											"end": 11457,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11045,
											"end": 11464,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11045,
											"end": 11464,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11045,
											"end": 11464,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11045,
											"end": 11464,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11470,
											"end": 11651,
											"name": "tag",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 11470,
											"end": 11651,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11610,
											"end": 11643,
											"name": "PUSH",
											"source": 10,
											"value": "414D4D3A20496E73756666696369656E74206F757470757420616D6F756E7400"
										},
										{
											"begin": 11606,
											"end": 11607,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11598,
											"end": 11604,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11594,
											"end": 11608,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11587,
											"end": 11644,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11470,
											"end": 11651,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11470,
											"end": 11651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11657,
											"end": 12023,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 11657,
											"end": 12023,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11799,
											"end": 11802,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11820,
											"end": 11887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "630"
										},
										{
											"begin": 11884,
											"end": 11886,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 11879,
											"end": 11882,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11820,
											"end": 11887,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 11820,
											"end": 11887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11820,
											"end": 11887,
											"name": "tag",
											"source": 10,
											"value": "630"
										},
										{
											"begin": 11820,
											"end": 11887,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11813,
											"end": 11887,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11813,
											"end": 11887,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11896,
											"end": 11989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 11985,
											"end": 11988,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11896,
											"end": 11989,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "471"
										},
										{
											"begin": 11896,
											"end": 11989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11896,
											"end": 11989,
											"name": "tag",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 11896,
											"end": 11989,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12014,
											"end": 12016,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12009,
											"end": 12012,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12005,
											"end": 12017,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11998,
											"end": 12017,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11998,
											"end": 12017,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11657,
											"end": 12023,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11657,
											"end": 12023,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11657,
											"end": 12023,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11657,
											"end": 12023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12029,
											"end": 12448,
											"name": "tag",
											"source": 10,
											"value": "191"
										},
										{
											"begin": 12029,
											"end": 12448,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12195,
											"end": 12199,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12233,
											"end": 12235,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12222,
											"end": 12231,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12218,
											"end": 12236,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12210,
											"end": 12236,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12210,
											"end": 12236,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12282,
											"end": 12291,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12276,
											"end": 12280,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12272,
											"end": 12292,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12268,
											"end": 12269,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12257,
											"end": 12266,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12253,
											"end": 12270,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12246,
											"end": 12293,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12310,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "633"
										},
										{
											"begin": 12436,
											"end": 12440,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12310,
											"end": 12441,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 12310,
											"end": 12441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12310,
											"end": 12441,
											"name": "tag",
											"source": 10,
											"value": "633"
										},
										{
											"begin": 12310,
											"end": 12441,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12302,
											"end": 12441,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12302,
											"end": 12441,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12029,
											"end": 12448,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12029,
											"end": 12448,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12029,
											"end": 12448,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12029,
											"end": 12448,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 13007,
											"name": "tag",
											"source": 10,
											"value": "201"
										},
										{
											"begin": 12454,
											"end": 13007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12631,
											"end": 12635,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12669,
											"end": 12672,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 12658,
											"end": 12667,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12654,
											"end": 12673,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12646,
											"end": 12673,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12646,
											"end": 12673,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12683,
											"end": 12754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "635"
										},
										{
											"begin": 12751,
											"end": 12752,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12740,
											"end": 12749,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12736,
											"end": 12753,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12727,
											"end": 12733,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 12683,
											"end": 12754,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 12683,
											"end": 12754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12683,
											"end": 12754,
											"name": "tag",
											"source": 10,
											"value": "635"
										},
										{
											"begin": 12683,
											"end": 12754,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12764,
											"end": 12836,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "636"
										},
										{
											"begin": 12832,
											"end": 12834,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12821,
											"end": 12830,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12817,
											"end": 12835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12808,
											"end": 12814,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 12764,
											"end": 12836,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 12764,
											"end": 12836,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12764,
											"end": 12836,
											"name": "tag",
											"source": 10,
											"value": "636"
										},
										{
											"begin": 12764,
											"end": 12836,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12846,
											"end": 12918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "637"
										},
										{
											"begin": 12914,
											"end": 12916,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 12903,
											"end": 12912,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12899,
											"end": 12917,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12890,
											"end": 12896,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 12846,
											"end": 12918,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 12846,
											"end": 12918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12846,
											"end": 12918,
											"name": "tag",
											"source": 10,
											"value": "637"
										},
										{
											"begin": 12846,
											"end": 12918,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12928,
											"end": 13000,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "638"
										},
										{
											"begin": 12996,
											"end": 12998,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 12985,
											"end": 12994,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12981,
											"end": 12999,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12972,
											"end": 12978,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 12928,
											"end": 13000,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 12928,
											"end": 13000,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12928,
											"end": 13000,
											"name": "tag",
											"source": 10,
											"value": "638"
										},
										{
											"begin": 12928,
											"end": 13000,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 13007,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 13007,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 13007,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 13007,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 13007,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 13007,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 13007,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12454,
											"end": 13007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13013,
											"end": 13192,
											"name": "tag",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 13013,
											"end": 13192,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13153,
											"end": 13184,
											"name": "PUSH",
											"source": 10,
											"value": "414D4D3A2063616C6C6572206973206E6F74206120676F7665726E6F72000000"
										},
										{
											"begin": 13149,
											"end": 13150,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13141,
											"end": 13147,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13137,
											"end": 13151,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13130,
											"end": 13185,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13013,
											"end": 13192,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13013,
											"end": 13192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13198,
											"end": 13564,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 13198,
											"end": 13564,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13340,
											"end": 13343,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13361,
											"end": 13428,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "641"
										},
										{
											"begin": 13425,
											"end": 13427,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 13420,
											"end": 13423,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13361,
											"end": 13428,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 13361,
											"end": 13428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13361,
											"end": 13428,
											"name": "tag",
											"source": 10,
											"value": "641"
										},
										{
											"begin": 13361,
											"end": 13428,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13354,
											"end": 13428,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13354,
											"end": 13428,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13437,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "642"
										},
										{
											"begin": 13526,
											"end": 13529,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13437,
											"end": 13530,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "473"
										},
										{
											"begin": 13437,
											"end": 13530,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13437,
											"end": 13530,
											"name": "tag",
											"source": 10,
											"value": "642"
										},
										{
											"begin": 13437,
											"end": 13530,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13555,
											"end": 13557,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13550,
											"end": 13553,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13546,
											"end": 13558,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13539,
											"end": 13558,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13539,
											"end": 13558,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13198,
											"end": 13564,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13198,
											"end": 13564,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13198,
											"end": 13564,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13198,
											"end": 13564,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13570,
											"end": 13989,
											"name": "tag",
											"source": 10,
											"value": "208"
										},
										{
											"begin": 13570,
											"end": 13989,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13736,
											"end": 13740,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13774,
											"end": 13776,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13763,
											"end": 13772,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13759,
											"end": 13777,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13751,
											"end": 13777,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13751,
											"end": 13777,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13823,
											"end": 13832,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13817,
											"end": 13821,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13813,
											"end": 13833,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13809,
											"end": 13810,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13798,
											"end": 13807,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13794,
											"end": 13811,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13787,
											"end": 13834,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13851,
											"end": 13982,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "644"
										},
										{
											"begin": 13977,
											"end": 13981,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13851,
											"end": 13982,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 13851,
											"end": 13982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13851,
											"end": 13982,
											"name": "tag",
											"source": 10,
											"value": "644"
										},
										{
											"begin": 13851,
											"end": 13982,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13843,
											"end": 13982,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13843,
											"end": 13982,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13570,
											"end": 13989,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13570,
											"end": 13989,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13570,
											"end": 13989,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13570,
											"end": 13989,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13995,
											"end": 14174,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 13995,
											"end": 14174,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14135,
											"end": 14166,
											"name": "PUSH",
											"source": 10,
											"value": "414D4D3A20496E76616C696420676F7665726E6F722061646472657373000000"
										},
										{
											"begin": 14131,
											"end": 14132,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14123,
											"end": 14129,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14119,
											"end": 14133,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14112,
											"end": 14167,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13995,
											"end": 14174,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13995,
											"end": 14174,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14180,
											"end": 14546,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 14180,
											"end": 14546,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14322,
											"end": 14325,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14343,
											"end": 14410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "647"
										},
										{
											"begin": 14407,
											"end": 14409,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 14402,
											"end": 14405,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14343,
											"end": 14410,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 14343,
											"end": 14410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14343,
											"end": 14410,
											"name": "tag",
											"source": 10,
											"value": "647"
										},
										{
											"begin": 14343,
											"end": 14410,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14336,
											"end": 14410,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14336,
											"end": 14410,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14419,
											"end": 14512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 14508,
											"end": 14511,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14419,
											"end": 14512,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 14419,
											"end": 14512,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14419,
											"end": 14512,
											"name": "tag",
											"source": 10,
											"value": "648"
										},
										{
											"begin": 14419,
											"end": 14512,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14537,
											"end": 14539,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14532,
											"end": 14535,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14528,
											"end": 14540,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14521,
											"end": 14540,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14521,
											"end": 14540,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14180,
											"end": 14546,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14180,
											"end": 14546,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14180,
											"end": 14546,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14180,
											"end": 14546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14552,
											"end": 14971,
											"name": "tag",
											"source": 10,
											"value": "212"
										},
										{
											"begin": 14552,
											"end": 14971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14718,
											"end": 14722,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14756,
											"end": 14758,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14745,
											"end": 14754,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14741,
											"end": 14759,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14733,
											"end": 14759,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14733,
											"end": 14759,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14805,
											"end": 14814,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14799,
											"end": 14803,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14795,
											"end": 14815,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14791,
											"end": 14792,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14780,
											"end": 14789,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14776,
											"end": 14793,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14769,
											"end": 14816,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14833,
											"end": 14964,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "650"
										},
										{
											"begin": 14959,
											"end": 14963,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14833,
											"end": 14964,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 14833,
											"end": 14964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14833,
											"end": 14964,
											"name": "tag",
											"source": 10,
											"value": "650"
										},
										{
											"begin": 14833,
											"end": 14964,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14825,
											"end": 14964,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14825,
											"end": 14964,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14552,
											"end": 14971,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14552,
											"end": 14971,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14552,
											"end": 14971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14552,
											"end": 14971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14977,
											"end": 15150,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 14977,
											"end": 15150,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15117,
											"end": 15142,
											"name": "PUSH",
											"source": 10,
											"value": "414D4D3A20416C7265616479206120676F7665726E6F72000000000000000000"
										},
										{
											"begin": 15113,
											"end": 15114,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15105,
											"end": 15111,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15101,
											"end": 15115,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15094,
											"end": 15143,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14977,
											"end": 15150,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14977,
											"end": 15150,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15156,
											"end": 15522,
											"name": "tag",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 15156,
											"end": 15522,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15298,
											"end": 15301,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15319,
											"end": 15386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "653"
										},
										{
											"begin": 15383,
											"end": 15385,
											"name": "PUSH",
											"source": 10,
											"value": "17"
										},
										{
											"begin": 15378,
											"end": 15381,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15319,
											"end": 15386,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 15319,
											"end": 15386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15319,
											"end": 15386,
											"name": "tag",
											"source": 10,
											"value": "653"
										},
										{
											"begin": 15319,
											"end": 15386,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15312,
											"end": 15386,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15312,
											"end": 15386,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15395,
											"end": 15488,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "654"
										},
										{
											"begin": 15484,
											"end": 15487,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15395,
											"end": 15488,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 15395,
											"end": 15488,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15395,
											"end": 15488,
											"name": "tag",
											"source": 10,
											"value": "654"
										},
										{
											"begin": 15395,
											"end": 15488,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15513,
											"end": 15515,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15508,
											"end": 15511,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15504,
											"end": 15516,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15497,
											"end": 15516,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15497,
											"end": 15516,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15156,
											"end": 15522,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15156,
											"end": 15522,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15156,
											"end": 15522,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15156,
											"end": 15522,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15528,
											"end": 15947,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 15528,
											"end": 15947,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15694,
											"end": 15698,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15732,
											"end": 15734,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15721,
											"end": 15730,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15717,
											"end": 15735,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15709,
											"end": 15735,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15709,
											"end": 15735,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15781,
											"end": 15790,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15775,
											"end": 15779,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15771,
											"end": 15791,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 15767,
											"end": 15768,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15756,
											"end": 15765,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15752,
											"end": 15769,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15745,
											"end": 15792,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15809,
											"end": 15940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "656"
										},
										{
											"begin": 15935,
											"end": 15939,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 15809,
											"end": 15940,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "478"
										},
										{
											"begin": 15809,
											"end": 15940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15809,
											"end": 15940,
											"name": "tag",
											"source": 10,
											"value": "656"
										},
										{
											"begin": 15809,
											"end": 15940,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15801,
											"end": 15940,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15801,
											"end": 15940,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15528,
											"end": 15947,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15528,
											"end": 15947,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15528,
											"end": 15947,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15528,
											"end": 15947,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15953,
											"end": 16119,
											"name": "tag",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 15953,
											"end": 16119,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16093,
											"end": 16111,
											"name": "PUSH",
											"source": 10,
											"value": "414D4D3A20496E76616C69642066656500000000000000000000000000000000"
										},
										{
											"begin": 16089,
											"end": 16090,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16081,
											"end": 16087,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16077,
											"end": 16091,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16070,
											"end": 16112,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15953,
											"end": 16119,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15953,
											"end": 16119,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16125,
											"end": 16491,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 16125,
											"end": 16491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16267,
											"end": 16270,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16288,
											"end": 16355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "659"
										},
										{
											"begin": 16352,
											"end": 16354,
											"name": "PUSH",
											"source": 10,
											"value": "10"
										},
										{
											"begin": 16347,
											"end": 16350,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16288,
											"end": 16355,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 16288,
											"end": 16355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16288,
											"end": 16355,
											"name": "tag",
											"source": 10,
											"value": "659"
										},
										{
											"begin": 16288,
											"end": 16355,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16281,
											"end": 16355,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16281,
											"end": 16355,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16364,
											"end": 16457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "660"
										},
										{
											"begin": 16453,
											"end": 16456,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16364,
											"end": 16457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "479"
										},
										{
											"begin": 16364,
											"end": 16457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16364,
											"end": 16457,
											"name": "tag",
											"source": 10,
											"value": "660"
										},
										{
											"begin": 16364,
											"end": 16457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16482,
											"end": 16484,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16477,
											"end": 16480,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16473,
											"end": 16485,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16466,
											"end": 16485,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16466,
											"end": 16485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16125,
											"end": 16491,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16125,
											"end": 16491,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16125,
											"end": 16491,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16125,
											"end": 16491,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16497,
											"end": 16916,
											"name": "tag",
											"source": 10,
											"value": "223"
										},
										{
											"begin": 16497,
											"end": 16916,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16663,
											"end": 16667,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16701,
											"end": 16703,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16690,
											"end": 16699,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16686,
											"end": 16704,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16678,
											"end": 16704,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16678,
											"end": 16704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16750,
											"end": 16759,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16744,
											"end": 16748,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16740,
											"end": 16760,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16736,
											"end": 16737,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16725,
											"end": 16734,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16721,
											"end": 16738,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16714,
											"end": 16761,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16778,
											"end": 16909,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "662"
										},
										{
											"begin": 16904,
											"end": 16908,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16778,
											"end": 16909,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 16778,
											"end": 16909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16778,
											"end": 16909,
											"name": "tag",
											"source": 10,
											"value": "662"
										},
										{
											"begin": 16778,
											"end": 16909,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16770,
											"end": 16909,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16770,
											"end": 16909,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16497,
											"end": 16916,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16497,
											"end": 16916,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16497,
											"end": 16916,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16497,
											"end": 16916,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16922,
											"end": 17101,
											"name": "tag",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 16922,
											"end": 17101,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17062,
											"end": 17093,
											"name": "PUSH",
											"source": 10,
											"value": "414D4D3A20496E76616C6964206C697175696469747920616D6F756E74000000"
										},
										{
											"begin": 17058,
											"end": 17059,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17050,
											"end": 17056,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17046,
											"end": 17060,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17039,
											"end": 17094,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16922,
											"end": 17101,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16922,
											"end": 17101,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17107,
											"end": 17473,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 17107,
											"end": 17473,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17249,
											"end": 17252,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17270,
											"end": 17337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "665"
										},
										{
											"begin": 17334,
											"end": 17336,
											"name": "PUSH",
											"source": 10,
											"value": "1D"
										},
										{
											"begin": 17329,
											"end": 17332,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17270,
											"end": 17337,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 17270,
											"end": 17337,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17270,
											"end": 17337,
											"name": "tag",
											"source": 10,
											"value": "665"
										},
										{
											"begin": 17270,
											"end": 17337,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17263,
											"end": 17337,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17263,
											"end": 17337,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17346,
											"end": 17439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "666"
										},
										{
											"begin": 17435,
											"end": 17438,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17346,
											"end": 17439,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "481"
										},
										{
											"begin": 17346,
											"end": 17439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17346,
											"end": 17439,
											"name": "tag",
											"source": 10,
											"value": "666"
										},
										{
											"begin": 17346,
											"end": 17439,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17464,
											"end": 17466,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17459,
											"end": 17462,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17455,
											"end": 17467,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17448,
											"end": 17467,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17448,
											"end": 17467,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17107,
											"end": 17473,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17107,
											"end": 17473,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17107,
											"end": 17473,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17107,
											"end": 17473,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17479,
											"end": 17898,
											"name": "tag",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 17479,
											"end": 17898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17645,
											"end": 17649,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17683,
											"end": 17685,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17672,
											"end": 17681,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17668,
											"end": 17686,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17660,
											"end": 17686,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17660,
											"end": 17686,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17732,
											"end": 17741,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17726,
											"end": 17730,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17722,
											"end": 17742,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17718,
											"end": 17719,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17707,
											"end": 17716,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17703,
											"end": 17720,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17696,
											"end": 17743,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17760,
											"end": 17891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "668"
										},
										{
											"begin": 17886,
											"end": 17890,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17760,
											"end": 17891,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 17760,
											"end": 17891,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17760,
											"end": 17891,
											"name": "tag",
											"source": 10,
											"value": "668"
										},
										{
											"begin": 17760,
											"end": 17891,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17752,
											"end": 17891,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17752,
											"end": 17891,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17479,
											"end": 17898,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17479,
											"end": 17898,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17479,
											"end": 17898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17479,
											"end": 17898,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17904,
											"end": 18346,
											"name": "tag",
											"source": 10,
											"value": "250"
										},
										{
											"begin": 17904,
											"end": 18346,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18053,
											"end": 18057,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18091,
											"end": 18093,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 18080,
											"end": 18089,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18076,
											"end": 18094,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18068,
											"end": 18094,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18068,
											"end": 18094,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18104,
											"end": 18175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "670"
										},
										{
											"begin": 18172,
											"end": 18173,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18161,
											"end": 18170,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18157,
											"end": 18174,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18148,
											"end": 18154,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 18104,
											"end": 18175,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 18104,
											"end": 18175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18104,
											"end": 18175,
											"name": "tag",
											"source": 10,
											"value": "670"
										},
										{
											"begin": 18104,
											"end": 18175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18185,
											"end": 18257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "671"
										},
										{
											"begin": 18253,
											"end": 18255,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18242,
											"end": 18251,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18238,
											"end": 18256,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18229,
											"end": 18235,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 18185,
											"end": 18257,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 18185,
											"end": 18257,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18185,
											"end": 18257,
											"name": "tag",
											"source": 10,
											"value": "671"
										},
										{
											"begin": 18185,
											"end": 18257,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18267,
											"end": 18339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "672"
										},
										{
											"begin": 18335,
											"end": 18337,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 18324,
											"end": 18333,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18320,
											"end": 18338,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18311,
											"end": 18317,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 18267,
											"end": 18339,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 18267,
											"end": 18339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18267,
											"end": 18339,
											"name": "tag",
											"source": 10,
											"value": "672"
										},
										{
											"begin": 18267,
											"end": 18339,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17904,
											"end": 18346,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 17904,
											"end": 18346,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 17904,
											"end": 18346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17904,
											"end": 18346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17904,
											"end": 18346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17904,
											"end": 18346,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17904,
											"end": 18346,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18352,
											"end": 18573,
											"name": "tag",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 18352,
											"end": 18573,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18492,
											"end": 18526,
											"name": "PUSH",
											"source": 10,
											"value": "414D4D3A20556E62616C616E636564206C69717569646974792070726F766964"
										},
										{
											"begin": 18488,
											"end": 18489,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18480,
											"end": 18486,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18476,
											"end": 18490,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18469,
											"end": 18527,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18561,
											"end": 18565,
											"name": "PUSH",
											"source": 10,
											"value": "6564000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18556,
											"end": 18558,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18548,
											"end": 18554,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18544,
											"end": 18559,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18537,
											"end": 18566,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18352,
											"end": 18573,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18352,
											"end": 18573,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18579,
											"end": 18945,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 18579,
											"end": 18945,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18721,
											"end": 18724,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18742,
											"end": 18809,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "675"
										},
										{
											"begin": 18806,
											"end": 18808,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 18801,
											"end": 18804,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18742,
											"end": 18809,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 18742,
											"end": 18809,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18742,
											"end": 18809,
											"name": "tag",
											"source": 10,
											"value": "675"
										},
										{
											"begin": 18742,
											"end": 18809,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18735,
											"end": 18809,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18735,
											"end": 18809,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18818,
											"end": 18911,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "676"
										},
										{
											"begin": 18907,
											"end": 18910,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18818,
											"end": 18911,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "483"
										},
										{
											"begin": 18818,
											"end": 18911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18818,
											"end": 18911,
											"name": "tag",
											"source": 10,
											"value": "676"
										},
										{
											"begin": 18818,
											"end": 18911,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18936,
											"end": 18938,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 18931,
											"end": 18934,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18927,
											"end": 18939,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18920,
											"end": 18939,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18920,
											"end": 18939,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18579,
											"end": 18945,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18579,
											"end": 18945,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18579,
											"end": 18945,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18579,
											"end": 18945,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18951,
											"end": 19370,
											"name": "tag",
											"source": 10,
											"value": "263"
										},
										{
											"begin": 18951,
											"end": 19370,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19117,
											"end": 19121,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19155,
											"end": 19157,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19144,
											"end": 19153,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19140,
											"end": 19158,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19132,
											"end": 19158,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19132,
											"end": 19158,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19204,
											"end": 19213,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19198,
											"end": 19202,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19194,
											"end": 19214,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19190,
											"end": 19191,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19179,
											"end": 19188,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19175,
											"end": 19192,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19168,
											"end": 19215,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19232,
											"end": 19363,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "678"
										},
										{
											"begin": 19358,
											"end": 19362,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19232,
											"end": 19363,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 19232,
											"end": 19363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19232,
											"end": 19363,
											"name": "tag",
											"source": 10,
											"value": "678"
										},
										{
											"begin": 19232,
											"end": 19363,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19224,
											"end": 19363,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19224,
											"end": 19363,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18951,
											"end": 19370,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18951,
											"end": 19370,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18951,
											"end": 19370,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18951,
											"end": 19370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19376,
											"end": 19599,
											"name": "tag",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 19376,
											"end": 19599,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19516,
											"end": 19550,
											"name": "PUSH",
											"source": 10,
											"value": "414D4D3A20496E73756666696369656E74206C69717569646974792070726F76"
										},
										{
											"begin": 19512,
											"end": 19513,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19504,
											"end": 19510,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19500,
											"end": 19514,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19493,
											"end": 19551,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19585,
											"end": 19591,
											"name": "PUSH",
											"source": 10,
											"value": "6964656400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19580,
											"end": 19582,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19572,
											"end": 19578,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19568,
											"end": 19583,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19561,
											"end": 19592,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19376,
											"end": 19599,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19376,
											"end": 19599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19605,
											"end": 19971,
											"name": "tag",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 19605,
											"end": 19971,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19747,
											"end": 19750,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19768,
											"end": 19835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "681"
										},
										{
											"begin": 19832,
											"end": 19834,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 19827,
											"end": 19830,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19768,
											"end": 19835,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 19768,
											"end": 19835,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19768,
											"end": 19835,
											"name": "tag",
											"source": 10,
											"value": "681"
										},
										{
											"begin": 19768,
											"end": 19835,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19761,
											"end": 19835,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19761,
											"end": 19835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19844,
											"end": 19937,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "682"
										},
										{
											"begin": 19933,
											"end": 19936,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19844,
											"end": 19937,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 19844,
											"end": 19937,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19844,
											"end": 19937,
											"name": "tag",
											"source": 10,
											"value": "682"
										},
										{
											"begin": 19844,
											"end": 19937,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19962,
											"end": 19964,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 19957,
											"end": 19960,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19953,
											"end": 19965,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19946,
											"end": 19965,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19946,
											"end": 19965,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19605,
											"end": 19971,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19605,
											"end": 19971,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19605,
											"end": 19971,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19605,
											"end": 19971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19977,
											"end": 20396,
											"name": "tag",
											"source": 10,
											"value": "280"
										},
										{
											"begin": 19977,
											"end": 20396,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20143,
											"end": 20147,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20181,
											"end": 20183,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20170,
											"end": 20179,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20166,
											"end": 20184,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20158,
											"end": 20184,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20158,
											"end": 20184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20230,
											"end": 20239,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20224,
											"end": 20228,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20220,
											"end": 20240,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20216,
											"end": 20217,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20205,
											"end": 20214,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20201,
											"end": 20218,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20194,
											"end": 20241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20258,
											"end": 20389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "684"
										},
										{
											"begin": 20384,
											"end": 20388,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20258,
											"end": 20389,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "486"
										},
										{
											"begin": 20258,
											"end": 20389,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20258,
											"end": 20389,
											"name": "tag",
											"source": 10,
											"value": "684"
										},
										{
											"begin": 20258,
											"end": 20389,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20250,
											"end": 20389,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20250,
											"end": 20389,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19977,
											"end": 20396,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19977,
											"end": 20396,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19977,
											"end": 20396,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19977,
											"end": 20396,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20402,
											"end": 20571,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 20402,
											"end": 20571,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20542,
											"end": 20563,
											"name": "PUSH",
											"source": 10,
											"value": "414D4D3A204E6F74206120676F7665726E6F7200000000000000000000000000"
										},
										{
											"begin": 20538,
											"end": 20539,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20530,
											"end": 20536,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20526,
											"end": 20540,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20519,
											"end": 20564,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20402,
											"end": 20571,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20402,
											"end": 20571,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20577,
											"end": 20943,
											"name": "tag",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 20577,
											"end": 20943,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20719,
											"end": 20722,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20740,
											"end": 20807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "687"
										},
										{
											"begin": 20804,
											"end": 20806,
											"name": "PUSH",
											"source": 10,
											"value": "13"
										},
										{
											"begin": 20799,
											"end": 20802,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20740,
											"end": 20807,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 20740,
											"end": 20807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20740,
											"end": 20807,
											"name": "tag",
											"source": 10,
											"value": "687"
										},
										{
											"begin": 20740,
											"end": 20807,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20733,
											"end": 20807,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20733,
											"end": 20807,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20816,
											"end": 20909,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "688"
										},
										{
											"begin": 20905,
											"end": 20908,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20816,
											"end": 20909,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 20816,
											"end": 20909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20816,
											"end": 20909,
											"name": "tag",
											"source": 10,
											"value": "688"
										},
										{
											"begin": 20816,
											"end": 20909,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20934,
											"end": 20936,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20929,
											"end": 20932,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20925,
											"end": 20937,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20918,
											"end": 20937,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20918,
											"end": 20937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20577,
											"end": 20943,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20577,
											"end": 20943,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20577,
											"end": 20943,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20577,
											"end": 20943,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20949,
											"end": 21368,
											"name": "tag",
											"source": 10,
											"value": "314"
										},
										{
											"begin": 20949,
											"end": 21368,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21115,
											"end": 21119,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21153,
											"end": 21155,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21142,
											"end": 21151,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21138,
											"end": 21156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21130,
											"end": 21156,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21130,
											"end": 21156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21202,
											"end": 21211,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21196,
											"end": 21200,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21192,
											"end": 21212,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 21188,
											"end": 21189,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21177,
											"end": 21186,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21173,
											"end": 21190,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21166,
											"end": 21213,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21230,
											"end": 21361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "690"
										},
										{
											"begin": 21356,
											"end": 21360,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21230,
											"end": 21361,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "488"
										},
										{
											"begin": 21230,
											"end": 21361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21230,
											"end": 21361,
											"name": "tag",
											"source": 10,
											"value": "690"
										},
										{
											"begin": 21230,
											"end": 21361,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21222,
											"end": 21361,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21222,
											"end": 21361,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20949,
											"end": 21368,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20949,
											"end": 21368,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20949,
											"end": 21368,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20949,
											"end": 21368,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21374,
											"end": 21554,
											"name": "tag",
											"source": 10,
											"value": "320"
										},
										{
											"begin": 21374,
											"end": 21554,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21422,
											"end": 21499,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21419,
											"end": 21420,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21412,
											"end": 21500,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21519,
											"end": 21523,
											"name": "PUSH",
											"source": 10,
											"value": "32"
										},
										{
											"begin": 21516,
											"end": 21517,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 21509,
											"end": 21524,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21543,
											"end": 21547,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 21540,
											"end": 21541,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21533,
											"end": 21548,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 21560,
											"end": 21740,
											"name": "tag",
											"source": 10,
											"value": "332"
										},
										{
											"begin": 21560,
											"end": 21740,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21608,
											"end": 21685,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 21605,
											"end": 21606,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21598,
											"end": 21686,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21705,
											"end": 21709,
											"name": "PUSH",
											"source": 10,
											"value": "31"
										},
										{
											"begin": 21702,
											"end": 21703,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 21695,
											"end": 21710,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21729,
											"end": 21733,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 21726,
											"end": 21727,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21719,
											"end": 21734,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 21746,
											"end": 22188,
											"name": "tag",
											"source": 10,
											"value": "343"
										},
										{
											"begin": 21746,
											"end": 22188,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21895,
											"end": 21899,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21933,
											"end": 21935,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 21922,
											"end": 21931,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21918,
											"end": 21936,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21910,
											"end": 21936,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21910,
											"end": 21936,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21946,
											"end": 22017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "694"
										},
										{
											"begin": 22014,
											"end": 22015,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22003,
											"end": 22012,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21999,
											"end": 22016,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21990,
											"end": 21996,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 21946,
											"end": 22017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 21946,
											"end": 22017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21946,
											"end": 22017,
											"name": "tag",
											"source": 10,
											"value": "694"
										},
										{
											"begin": 21946,
											"end": 22017,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22027,
											"end": 22099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "695"
										},
										{
											"begin": 22095,
											"end": 22097,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22084,
											"end": 22093,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22080,
											"end": 22098,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22071,
											"end": 22077,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 22027,
											"end": 22099,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 22027,
											"end": 22099,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22027,
											"end": 22099,
											"name": "tag",
											"source": 10,
											"value": "695"
										},
										{
											"begin": 22027,
											"end": 22099,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22109,
											"end": 22181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "696"
										},
										{
											"begin": 22177,
											"end": 22179,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 22166,
											"end": 22175,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22162,
											"end": 22180,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22153,
											"end": 22159,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 22109,
											"end": 22181,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 22109,
											"end": 22181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22109,
											"end": 22181,
											"name": "tag",
											"source": 10,
											"value": "696"
										},
										{
											"begin": 22109,
											"end": 22181,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21746,
											"end": 22188,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 21746,
											"end": 22188,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 21746,
											"end": 22188,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21746,
											"end": 22188,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21746,
											"end": 22188,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21746,
											"end": 22188,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21746,
											"end": 22188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22194,
											"end": 22375,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 22194,
											"end": 22375,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22334,
											"end": 22367,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 22330,
											"end": 22331,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22322,
											"end": 22328,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22318,
											"end": 22332,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22311,
											"end": 22368,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 22194,
											"end": 22375,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22194,
											"end": 22375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22381,
											"end": 22747,
											"name": "tag",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 22381,
											"end": 22747,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22523,
											"end": 22526,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22544,
											"end": 22611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "699"
										},
										{
											"begin": 22608,
											"end": 22610,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 22603,
											"end": 22606,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22544,
											"end": 22611,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 22544,
											"end": 22611,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22544,
											"end": 22611,
											"name": "tag",
											"source": 10,
											"value": "699"
										},
										{
											"begin": 22544,
											"end": 22611,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22537,
											"end": 22611,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22537,
											"end": 22611,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22620,
											"end": 22713,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "700"
										},
										{
											"begin": 22709,
											"end": 22712,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22620,
											"end": 22713,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 22620,
											"end": 22713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22620,
											"end": 22713,
											"name": "tag",
											"source": 10,
											"value": "700"
										},
										{
											"begin": 22620,
											"end": 22713,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22738,
											"end": 22740,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22733,
											"end": 22736,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22729,
											"end": 22741,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22722,
											"end": 22741,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22722,
											"end": 22741,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22381,
											"end": 22747,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22381,
											"end": 22747,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22381,
											"end": 22747,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22381,
											"end": 22747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 22753,
											"end": 23172,
											"name": "tag",
											"source": 10,
											"value": "355"
										},
										{
											"begin": 22753,
											"end": 23172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 22919,
											"end": 22923,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22957,
											"end": 22959,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 22946,
											"end": 22955,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 22942,
											"end": 22960,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22934,
											"end": 22960,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22934,
											"end": 22960,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23006,
											"end": 23015,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23000,
											"end": 23004,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 22996,
											"end": 23016,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 22992,
											"end": 22993,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 22981,
											"end": 22990,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 22977,
											"end": 22994,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 22970,
											"end": 23017,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 23034,
											"end": 23165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "702"
										},
										{
											"begin": 23160,
											"end": 23164,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 23034,
											"end": 23165,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 23034,
											"end": 23165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23034,
											"end": 23165,
											"name": "tag",
											"source": 10,
											"value": "702"
										},
										{
											"begin": 23034,
											"end": 23165,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23026,
											"end": 23165,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23026,
											"end": 23165,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22753,
											"end": 23172,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 22753,
											"end": 23172,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 22753,
											"end": 23172,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 22753,
											"end": 23172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23178,
											"end": 23620,
											"name": "tag",
											"source": 10,
											"value": "359"
										},
										{
											"begin": 23178,
											"end": 23620,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23327,
											"end": 23331,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23365,
											"end": 23367,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 23354,
											"end": 23363,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23350,
											"end": 23368,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23342,
											"end": 23368,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23342,
											"end": 23368,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23378,
											"end": 23449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "704"
										},
										{
											"begin": 23446,
											"end": 23447,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23435,
											"end": 23444,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23431,
											"end": 23448,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23422,
											"end": 23428,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 23378,
											"end": 23449,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 23378,
											"end": 23449,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23378,
											"end": 23449,
											"name": "tag",
											"source": 10,
											"value": "704"
										},
										{
											"begin": 23378,
											"end": 23449,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23459,
											"end": 23531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "705"
										},
										{
											"begin": 23527,
											"end": 23529,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23516,
											"end": 23525,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23512,
											"end": 23530,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23503,
											"end": 23509,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 23459,
											"end": 23531,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 23459,
											"end": 23531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23459,
											"end": 23531,
											"name": "tag",
											"source": 10,
											"value": "705"
										},
										{
											"begin": 23459,
											"end": 23531,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23541,
											"end": 23613,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "706"
										},
										{
											"begin": 23609,
											"end": 23611,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 23598,
											"end": 23607,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23594,
											"end": 23612,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23585,
											"end": 23591,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23541,
											"end": 23613,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 23541,
											"end": 23613,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23541,
											"end": 23613,
											"name": "tag",
											"source": 10,
											"value": "706"
										},
										{
											"begin": 23541,
											"end": 23613,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23178,
											"end": 23620,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 23178,
											"end": 23620,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 23178,
											"end": 23620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23178,
											"end": 23620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23178,
											"end": 23620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23178,
											"end": 23620,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23178,
											"end": 23620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23626,
											"end": 23958,
											"name": "tag",
											"source": 10,
											"value": "364"
										},
										{
											"begin": 23626,
											"end": 23958,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23747,
											"end": 23751,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23785,
											"end": 23787,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 23774,
											"end": 23783,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 23770,
											"end": 23788,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23762,
											"end": 23788,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 23762,
											"end": 23788,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23798,
											"end": 23869,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "708"
										},
										{
											"begin": 23866,
											"end": 23867,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 23855,
											"end": 23864,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23851,
											"end": 23868,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23842,
											"end": 23848,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 23798,
											"end": 23869,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "448"
										},
										{
											"begin": 23798,
											"end": 23869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23798,
											"end": 23869,
											"name": "tag",
											"source": 10,
											"value": "708"
										},
										{
											"begin": 23798,
											"end": 23869,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23879,
											"end": 23951,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "709"
										},
										{
											"begin": 23947,
											"end": 23949,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 23936,
											"end": 23945,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 23932,
											"end": 23950,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 23923,
											"end": 23929,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 23879,
											"end": 23951,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "449"
										},
										{
											"begin": 23879,
											"end": 23951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23879,
											"end": 23951,
											"name": "tag",
											"source": 10,
											"value": "709"
										},
										{
											"begin": 23879,
											"end": 23951,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23626,
											"end": 23958,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 23626,
											"end": 23958,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 23626,
											"end": 23958,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23626,
											"end": 23958,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23626,
											"end": 23958,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23626,
											"end": 23958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 23964,
											"end": 24080,
											"name": "tag",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 23964,
											"end": 24080,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24034,
											"end": 24055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "711"
										},
										{
											"begin": 24049,
											"end": 24054,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24034,
											"end": 24055,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "457"
										},
										{
											"begin": 24034,
											"end": 24055,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24034,
											"end": 24055,
											"name": "tag",
											"source": 10,
											"value": "711"
										},
										{
											"begin": 24034,
											"end": 24055,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24027,
											"end": 24032,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24024,
											"end": 24056,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 24014,
											"end": 24074,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "712"
										},
										{
											"begin": 24014,
											"end": 24074,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 24070,
											"end": 24071,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24067,
											"end": 24068,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 24060,
											"end": 24072,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 24014,
											"end": 24074,
											"name": "tag",
											"source": 10,
											"value": "712"
										},
										{
											"begin": 24014,
											"end": 24074,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 23964,
											"end": 24080,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 23964,
											"end": 24080,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24086,
											"end": 24223,
											"name": "tag",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 24086,
											"end": 24223,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24140,
											"end": 24145,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24171,
											"end": 24177,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24165,
											"end": 24178,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 24156,
											"end": 24178,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24156,
											"end": 24178,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24187,
											"end": 24217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "714"
										},
										{
											"begin": 24211,
											"end": 24216,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24187,
											"end": 24217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 24187,
											"end": 24217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24187,
											"end": 24217,
											"name": "tag",
											"source": 10,
											"value": "714"
										},
										{
											"begin": 24187,
											"end": 24217,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24086,
											"end": 24223,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 24086,
											"end": 24223,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24086,
											"end": 24223,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24086,
											"end": 24223,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24086,
											"end": 24223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24229,
											"end": 24574,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 24229,
											"end": 24574,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24296,
											"end": 24302,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24345,
											"end": 24347,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 24333,
											"end": 24342,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24324,
											"end": 24331,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 24320,
											"end": 24343,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 24316,
											"end": 24348,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 24313,
											"end": 24432,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 24313,
											"end": 24432,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "716"
										},
										{
											"begin": 24313,
											"end": 24432,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 24351,
											"end": 24430,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "717"
										},
										{
											"begin": 24351,
											"end": 24430,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "441"
										},
										{
											"begin": 24351,
											"end": 24430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24351,
											"end": 24430,
											"name": "tag",
											"source": 10,
											"value": "717"
										},
										{
											"begin": 24351,
											"end": 24430,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24313,
											"end": 24432,
											"name": "tag",
											"source": 10,
											"value": "716"
										},
										{
											"begin": 24313,
											"end": 24432,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24471,
											"end": 24472,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24496,
											"end": 24557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "718"
										},
										{
											"begin": 24549,
											"end": 24556,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 24540,
											"end": 24546,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24529,
											"end": 24538,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 24525,
											"end": 24547,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 24496,
											"end": 24557,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 24496,
											"end": 24557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24496,
											"end": 24557,
											"name": "tag",
											"source": 10,
											"value": "718"
										},
										{
											"begin": 24496,
											"end": 24557,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24486,
											"end": 24557,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24486,
											"end": 24557,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24442,
											"end": 24567,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24229,
											"end": 24574,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 24229,
											"end": 24574,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24229,
											"end": 24574,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24229,
											"end": 24574,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24229,
											"end": 24574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24580,
											"end": 24678,
											"name": "tag",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 24580,
											"end": 24678,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24631,
											"end": 24637,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24665,
											"end": 24670,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24659,
											"end": 24671,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 24649,
											"end": 24671,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24649,
											"end": 24671,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24580,
											"end": 24678,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24580,
											"end": 24678,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24580,
											"end": 24678,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24580,
											"end": 24678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24684,
											"end": 24831,
											"name": "tag",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 24684,
											"end": 24831,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24785,
											"end": 24796,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24822,
											"end": 24825,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 24807,
											"end": 24825,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 24807,
											"end": 24825,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24684,
											"end": 24831,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 24684,
											"end": 24831,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24684,
											"end": 24831,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24684,
											"end": 24831,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24684,
											"end": 24831,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24837,
											"end": 25223,
											"name": "tag",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 24837,
											"end": 25223,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 24941,
											"end": 24944,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 24969,
											"end": 25007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "722"
										},
										{
											"begin": 25001,
											"end": 25006,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 24969,
											"end": 25007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "493"
										},
										{
											"begin": 24969,
											"end": 25007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 24969,
											"end": 25007,
											"name": "tag",
											"source": 10,
											"value": "722"
										},
										{
											"begin": 24969,
											"end": 25007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25023,
											"end": 25111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "723"
										},
										{
											"begin": 25104,
											"end": 25110,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25099,
											"end": 25102,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 25023,
											"end": 25111,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 25023,
											"end": 25111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25023,
											"end": 25111,
											"name": "tag",
											"source": 10,
											"value": "723"
										},
										{
											"begin": 25023,
											"end": 25111,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25016,
											"end": 25111,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 25016,
											"end": 25111,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25120,
											"end": 25185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "724"
										},
										{
											"begin": 25178,
											"end": 25184,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25173,
											"end": 25176,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 25166,
											"end": 25170,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 25159,
											"end": 25164,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 25155,
											"end": 25171,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25120,
											"end": 25185,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 25120,
											"end": 25185,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25120,
											"end": 25185,
											"name": "tag",
											"source": 10,
											"value": "724"
										},
										{
											"begin": 25120,
											"end": 25185,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25210,
											"end": 25216,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 25205,
											"end": 25208,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 25201,
											"end": 25217,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 25194,
											"end": 25217,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25194,
											"end": 25217,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24945,
											"end": 25223,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24837,
											"end": 25223,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 24837,
											"end": 25223,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 24837,
											"end": 25223,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24837,
											"end": 25223,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 24837,
											"end": 25223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25229,
											"end": 25500,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 25229,
											"end": 25500,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25359,
											"end": 25362,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 25381,
											"end": 25474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "726"
										},
										{
											"begin": 25470,
											"end": 25473,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 25461,
											"end": 25467,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 25381,
											"end": 25474,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "495"
										},
										{
											"begin": 25381,
											"end": 25474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 25381,
											"end": 25474,
											"name": "tag",
											"source": 10,
											"value": "726"
										},
										{
											"begin": 25381,
											"end": 25474,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 25374,
											"end": 25474,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25374,
											"end": 25474,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25491,
											"end": 25494,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 25484,
											"end": 25494,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 25484,
											"end": 25494,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25229,
											"end": 25500,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 25229,
											"end": 25500,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 25229,
											"end": 25500,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25229,
											"end": 25500,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 25229,
											"end": 25500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/AMM.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"BASIS_POINTS_DIVISOR()": "126082cf",
							"addGovernor(address)": "3c4a25d0",
							"addLiquidity(uint256,uint256)": "9cd441da",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"feeBasisPoints()": "b8606eef",
							"getAmountOut(uint256,uint256,uint256)": "054d50d4",
							"getReserves()": "0902f1ac",
							"governorList(uint256)": "02aac7b2",
							"governors(address)": "e3eece26",
							"lastTwapPriceX()": "58d50f0a",
							"lastTwapPriceY()": "10f669b3",
							"lastTwapTimestamp()": "9d6f09c1",
							"name()": "06fdde03",
							"removeGovernor(address)": "eecdac88",
							"removeLiquidity(uint256)": "9c8f9f23",
							"setFee(uint256)": "69fe0e2d",
							"swapXForY(uint256,uint256)": "c7f8a78d",
							"swapYForX(uint256,uint256)": "31018339",
							"symbol()": "95d89b41",
							"tokenX()": "16dc165b",
							"tokenY()": "b7d19fc4",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"twapInterval()": "3c1d5df0"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenX\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenY\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"oldFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"FeeUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"}],\"name\":\"GovernorAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"governor\",\"type\":\"address\"}],\"name\":\"GovernorRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountX\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountY\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountX\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountY\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTwapPriceX\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newTwapPriceY\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"TwapUpdated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BASIS_POINTS_DIVISOR\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"}],\"name\":\"addGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountY\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeBasisPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inputAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"inputReserve\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputReserve\",\"type\":\"uint256\"}],\"name\":\"getAmountOut\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"governorList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"governors\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTwapPriceX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTwapPriceY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastTwapTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_governor\",\"type\":\"address\"}],\"name\":\"removeGovernor\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountX\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountY\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_feeBasisPoints\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountXIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountYOut\",\"type\":\"uint256\"}],\"name\":\"swapXForY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountYOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountYIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minAmountXOut\",\"type\":\"uint256\"}],\"name\":\"swapYForX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountXOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenX\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenY\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"twapInterval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This contract implements a basic Automated Market Maker (AMM) using the constant product formula x * y = k. It supports adding/removing liquidity and swapping between two ERC20 tokens.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"addGovernor(address)\":{\"params\":{\"_governor\":\"The address of the new governor.\"}},\"addLiquidity(uint256,uint256)\":{\"details\":\"The liquidity provider must approve the tokens to be transferred before calling this function.\",\"params\":{\"amountX\":\"The amount of Token X to add.\",\"amountY\":\"The amount of Token Y to add.\"},\"returns\":{\"liquidity\":\"The amount of liquidity tokens minted.\"}},\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Initializes the contract with two ERC20 tokens.\",\"params\":{\"_tokenX\":\"Address of the first token (Token X).\",\"_tokenY\":\"Address of the second token (Token Y).\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"getAmountOut(uint256,uint256,uint256)\":{\"params\":{\"inputAmount\":\"The amount of input tokens.\",\"inputReserve\":\"The reserve of input tokens.\",\"outputReserve\":\"The reserve of output tokens.\"},\"returns\":{\"_0\":\"The amount of output tokens.\"}},\"getReserves()\":{\"returns\":{\"_0\":\"reserveX The reserve of Token X.\",\"_1\":\"reserveY The reserve of Token Y.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"removeGovernor(address)\":{\"params\":{\"_governor\":\"The address of the governor to remove.\"}},\"removeLiquidity(uint256)\":{\"details\":\"The liquidity provider receives the proportionate share of the reserves.\",\"params\":{\"liquidity\":\"The amount of liquidity tokens to remove.\"},\"returns\":{\"amountX\":\"The amount of Token X returned.\",\"amountY\":\"The amount of Token Y returned.\"}},\"setFee(uint256)\":{\"params\":{\"_feeBasisPoints\":\"The new fee in basis points.\"}},\"swapXForY(uint256,uint256)\":{\"params\":{\"amountXIn\":\"The amount of Token X to swap.\",\"minAmountYOut\":\"The minimum amount of Token Y to receive.\"},\"returns\":{\"amountYOut\":\"The amount of Token Y received.\"}},\"swapYForX(uint256,uint256)\":{\"params\":{\"amountYIn\":\"The amount of Token Y to swap.\",\"minAmountXOut\":\"The minimum amount of Token X to receive.\"},\"returns\":{\"amountXOut\":\"The amount of Token X received.\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"title\":\"AMM\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"addGovernor(address)\":{\"notice\":\"Adds a new governor.\"},\"addLiquidity(uint256,uint256)\":{\"notice\":\"Adds liquidity to the pool.\"},\"getAmountOut(uint256,uint256,uint256)\":{\"notice\":\"Calculates the output amount for a given input amount using the constant product formula.\"},\"getReserves()\":{\"notice\":\"Returns the reserves of Token X and Token Y.\"},\"removeGovernor(address)\":{\"notice\":\"Removes an existing governor.\"},\"removeLiquidity(uint256)\":{\"notice\":\"Removes liquidity from the pool.\"},\"setFee(uint256)\":{\"notice\":\"Sets the fee in basis points.\"},\"swapXForY(uint256,uint256)\":{\"notice\":\"Swaps Token X for Token Y.\"},\"swapYForX(uint256,uint256)\":{\"notice\":\"Swaps Token Y for Token X.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/AMM.sol\":\"AMM\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/AMM.sol\":{\"keccak256\":\"0x00f442eb56eefa16a62910e31e18548778c0f263adb7c8bc3c89728ba32f2c47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c4e1df1520ed5e7e0e9f234fe57a9fdea0b10114abe43a0ff2fc050bbce9ea9\",\"dweb:/ipfs/QmaeNW7pobnU6o58MHGdRbgmFaVvzi9q4AvX8CvBaw1upo\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 224,
								"contract": "contracts/AMM.sol:AMM",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 230,
								"contract": "contracts/AMM.sol:AMM",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 232,
								"contract": "contracts/AMM.sol:AMM",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 234,
								"contract": "contracts/AMM.sol:AMM",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 236,
								"contract": "contracts/AMM.sol:AMM",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 147,
								"contract": "contracts/AMM.sol:AMM",
								"label": "_status",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							},
							{
								"astId": 1450,
								"contract": "contracts/AMM.sol:AMM",
								"label": "tokenX",
								"offset": 0,
								"slot": "6",
								"type": "t_contract(IERC20)794"
							},
							{
								"astId": 1453,
								"contract": "contracts/AMM.sol:AMM",
								"label": "tokenY",
								"offset": 0,
								"slot": "7",
								"type": "t_contract(IERC20)794"
							},
							{
								"astId": 1455,
								"contract": "contracts/AMM.sol:AMM",
								"label": "reserveX",
								"offset": 0,
								"slot": "8",
								"type": "t_uint256"
							},
							{
								"astId": 1457,
								"contract": "contracts/AMM.sol:AMM",
								"label": "reserveY",
								"offset": 0,
								"slot": "9",
								"type": "t_uint256"
							},
							{
								"astId": 1460,
								"contract": "contracts/AMM.sol:AMM",
								"label": "feeBasisPoints",
								"offset": 0,
								"slot": "10",
								"type": "t_uint256"
							},
							{
								"astId": 1467,
								"contract": "contracts/AMM.sol:AMM",
								"label": "governors",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1470,
								"contract": "contracts/AMM.sol:AMM",
								"label": "governorList",
								"offset": 0,
								"slot": "12",
								"type": "t_array(t_address)dyn_storage"
							},
							{
								"astId": 1473,
								"contract": "contracts/AMM.sol:AMM",
								"label": "twapInterval",
								"offset": 0,
								"slot": "13",
								"type": "t_uint256"
							},
							{
								"astId": 1475,
								"contract": "contracts/AMM.sol:AMM",
								"label": "lastTwapPriceX",
								"offset": 0,
								"slot": "14",
								"type": "t_uint256"
							},
							{
								"astId": 1477,
								"contract": "contracts/AMM.sol:AMM",
								"label": "lastTwapPriceY",
								"offset": 0,
								"slot": "15",
								"type": "t_uint256"
							},
							{
								"astId": 1479,
								"contract": "contracts/AMM.sol:AMM",
								"label": "lastTwapTimestamp",
								"offset": 0,
								"slot": "16",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(IERC20)794": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"addGovernor(address)": {
								"notice": "Adds a new governor."
							},
							"addLiquidity(uint256,uint256)": {
								"notice": "Adds liquidity to the pool."
							},
							"getAmountOut(uint256,uint256,uint256)": {
								"notice": "Calculates the output amount for a given input amount using the constant product formula."
							},
							"getReserves()": {
								"notice": "Returns the reserves of Token X and Token Y."
							},
							"removeGovernor(address)": {
								"notice": "Removes an existing governor."
							},
							"removeLiquidity(uint256)": {
								"notice": "Removes liquidity from the pool."
							},
							"setFee(uint256)": {
								"notice": "Sets the fee in basis points."
							},
							"swapXForY(uint256,uint256)": {
								"notice": "Swaps Token X for Token Y."
							},
							"swapYForX(uint256,uint256)": {
								"notice": "Swaps Token Y for Token X."
							}
						},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							136
						],
						"IERC20Errors": [
							41
						],
						"IERC721Errors": [
							89
						]
					},
					"id": 137,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:0",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 41,
							"linearizedBaseContracts": [
								41
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 11,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 10,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "652:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "668:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 9,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "685:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 8,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:0"
									},
									"src": "621:80:0"
								},
								{
									"documentation": {
										"id": 12,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 16,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 16,
												"src": "889:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:0"
									},
									"src": "864:41:0"
								},
								{
									"documentation": {
										"id": 17,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 21,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 19,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1102:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 18,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:0"
									},
									"src": "1075:45:0"
								},
								{
									"documentation": {
										"id": 22,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:0",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 30,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 24,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1509:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 23,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 26,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1526:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 25,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "1545:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:0"
									},
									"src": "1476:85:0"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 35,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 35,
												"src": "1773:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:0"
									},
									"src": "1746:45:0"
								},
								{
									"documentation": {
										"id": 36,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:0",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 40,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "2023:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 37,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:0"
									},
									"src": "1997:43:0"
								}
							],
							"scope": 137,
							"src": "278:1764:0",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:0",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 89,
							"linearizedBaseContracts": [
								89
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:0",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 47,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 47,
												"src": "2465:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:0"
									},
									"src": "2440:40:0"
								},
								{
									"documentation": {
										"id": 48,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:0",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 52,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "2652:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 49,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:0"
									},
									"src": "2623:46:0"
								},
								{
									"documentation": {
										"id": 53,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:0",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 61,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 55,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "2996:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 54,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3012:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "3029:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:0"
									},
									"src": "2969:75:0"
								},
								{
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 66,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "3233:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 63,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:0"
									},
									"src": "3207:42:0"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 71,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 71,
												"src": "3447:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:0"
									},
									"src": "3419:46:0"
								},
								{
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 78,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 74,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3756:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 73,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 78,
												"src": "3774:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 75,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:0"
									},
									"src": "3723:68:0"
								},
								{
									"documentation": {
										"id": 79,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 83,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "4004:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 80,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:0"
									},
									"src": "3976:46:0"
								},
								{
									"documentation": {
										"id": 84,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 88,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 86,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 88,
												"src": "4258:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 85,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:0"
									},
									"src": "4230:46:0"
								}
							],
							"scope": 137,
							"src": "2186:2092:0",
							"usedErrors": [
								47,
								52,
								61,
								66,
								71,
								78,
								83,
								88
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 90,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:0",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 136,
							"linearizedBaseContracts": [
								136
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 91,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:0",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 101,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 93,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4854:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 92,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4870:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 94,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4887:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "4903:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:0"
									},
									"src": "4821:99:0"
								},
								{
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:0",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 106,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 106,
												"src": "5110:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:0"
									},
									"src": "5083:43:0"
								},
								{
									"documentation": {
										"id": 107,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:0",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 111,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 110,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "5325:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:0"
									},
									"src": "5296:47:0"
								},
								{
									"documentation": {
										"id": 112,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:0",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 118,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5645:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 118,
												"src": "5663:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:0"
									},
									"src": "5610:68:0"
								},
								{
									"documentation": {
										"id": 119,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:0",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 123,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 121,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "5892:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 120,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:0"
									},
									"src": "5863:47:0"
								},
								{
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:0",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 128,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "6147:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:0"
									},
									"src": "6118:47:0"
								},
								{
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:0",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 135,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6488:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 135,
												"src": "6507:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:0"
									},
									"src": "6456:73:0"
								}
							],
							"scope": 137,
							"src": "4424:2107:0",
							"usedErrors": [
								101,
								106,
								111,
								118,
								123,
								128,
								135
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							201
						]
					},
					"id": 202,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 138,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 139,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:1",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 201,
							"linearizedBaseContracts": [
								201
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 142,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 201,
									"src": "1676:41:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 140,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 141,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 145,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:1",
									"nodeType": "VariableDeclaration",
									"scope": 201,
									"src": "1723:37:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 143,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 144,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 147,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 201,
									"src": "1767:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 146,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "1811:39:1",
										"statements": [
											{
												"expression": {
													"id": 152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 150,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "1821:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 151,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "1831:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 153,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:1"
											}
										]
									},
									"id": 155,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:1"
									},
									"returnParameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:1"
									},
									"scope": 201,
									"src": "1797:53:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "2251:79:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 158,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 181,
														"src": "2261:19:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 159,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 160,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:1"
											},
											{
												"id": 161,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:1"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 162,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 189,
														"src": "2303:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:1"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:1",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 166,
									"name": "nonReentrant",
									"nameLocation": "2236:12:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:1"
									},
									"src": "2227:103:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "2375:248:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 172,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 170,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 147,
																"src": "2468:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 171,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "2479:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 173,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 169,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 175,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:1"
											},
											{
												"expression": {
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 176,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "2598:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 177,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "2608:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:1"
											}
										]
									},
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:1"
									},
									"returnParameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:1"
									},
									"scope": 201,
									"src": "2336:287:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 188,
										"nodeType": "Block",
										"src": "2667:171:1",
										"statements": [
											{
												"expression": {
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 184,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "2809:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 185,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 142,
														"src": "2819:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:1"
											}
										]
									},
									"id": 189,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:1"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:1"
									},
									"scope": 201,
									"src": "2629:209:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "3081:43:1",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 195,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 147,
														"src": "3098:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 196,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 145,
														"src": "3109:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 194,
												"id": 198,
												"nodeType": "Return",
												"src": "3091:26:1"
											}
										]
									},
									"documentation": {
										"id": 190,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:1",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:1"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "3075:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 192,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:1"
									},
									"scope": 201,
									"src": "3017:107:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 202,
							"src": "888:2238:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1429
						],
						"ERC20": [
							716
						],
						"IERC20": [
							794
						],
						"IERC20Errors": [
							41
						],
						"IERC20Metadata": [
							820
						]
					},
					"id": 717,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 203,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 205,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 717,
							"sourceUnit": 795,
							"src": "131:36:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 204,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 794,
										"src": "139:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 207,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 717,
							"sourceUnit": 821,
							"src": "168:63:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 206,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 820,
										"src": "176:14:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 209,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 717,
							"sourceUnit": 1430,
							"src": "232:48:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 208,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1429,
										"src": "240:7:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 211,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 717,
							"sourceUnit": 137,
							"src": "281:65:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 210,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 41,
										"src": "289:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 213,
										"name": "Context",
										"nameLocations": [
											"1428:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1429,
										"src": "1428:7:2"
									},
									"id": 214,
									"nodeType": "InheritanceSpecifier",
									"src": "1428:7:2"
								},
								{
									"baseName": {
										"id": 215,
										"name": "IERC20",
										"nameLocations": [
											"1437:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 794,
										"src": "1437:6:2"
									},
									"id": 216,
									"nodeType": "InheritanceSpecifier",
									"src": "1437:6:2"
								},
								{
									"baseName": {
										"id": 217,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1445:14:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 820,
										"src": "1445:14:2"
									},
									"id": 218,
									"nodeType": "InheritanceSpecifier",
									"src": "1445:14:2"
								},
								{
									"baseName": {
										"id": 219,
										"name": "IERC20Errors",
										"nameLocations": [
											"1461:12:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 41,
										"src": "1461:12:2"
									},
									"id": 220,
									"nodeType": "InheritanceSpecifier",
									"src": "1461:12:2"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 212,
								"nodeType": "StructuredDocumentation",
								"src": "348:1052:2",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 716,
							"linearizedBaseContracts": [
								716,
								41,
								820,
								794,
								1429
							],
							"name": "ERC20",
							"nameLocation": "1419:5:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 224,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1524:9:2",
									"nodeType": "VariableDeclaration",
									"scope": 716,
									"src": "1480:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 223,
										"keyName": "account",
										"keyNameLocation": "1496:7:2",
										"keyType": {
											"id": 221,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1488:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1480:35:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 222,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1507:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 230,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1612:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 716,
									"src": "1540:83:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 229,
										"keyName": "account",
										"keyNameLocation": "1556:7:2",
										"keyType": {
											"id": 225,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1548:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1540:63:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 228,
											"keyName": "spender",
											"keyNameLocation": "1583:7:2",
											"keyType": {
												"id": 226,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1575:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1567:35:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 227,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1594:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 232,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1646:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 716,
									"src": "1630:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 231,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1630:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 234,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1680:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 716,
									"src": "1665:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 233,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1665:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 236,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1706:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 716,
									"src": "1691:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 235,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1691:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 252,
										"nodeType": "Block",
										"src": "1952:57:2",
										"statements": [
											{
												"expression": {
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 244,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "1962:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 245,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 239,
														"src": "1970:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1962:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 247,
												"nodeType": "ExpressionStatement",
												"src": "1962:13:2"
											},
											{
												"expression": {
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 248,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 236,
														"src": "1985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 249,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 241,
														"src": "1995:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1985:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "1985:17:2"
											}
										]
									},
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "1720:171:2",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 253,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1922:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1908:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 238,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1908:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1943:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 253,
												"src": "1929:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 240,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1929:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1907:44:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1952:0:2"
									},
									"scope": 716,
									"src": "1896:113:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										807
									],
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "2134:29:2",
										"statements": [
											{
												"expression": {
													"id": 259,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 234,
													"src": "2151:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 258,
												"id": 260,
												"nodeType": "Return",
												"src": "2144:12:2"
											}
										]
									},
									"documentation": {
										"id": 254,
										"nodeType": "StructuredDocumentation",
										"src": "2015:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "2083:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2087:2:2"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "2119:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 256,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2119:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2118:15:2"
									},
									"scope": 716,
									"src": "2074:89:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										813
									],
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "2338:31:2",
										"statements": [
											{
												"expression": {
													"id": 268,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 236,
													"src": "2355:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 267,
												"id": 269,
												"nodeType": "Return",
												"src": "2348:14:2"
											}
										]
									},
									"documentation": {
										"id": 263,
										"nodeType": "StructuredDocumentation",
										"src": "2169:102:2",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2285:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2291:2:2"
									},
									"returnParameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "2323:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 265,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2323:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2322:15:2"
									},
									"scope": 716,
									"src": "2276:93:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										819
									],
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "3058:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 277,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3075:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 276,
												"id": 278,
												"nodeType": "Return",
												"src": "3068:9:2"
											}
										]
									},
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "2375:622:2",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "3011:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3019:2:2"
									},
									"returnParameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "3051:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 274,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3051:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3050:7:2"
									},
									"scope": 716,
									"src": "3002:82:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										743
									],
									"body": {
										"id": 288,
										"nodeType": "Block",
										"src": "3205:36:2",
										"statements": [
											{
												"expression": {
													"id": 286,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 232,
													"src": "3222:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 285,
												"id": 287,
												"nodeType": "Return",
												"src": "3215:19:2"
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "3090:49:2",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 289,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3153:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3164:2:2"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 289,
												"src": "3196:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3196:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3195:9:2"
									},
									"scope": 716,
									"src": "3144:97:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										751
									],
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "3373:42:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 297,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 224,
														"src": "3390:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 299,
													"indexExpression": {
														"id": 298,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 292,
														"src": "3400:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3390:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 296,
												"id": 300,
												"nodeType": "Return",
												"src": "3383:25:2"
											}
										]
									},
									"documentation": {
										"id": 290,
										"nodeType": "StructuredDocumentation",
										"src": "3247:47:2",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3308:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 293,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 292,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3326:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3318:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3318:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:17:2"
									},
									"returnParameters": {
										"id": 296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 295,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "3364:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 294,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3364:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3363:9:2"
									},
									"scope": 716,
									"src": "3299:116:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										761
									],
									"body": {
										"id": 325,
										"nodeType": "Block",
										"src": "3685:103:2",
										"statements": [
											{
												"assignments": [
													313
												],
												"declarations": [
													{
														"constant": false,
														"id": 313,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3703:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 325,
														"src": "3695:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 312,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3695:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 316,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 314,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1411,
														"src": "3711:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3711:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3695:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 318,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 313,
															"src": "3743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 319,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "3750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 320,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 307,
															"src": "3754:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 317,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "3733:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3733:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 322,
												"nodeType": "ExpressionStatement",
												"src": "3733:27:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3777:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 311,
												"id": 324,
												"nodeType": "Return",
												"src": "3770:11:2"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "3421:184:2",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 326,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3619:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3636:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "3628:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 304,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3628:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3648:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "3640:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3640:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3627:27:2"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 326,
												"src": "3679:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 309,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3679:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:6:2"
									},
									"scope": 716,
									"src": "3610:178:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										771
									],
									"body": {
										"id": 342,
										"nodeType": "Block",
										"src": "3935:51:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 336,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "3952:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 338,
														"indexExpression": {
															"id": 337,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "3964:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3952:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 340,
													"indexExpression": {
														"id": 339,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "3971:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3952:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 335,
												"id": 341,
												"nodeType": "Return",
												"src": "3945:34:2"
											}
										]
									},
									"documentation": {
										"id": 327,
										"nodeType": "StructuredDocumentation",
										"src": "3794:47:2",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 343,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3855:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3873:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3865:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3865:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3888:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3880:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3880:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3864:32:2"
									},
									"returnParameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 343,
												"src": "3926:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3926:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3925:9:2"
									},
									"scope": 716,
									"src": "3846:140:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										781
									],
									"body": {
										"id": 366,
										"nodeType": "Block",
										"src": "4372:107:2",
										"statements": [
											{
												"assignments": [
													354
												],
												"declarations": [
													{
														"constant": false,
														"id": 354,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4390:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 366,
														"src": "4382:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 353,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4382:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 357,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 355,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1411,
														"src": "4398:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4398:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4382:28:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 359,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 354,
															"src": "4429:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 360,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 346,
															"src": "4436:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 361,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "4445:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 358,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															607,
															667
														],
														"referencedDeclaration": 607,
														"src": "4420:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4420:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 363,
												"nodeType": "ExpressionStatement",
												"src": "4420:31:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 364,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4468:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 352,
												"id": 365,
												"nodeType": "Return",
												"src": "4461:11:2"
											}
										]
									},
									"documentation": {
										"id": 344,
										"nodeType": "StructuredDocumentation",
										"src": "3992:296:2",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 367,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4302:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4318:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "4310:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4310:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4335:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "4327:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 347,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4327:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4309:32:2"
									},
									"returnParameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "4366:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 350,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4366:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4365:6:2"
									},
									"scope": 716,
									"src": "4293:186:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										793
									],
									"body": {
										"id": 398,
										"nodeType": "Block",
										"src": "5132:151:2",
										"statements": [
											{
												"assignments": [
													380
												],
												"declarations": [
													{
														"constant": false,
														"id": 380,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5150:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 398,
														"src": "5142:15:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 379,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5142:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 383,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 381,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1411,
														"src": "5160:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5160:12:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5142:30:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 385,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "5198:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 386,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 380,
															"src": "5204:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 387,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "5213:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 384,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 715,
														"src": "5182:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5182:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "ExpressionStatement",
												"src": "5182:37:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 391,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "5239:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 392,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 372,
															"src": "5245:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 393,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 374,
															"src": "5249:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 390,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "5229:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5229:26:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 395,
												"nodeType": "ExpressionStatement",
												"src": "5229:26:2"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5272:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 378,
												"id": 397,
												"nodeType": "Return",
												"src": "5265:11:2"
											}
										]
									},
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "4485:549:2",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 399,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "5048:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5069:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "5061:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5061:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5083:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "5075:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 371,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5075:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5095:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "5087:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 373,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5087:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5060:41:2"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 399,
												"src": "5126:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 376,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5126:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5125:6:2"
									},
									"scope": 716,
									"src": "5039:244:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 445,
										"nodeType": "Block",
										"src": "5725:231:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 414,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 409,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "5739:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 412,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5755:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 411,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5747:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 410,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5747:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 413,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5747:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5739:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 423,
												"nodeType": "IfStatement",
												"src": "5735:86:2",
												"trueBody": {
													"id": 422,
													"nodeType": "Block",
													"src": "5759:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 418,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5807:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 417,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5799:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 416,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5799:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 419,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5799:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 415,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "5780:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 420,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5780:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 421,
															"nodeType": "RevertStatement",
															"src": "5773:37:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 429,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 424,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 404,
														"src": "5834:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 427,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5848:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5840:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 425,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5840:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 428,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5840:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5834:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 438,
												"nodeType": "IfStatement",
												"src": "5830:86:2",
												"trueBody": {
													"id": 437,
													"nodeType": "Block",
													"src": "5852:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 433,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5902:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 432,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5894:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 431,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5894:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 434,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5894:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 430,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "5873:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5873:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 436,
															"nodeType": "RevertStatement",
															"src": "5866:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 440,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 402,
															"src": "5933:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 441,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 404,
															"src": "5939:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 442,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 406,
															"src": "5943:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 439,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "5925:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5925:24:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 444,
												"nodeType": "ExpressionStatement",
												"src": "5925:24:2"
											}
										]
									},
									"documentation": {
										"id": 400,
										"nodeType": "StructuredDocumentation",
										"src": "5289:362:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 446,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5665:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 402,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5683:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "5675:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5675:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5697:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "5689:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5689:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 406,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5709:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "5701:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 405,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5701:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5674:41:2"
									},
									"returnParameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5725:0:2"
									},
									"scope": 716,
									"src": "5656:300:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 522,
										"nodeType": "Block",
										"src": "6346:1032:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 456,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 449,
														"src": "6360:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 459,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6376:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6368:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 457,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6368:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 460,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6360:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 493,
													"nodeType": "Block",
													"src": "6534:362:2",
													"statements": [
														{
															"assignments": [
																468
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 468,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6556:11:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 493,
																	"src": "6548:19:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 467,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6548:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 472,
															"initialValue": {
																"baseExpression": {
																	"id": 469,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 224,
																	"src": "6570:9:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 471,
																"indexExpression": {
																	"id": 470,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 449,
																	"src": "6580:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6570:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6548:37:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 473,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 468,
																	"src": "6603:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 474,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 453,
																	"src": "6617:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6603:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 483,
															"nodeType": "IfStatement",
															"src": "6599:115:2",
															"trueBody": {
																"id": 482,
																"nodeType": "Block",
																"src": "6624:90:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 477,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 449,
																					"src": "6674:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 478,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 468,
																					"src": "6680:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 479,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 453,
																					"src": "6693:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 476,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 11,
																				"src": "6649:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 480,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6649:50:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 481,
																		"nodeType": "RevertStatement",
																		"src": "6642:57:2"
																	}
																]
															}
														},
														{
															"id": 492,
															"nodeType": "UncheckedBlock",
															"src": "6727:159:2",
															"statements": [
																{
																	"expression": {
																		"id": 490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 484,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 224,
																				"src": "6834:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 486,
																			"indexExpression": {
																				"id": 485,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 449,
																				"src": "6844:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6834:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 487,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 468,
																				"src": "6852:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 488,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 453,
																				"src": "6866:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6852:19:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6834:37:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 491,
																	"nodeType": "ExpressionStatement",
																	"src": "6834:37:2"
																}
															]
														}
													]
												},
												"id": 494,
												"nodeType": "IfStatement",
												"src": "6356:540:2",
												"trueBody": {
													"id": 466,
													"nodeType": "Block",
													"src": "6380:148:2",
													"statements": [
														{
															"expression": {
																"id": 464,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 462,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 232,
																	"src": "6496:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 463,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 453,
																	"src": "6512:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6496:21:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 465,
															"nodeType": "ExpressionStatement",
															"src": "6496:21:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 500,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 495,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 451,
														"src": "6910:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6924:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6916:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 496,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6916:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 499,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6916:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6910:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 514,
													"nodeType": "Block",
													"src": "7125:206:2",
													"statements": [
														{
															"id": 513,
															"nodeType": "UncheckedBlock",
															"src": "7139:182:2",
															"statements": [
																{
																	"expression": {
																		"id": 511,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 507,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 224,
																				"src": "7284:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 509,
																			"indexExpression": {
																				"id": 508,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 451,
																				"src": "7294:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7284:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 510,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 453,
																			"src": "7301:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7284:22:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 512,
																	"nodeType": "ExpressionStatement",
																	"src": "7284:22:2"
																}
															]
														}
													]
												},
												"id": 515,
												"nodeType": "IfStatement",
												"src": "6906:425:2",
												"trueBody": {
													"id": 506,
													"nodeType": "Block",
													"src": "6928:191:2",
													"statements": [
														{
															"id": 505,
															"nodeType": "UncheckedBlock",
															"src": "6942:167:2",
															"statements": [
																{
																	"expression": {
																		"id": 503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 501,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 232,
																			"src": "7073:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 502,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 453,
																			"src": "7089:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7073:21:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 504,
																	"nodeType": "ExpressionStatement",
																	"src": "7073:21:2"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 517,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 449,
															"src": "7355:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 518,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 451,
															"src": "7361:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 519,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 453,
															"src": "7365:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 516,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 728,
														"src": "7346:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 520,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7346:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 521,
												"nodeType": "EmitStatement",
												"src": "7341:30:2"
											}
										]
									},
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "5962:304:2",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6280:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 454,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6296:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "6288:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6288:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6310:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "6302:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6302:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 453,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6322:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 523,
												"src": "6314:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 452,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6314:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6287:41:2"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6346:0:2"
									},
									"scope": 716,
									"src": "6271:1107:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 555,
										"nodeType": "Block",
										"src": "7777:152:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 531,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 526,
														"src": "7791:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 534,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7810:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 533,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7802:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 532,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7802:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 535,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7802:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7791:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 545,
												"nodeType": "IfStatement",
												"src": "7787:91:2",
												"trueBody": {
													"id": 544,
													"nodeType": "Block",
													"src": "7814:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7864:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 539,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7856:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 538,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7856:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7856:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 537,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "7835:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 542,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7835:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 543,
															"nodeType": "RevertStatement",
															"src": "7828:39:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 549,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7903:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7895:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 547,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7895:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 550,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7895:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 551,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 526,
															"src": "7907:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 552,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "7916:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 546,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "7887:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7887:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 554,
												"nodeType": "ExpressionStatement",
												"src": "7887:35:2"
											}
										]
									},
									"documentation": {
										"id": 524,
										"nodeType": "StructuredDocumentation",
										"src": "7384:332:2",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 556,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7730:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7744:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "7736:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7736:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7761:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "7753:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7753:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7735:32:2"
									},
									"returnParameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7777:0:2"
									},
									"scope": 716,
									"src": "7721:208:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 588,
										"nodeType": "Block",
										"src": "8303:150:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 564,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 559,
														"src": "8317:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 567,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8336:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 566,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8328:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 565,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8328:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 568,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8328:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8317:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 578,
												"nodeType": "IfStatement",
												"src": "8313:89:2",
												"trueBody": {
													"id": 577,
													"nodeType": "Block",
													"src": "8340:62:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 573,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8388:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 572,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8380:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 571,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8380:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 574,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8380:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 570,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 16,
																	"src": "8361:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8361:30:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 576,
															"nodeType": "RevertStatement",
															"src": "8354:37:2"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 580,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 559,
															"src": "8419:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 583,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8436:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8428:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 581,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8428:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 584,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8428:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 585,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "8440:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 579,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 523,
														"src": "8411:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8411:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 587,
												"nodeType": "ExpressionStatement",
												"src": "8411:35:2"
											}
										]
									},
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "7935:307:2",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8256:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8270:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "8262:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8262:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8287:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 589,
												"src": "8279:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8279:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8261:32:2"
									},
									"returnParameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8303:0:2"
									},
									"scope": 716,
									"src": "8247:206:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 606,
										"nodeType": "Block",
										"src": "9063:54:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 600,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 592,
															"src": "9082:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 601,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "9089:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 602,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "9098:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9105:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 599,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															607,
															667
														],
														"referencedDeclaration": 667,
														"src": "9073:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9073:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 605,
												"nodeType": "ExpressionStatement",
												"src": "9073:37:2"
											}
										]
									},
									"documentation": {
										"id": 590,
										"nodeType": "StructuredDocumentation",
										"src": "8459:525:2",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 607,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8998:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 592,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9015:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "9007:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 591,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9007:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9030:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "9022:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9047:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 607,
												"src": "9039:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9039:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9006:47:2"
									},
									"returnParameters": {
										"id": 598,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9063:0:2"
									},
									"scope": 716,
									"src": "8989:128:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 666,
										"nodeType": "Block",
										"src": "10047:334:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 619,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 610,
														"src": "10061:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 622,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10078:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10070:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 620,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10070:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 623,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10070:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10061:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 633,
												"nodeType": "IfStatement",
												"src": "10057:89:2",
												"trueBody": {
													"id": 632,
													"nodeType": "Block",
													"src": "10082:64:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 628,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10132:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 627,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10124:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 626,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10124:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10124:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 625,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 35,
																	"src": "10103:20:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 630,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10103:32:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 631,
															"nodeType": "RevertStatement",
															"src": "10096:39:2"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 634,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 612,
														"src": "10159:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10178:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 636,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10170:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 635,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10170:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 638,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10170:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10159:21:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 648,
												"nodeType": "IfStatement",
												"src": "10155:90:2",
												"trueBody": {
													"id": 647,
													"nodeType": "Block",
													"src": "10182:63:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 643,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10231:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10223:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 641,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10223:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 644,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10223:10:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 640,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "10203:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 645,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10203:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 646,
															"nodeType": "RevertStatement",
															"src": "10196:38:2"
														}
													]
												}
											},
											{
												"expression": {
													"id": 655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 649,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "10254:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 652,
															"indexExpression": {
																"id": 650,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 610,
																"src": "10266:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10254:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 653,
														"indexExpression": {
															"id": 651,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 612,
															"src": "10273:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10254:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 654,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 614,
														"src": "10284:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10254:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 656,
												"nodeType": "ExpressionStatement",
												"src": "10254:35:2"
											},
											{
												"condition": {
													"id": 657,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 616,
													"src": "10303:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 665,
												"nodeType": "IfStatement",
												"src": "10299:76:2",
												"trueBody": {
													"id": 664,
													"nodeType": "Block",
													"src": "10314:61:2",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 659,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 610,
																		"src": "10342:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 660,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "10349:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 661,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 614,
																		"src": "10358:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 658,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 737,
																	"src": "10333:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 662,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10333:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 663,
															"nodeType": "EmitStatement",
															"src": "10328:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 608,
										"nodeType": "StructuredDocumentation",
										"src": "9123:821:2",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 667,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9958:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9975:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "9967:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9967:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9990:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "9982:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9982:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10007:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "9999:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 613,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9999:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "10019:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 667,
												"src": "10014:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 615,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10014:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9966:63:2"
									},
									"returnParameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10047:0:2"
									},
									"scope": 716,
									"src": "9949:432:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "10752:388:2",
										"statements": [
											{
												"assignments": [
													678
												],
												"declarations": [
													{
														"constant": false,
														"id": 678,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10770:16:2",
														"nodeType": "VariableDeclaration",
														"scope": 714,
														"src": "10762:24:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 677,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10762:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 683,
												"initialValue": {
													"arguments": [
														{
															"id": 680,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 670,
															"src": "10799:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 681,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 672,
															"src": "10806:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 679,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 343,
														"src": "10789:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10789:25:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10762:52:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 690,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 684,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "10828:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 687,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10853:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 686,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10853:7:2",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 685,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10848:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 688,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10848:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 689,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10862:3:2",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10848:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10828:37:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 713,
												"nodeType": "IfStatement",
												"src": "10824:310:2",
												"trueBody": {
													"id": 712,
													"nodeType": "Block",
													"src": "10867:267:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 693,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 691,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 678,
																	"src": "10885:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 692,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 674,
																	"src": "10904:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10885:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 701,
															"nodeType": "IfStatement",
															"src": "10881:130:2",
															"trueBody": {
																"id": 700,
																"nodeType": "Block",
																"src": "10911:100:2",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 695,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 672,
																					"src": "10963:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 696,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 678,
																					"src": "10972:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 697,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 674,
																					"src": "10990:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 694,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 30,
																				"src": "10936:26:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 698,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10936:60:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 699,
																		"nodeType": "RevertStatement",
																		"src": "10929:67:2"
																	}
																]
															}
														},
														{
															"id": 711,
															"nodeType": "UncheckedBlock",
															"src": "11024:100:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 703,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 670,
																				"src": "11061:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 704,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 672,
																				"src": "11068:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 707,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 705,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 678,
																					"src": "11077:16:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 706,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 674,
																					"src": "11096:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11077:24:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 708,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11103:5:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 702,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				607,
																				667
																			],
																			"referencedDeclaration": 667,
																			"src": "11052:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "11052:57:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 710,
																	"nodeType": "ExpressionStatement",
																	"src": "11052:57:2"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 668,
										"nodeType": "StructuredDocumentation",
										"src": "10387:271:2",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10672:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10696:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "10688:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 669,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10688:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 672,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10711:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "10703:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10703:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10728:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 715,
												"src": "10720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10687:47:2"
									},
									"returnParameters": {
										"id": 676,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10752:0:2"
									},
									"scope": 716,
									"src": "10663:477:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 717,
							"src": "1401:9741:2",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40
							],
							"usedEvents": [
								728,
								737
							]
						}
					],
					"src": "105:11038:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							794
						]
					},
					"id": 795,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 718,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 719,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 794,
							"linearizedBaseContracts": [
								794
							],
							"name": "IERC20",
							"nameLocation": "213:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 720,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 728,
									"name": "Transfer",
									"nameLocation": "395:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 722,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "404:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 721,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 724,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "426:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 723,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 726,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 728,
												"src": "446:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 725,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:3"
									},
									"src": "389:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 729,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 737,
									"name": "Approval",
									"nameLocation": "626:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 736,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "635:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 730,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 733,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "658:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 732,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 735,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "683:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 734,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:3"
									},
									"src": "620:78:3"
								},
								{
									"documentation": {
										"id": 738,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:3",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 743,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 743,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 794,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 744,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:3",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 751,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 746,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "930:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 745,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:3"
									},
									"returnParameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 751,
												"src": "970:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 748,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:3"
									},
									"scope": 794,
									"src": "911:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 752,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:3",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 761,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "1221:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 753,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "1233:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 755,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:3"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 761,
												"src": "1266:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 758,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:3"
									},
									"scope": 794,
									"src": "1203:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 762,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 771,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 764,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "1566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 763,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 766,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "1581:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 765,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:3"
									},
									"returnParameters": {
										"id": 770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 771,
												"src": "1621:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 768,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:3"
									},
									"scope": 794,
									"src": "1547:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 772,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:3",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 781,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 774,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "2325:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 773,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "2342:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:3"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 781,
												"src": "2375:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 778,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:3"
									},
									"scope": 794,
									"src": "2308:73:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 782,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:3",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 793,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 789,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "2711:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 783,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 786,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "2725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 785,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 788,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "2737:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:3"
									},
									"returnParameters": {
										"id": 792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 791,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 793,
												"src": "2770:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 790,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:3"
									},
									"scope": 794,
									"src": "2689:87:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 795,
							"src": "203:2575:3",
							"usedErrors": [],
							"usedEvents": [
								728,
								737
							]
						}
					],
					"src": "106:2673:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							794
						],
						"IERC20Metadata": [
							820
						]
					},
					"id": 821,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 796,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 798,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 821,
							"sourceUnit": 795,
							"src": "151:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 797,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 794,
										"src": "159:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 800,
										"name": "IERC20",
										"nameLocations": [
											"305:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 794,
										"src": "305:6:4"
									},
									"id": 801,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:4"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 799,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:4",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 820,
							"linearizedBaseContracts": [
								820,
								794
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 807,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 803,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:4"
									},
									"returnParameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 807,
												"src": "416:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 804,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:4"
									},
									"scope": 820,
									"src": "377:54:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 808,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:4",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 813,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:4"
									},
									"returnParameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "539:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 810,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:4"
									},
									"scope": 820,
									"src": "498:56:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:4",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 819,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:4"
									},
									"returnParameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "673:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 816,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:4"
									},
									"scope": 820,
									"src": "630:50:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 821,
							"src": "277:405:4",
							"usedErrors": [],
							"usedEvents": [
								728,
								737
							]
						}
					],
					"src": "125:558:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							856
						]
					},
					"id": 857,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 822,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 823,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:5",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 856,
							"linearizedBaseContracts": [
								856
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 824,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:5",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 841,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 826,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "3022:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 825,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "3045:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "3070:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 832,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "3093:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 831,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "3119:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 833,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "3136:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 835,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 841,
												"src": "3155:9:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 837,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:5"
									},
									"returnParameters": {
										"id": 840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:5"
									},
									"scope": 856,
									"src": "2997:183:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 842,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:5",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 849,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 845,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "3501:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 843,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:5"
									},
									"returnParameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 849,
												"src": "3539:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:5"
									},
									"scope": 856,
									"src": "3485:63:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 850,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:5",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 855,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 851,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:5"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 855,
												"src": "3791:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 852,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:5"
									},
									"scope": 856,
									"src": "3740:60:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 857,
							"src": "2113:1689:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							1399
						],
						"IERC20": [
							794
						],
						"IERC20Permit": [
							856
						],
						"SafeERC20": [
							1146
						]
					},
					"id": 1147,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 858,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 860,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1147,
							"sourceUnit": 795,
							"src": "141:37:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 859,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 794,
										"src": "149:6:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 862,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1147,
							"sourceUnit": 857,
							"src": "179:60:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 861,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 856,
										"src": "187:12:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 864,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1147,
							"sourceUnit": 1400,
							"src": "240:51:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 863,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1399,
										"src": "248:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 865,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:6",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 1146,
							"linearizedBaseContracts": [
								1146
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 868,
									"libraryName": {
										"id": 866,
										"name": "Address",
										"nameLocations": [
											"781:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1399,
										"src": "781:7:6"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:6",
									"typeName": {
										"id": 867,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 869,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:6",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 873,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "907:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 870,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:6"
									},
									"src": "876:46:6"
								},
								{
									"documentation": {
										"id": 874,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:6",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 882,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "1043:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 875,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:6",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "1060:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 877,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 882,
												"src": "1086:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 879,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:6"
									},
									"src": "1004:109:6"
								},
								{
									"body": {
										"id": 905,
										"nodeType": "Block",
										"src": "1375:88:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 894,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "1405:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$794",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 897,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 886,
																		"src": "1427:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$794",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 898,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:6",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 761,
																	"src": "1427:14:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 899,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 888,
																			"src": "1444:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 900,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 890,
																			"src": "1448:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 901,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 895,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 896,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 902,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$794",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 893,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "1385:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$794_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 903,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 904,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:6"
											}
										]
									},
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:6",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "1325:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$794",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 885,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 884,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 794,
														"src": "1325:6:6"
													},
													"referencedDeclaration": 794,
													"src": "1325:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$794",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "1339:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 890,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 906,
												"src": "1351:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 889,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:6"
									},
									"returnParameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:6"
									},
									"scope": 1146,
									"src": "1303:160:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 932,
										"nodeType": "Block",
										"src": "1792:98:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 920,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 910,
															"src": "1822:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$794",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 923,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 910,
																		"src": "1844:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$794",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 924,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:6",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 793,
																	"src": "1844:18:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 925,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 912,
																			"src": "1865:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 926,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 914,
																			"src": "1871:2:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 927,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 916,
																			"src": "1875:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 928,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 921,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 922,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:6",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 929,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$794",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 919,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1096,
														"src": "1802:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$794_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 930,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 931,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:6"
											}
										]
									},
									"documentation": {
										"id": 907,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:6",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 933,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "1728:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$794",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 909,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 908,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 794,
														"src": "1728:6:6"
													},
													"referencedDeclaration": 794,
													"src": "1728:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$794",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "1742:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "1756:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 916,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 933,
												"src": "1768:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:6"
									},
									"returnParameters": {
										"id": 918,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:6"
									},
									"scope": 1146,
									"src": "1702:188:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 963,
										"nodeType": "Block",
										"src": "2167:139:6",
										"statements": [
											{
												"assignments": [
													945
												],
												"declarations": [
													{
														"constant": false,
														"id": 945,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 963,
														"src": "2177:20:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 944,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 954,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 950,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$1146",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$1146",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 948,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 952,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "2231:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 946,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "2200:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$794",
																"typeString": "contract IERC20"
															}
														},
														"id": 947,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:6",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 771,
														"src": "2200:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 956,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 937,
															"src": "2262:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$794",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 957,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 939,
															"src": "2269:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 958,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 945,
																"src": "2278:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 959,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 941,
																"src": "2293:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$794",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 955,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1054,
														"src": "2249:12:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$794_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 961,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 962,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:6"
											}
										]
									},
									"documentation": {
										"id": 934,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:6",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 964,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 942,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 937,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "2112:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$794",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 936,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 935,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 794,
														"src": "2112:6:6"
													},
													"referencedDeclaration": 794,
													"src": "2112:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$794",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "2126:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "2143:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:6"
									},
									"returnParameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:6"
									},
									"scope": 1146,
									"src": "2081:225:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1006,
										"nodeType": "Block",
										"src": "2607:370:6",
										"statements": [
											{
												"id": 1005,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:6",
												"statements": [
													{
														"assignments": [
															976
														],
														"declarations": [
															{
																"constant": false,
																"id": 976,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:6",
																"nodeType": "VariableDeclaration",
																"scope": 1005,
																"src": "2641:24:6",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 975,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 985,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 981,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1146",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1146",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 980,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 979,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 982,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 983,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "2699:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 977,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 968,
																	"src": "2668:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$794",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:6",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 771,
																"src": "2668:15:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 984,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:6"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 988,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 986,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 976,
																"src": "2725:16:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 987,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "2744:17:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 996,
														"nodeType": "IfStatement",
														"src": "2721:160:6",
														"trueBody": {
															"id": 995,
															"nodeType": "Block",
															"src": "2763:118:6",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 990,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 970,
																				"src": "2821:7:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 991,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 976,
																				"src": "2830:16:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 992,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 972,
																				"src": "2848:17:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 989,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 882,
																			"src": "2788:32:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																				"typeString": "function (address,uint256,uint256) pure"
																			}
																		},
																		"id": 993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 994,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:6"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 998,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 968,
																	"src": "2907:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$794",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 999,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 970,
																	"src": "2914:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1002,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1000,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 976,
																		"src": "2923:16:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1001,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 972,
																		"src": "2942:17:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$794",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 997,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1054,
																"src": "2894:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$794_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 1003,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1004,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:6"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 965,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:6",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 1007,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "2540:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$794",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 967,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 966,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 794,
														"src": "2540:6:6"
													},
													"referencedDeclaration": 794,
													"src": "2540:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$794",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "2554:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 969,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "2571:25:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:6"
									},
									"returnParameters": {
										"id": 974,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:6"
									},
									"scope": 1146,
									"src": "2509:468:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1053,
										"nodeType": "Block",
										"src": "3373:303:6",
										"statements": [
											{
												"assignments": [
													1019
												],
												"declarations": [
													{
														"constant": false,
														"id": 1019,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:6",
														"nodeType": "VariableDeclaration",
														"scope": 1053,
														"src": "3383:25:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1018,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1028,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1022,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1011,
																"src": "3426:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$794",
																	"typeString": "contract IERC20"
																}
															},
															"id": 1023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:6",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 781,
															"src": "3426:13:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 1024,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1013,
																	"src": "3442:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1025,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1015,
																	"src": "3451:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1026,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:6",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 1020,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:6",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 1021,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:6",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 1027,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:6"
											},
											{
												"condition": {
													"id": 1033,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:6",
													"subExpression": {
														"arguments": [
															{
																"id": 1030,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1011,
																"src": "3498:5:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$794",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 1031,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1019,
																"src": "3505:12:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$794",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 1029,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1145,
															"src": "3474:23:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$794_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 1032,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1052,
												"nodeType": "IfStatement",
												"src": "3469:201:6",
												"trueBody": {
													"id": 1051,
													"nodeType": "Block",
													"src": "3520:150:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1035,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1011,
																		"src": "3554:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$794",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 1038,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1011,
																					"src": "3576:5:6",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$794",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1039,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:6",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 781,
																				"src": "3576:13:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1040,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1013,
																						"src": "3592:7:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 1041,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 1042,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 1036,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1037,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:6",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 1043,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$794",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1034,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "3534:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$794_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1044,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1045,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1047,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1011,
																		"src": "3639:5:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$794",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 1048,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1019,
																		"src": "3646:12:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$794",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1046,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1096,
																	"src": "3619:19:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$794_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 1049,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1050,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:6",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 1054,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1011,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "3318:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$794",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1010,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1009,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 794,
														"src": "3318:6:6"
													},
													"referencedDeclaration": 794,
													"src": "3318:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$794",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1013,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "3332:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1012,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1054,
												"src": "3349:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1014,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:6"
									},
									"returnParameters": {
										"id": 1017,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:6"
									},
									"scope": 1146,
									"src": "3296:380:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1095,
										"nodeType": "Block",
										"src": "4129:559:6",
										"statements": [
											{
												"assignments": [
													1064
												],
												"declarations": [
													{
														"constant": false,
														"id": 1064,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1095,
														"src": "4478:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1063,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1072,
												"initialValue": {
													"arguments": [
														{
															"id": 1070,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1060,
															"src": "4532:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1067,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1058,
																	"src": "4512:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$794",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$794",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1066,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1065,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1069,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:6",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1220,
														"src": "4504:27:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:6"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1085,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1076,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 1073,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1064,
																"src": "4551:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 1075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 1084,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:6",
														"subExpression": {
															"arguments": [
																{
																	"id": 1079,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1064,
																	"src": "4589:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 1081,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 1080,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:6",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 1082,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 1077,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1078,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:6",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1083,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1094,
												"nodeType": "IfStatement",
												"src": "4547:135:6",
												"trueBody": {
													"id": 1093,
													"nodeType": "Block",
													"src": "4610:72:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1089,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1058,
																				"src": "4664:5:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$794",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$794",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 1088,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1087,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:6",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1090,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1086,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 873,
																	"src": "4631:24:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1092,
															"nodeType": "RevertStatement",
															"src": "4624:47:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1055,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1058,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "4088:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$794",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1057,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1056,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 794,
														"src": "4088:6:6"
													},
													"referencedDeclaration": 794,
													"src": "4088:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$794",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1096,
												"src": "4102:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1059,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:6"
									},
									"returnParameters": {
										"id": 1062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:6"
									},
									"scope": 1146,
									"src": "4059:629:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1144,
										"nodeType": "Block",
										"src": "5278:489:6",
										"statements": [
											{
												"assignments": [
													1108,
													1110
												],
												"declarations": [
													{
														"constant": false,
														"id": 1108,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:6",
														"nodeType": "VariableDeclaration",
														"scope": 1144,
														"src": "5574:12:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1107,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1110,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:6",
														"nodeType": "VariableDeclaration",
														"scope": 1144,
														"src": "5588:23:6",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1109,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1118,
												"initialValue": {
													"arguments": [
														{
															"id": 1116,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1102,
															"src": "5635:4:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1113,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1100,
																	"src": "5623:5:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$794",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$794",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1112,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1111,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:6",
																	"typeDescriptions": {}
																}
															},
															"id": 1114,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1115,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:6",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:6"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 1133,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1119,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1108,
															"src": "5657:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 1131,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1123,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1120,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1110,
																				"src": "5669:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1121,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:6",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1122,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 1126,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1110,
																				"src": "5706:10:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 1128,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:6",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1127,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:6",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 1129,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 1124,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:6",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1125,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:6",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1130,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:6",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 1132,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 1136,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1100,
																			"src": "5738:5:6",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$794",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$794",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 1135,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1134,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:6",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1137,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:6",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 1138,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:6",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1139,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:6",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1140,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1106,
												"id": 1143,
												"nodeType": "Return",
												"src": "5650:110:6"
											}
										]
									},
									"documentation": {
										"id": 1097,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:6",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 1145,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "5222:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$794",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 1099,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1098,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 794,
														"src": "5222:6:6"
													},
													"referencedDeclaration": 794,
													"src": "5222:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$794",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1102,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "5236:17:6",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1101,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:6"
									},
									"returnParameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1145,
												"src": "5272:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1104,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:6"
									},
									"scope": 1146,
									"src": "5189:578:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1147,
							"src": "751:5018:6",
							"usedErrors": [
								873,
								882
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1399
						]
					},
					"id": 1400,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1148,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1149,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:7",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1399,
							"linearizedBaseContracts": [
								1399
							],
							"name": "Address",
							"nameLocation": "203:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1150,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:7",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1154,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1152,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1154,
												"src": "349:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:7"
									},
									"src": "316:50:7"
								},
								{
									"documentation": {
										"id": 1155,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:7",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1159,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1157,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "475:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1156,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:7"
									},
									"src": "452:39:7"
								},
								{
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:7",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1162,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:7"
									},
									"src": "591:24:7"
								},
								{
									"body": {
										"id": 1202,
										"nodeType": "Block",
										"src": "1602:260:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1172,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1399",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1399",
																		"typeString": "library Address"
																	}
																],
																"id": 1171,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1170,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1174,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1175,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "1640:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1185,
												"nodeType": "IfStatement",
												"src": "1612:109:7",
												"trueBody": {
													"id": 1184,
													"nodeType": "Block",
													"src": "1648:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1180,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1399",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1399",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1179,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1178,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1181,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1177,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1154,
																	"src": "1669:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1182,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1183,
															"nodeType": "RevertStatement",
															"src": "1662:48:7"
														}
													]
												}
											},
											{
												"assignments": [
													1187,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1187,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1202,
														"src": "1732:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1186,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1194,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1192,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:7",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1188,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "1750:9:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1190,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1167,
																"src": "1772:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:7"
											},
											{
												"condition": {
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:7",
													"subExpression": {
														"id": 1195,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1187,
														"src": "1798:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1201,
												"nodeType": "IfStatement",
												"src": "1793:63:7",
												"trueBody": {
													"id": 1200,
													"nodeType": "Block",
													"src": "1807:49:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1197,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1162,
																	"src": "1828:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1199,
															"nodeType": "RevertStatement",
															"src": "1821:24:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:7",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:7",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "1550:25:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:7",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1203,
												"src": "1577:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1166,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:7"
									},
									"returnParameters": {
										"id": 1169,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:7"
									},
									"scope": 1399,
									"src": "1531:331:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1219,
										"nodeType": "Block",
										"src": "2794:62:7",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1214,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1206,
															"src": "2833:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1215,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1208,
															"src": "2841:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:7",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1213,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1266,
														"src": "2811:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1212,
												"id": 1218,
												"nodeType": "Return",
												"src": "2804:45:7"
											}
										]
									},
									"documentation": {
										"id": 1204,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:7",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1206,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "2727:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1205,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1208,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "2743:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1207,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:7"
									},
									"returnParameters": {
										"id": 1212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1220,
												"src": "2780:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1210,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:7"
									},
									"scope": 1399,
									"src": "2705:151:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1265,
										"nodeType": "Block",
										"src": "3293:279:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1234,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1399",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1399",
																		"typeString": "library Address"
																	}
																],
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1232,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:7",
																	"typeDescriptions": {}
																}
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1236,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:7",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1237,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1227,
														"src": "3331:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1247,
												"nodeType": "IfStatement",
												"src": "3303:108:7",
												"trueBody": {
													"id": 1246,
													"nodeType": "Block",
													"src": "3338:73:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1242,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1399",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1399",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1240,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:7",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1239,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1154,
																	"src": "3359:26:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1245,
															"nodeType": "RevertStatement",
															"src": "3352:48:7"
														}
													]
												}
											},
											{
												"assignments": [
													1249,
													1251
												],
												"declarations": [
													{
														"constant": false,
														"id": 1249,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1265,
														"src": "3421:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1248,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1251,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1265,
														"src": "3435:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1250,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1258,
												"initialValue": {
													"arguments": [
														{
															"id": 1256,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1225,
															"src": "3488:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1252,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1223,
																"src": "3462:6:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1253,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:7",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1255,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1254,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1227,
																"src": "3481:5:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1257,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1260,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1223,
															"src": "3537:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1261,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1249,
															"src": "3545:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1262,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1251,
															"src": "3554:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1259,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "3510:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1231,
												"id": 1264,
												"nodeType": "Return",
												"src": "3503:62:7"
											}
										]
									},
									"documentation": {
										"id": 1221,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1266,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "3211:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1222,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1225,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "3227:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1224,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1227,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:7",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "3246:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1226,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:7"
									},
									"returnParameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1266,
												"src": "3279:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1229,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:7"
									},
									"scope": 1399,
									"src": "3180:392:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "3811:154:7",
										"statements": [
											{
												"assignments": [
													1277,
													1279
												],
												"declarations": [
													{
														"constant": false,
														"id": 1277,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1291,
														"src": "3822:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1276,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1279,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1291,
														"src": "3836:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1278,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1284,
												"initialValue": {
													"arguments": [
														{
															"id": 1282,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1271,
															"src": "3881:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1280,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "3863:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:7",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1286,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1269,
															"src": "3930:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1287,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "3938:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1288,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1279,
															"src": "3947:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1285,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "3903:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1275,
												"id": 1290,
												"nodeType": "Return",
												"src": "3896:62:7"
											}
										]
									},
									"documentation": {
										"id": 1267,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1272,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1269,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "3739:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1271,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "3755:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1270,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:7"
									},
									"returnParameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "3797:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1273,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:7"
									},
									"scope": 1399,
									"src": "3711:254:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1317,
										"nodeType": "Block",
										"src": "4203:156:7",
										"statements": [
											{
												"assignments": [
													1303,
													1305
												],
												"declarations": [
													{
														"constant": false,
														"id": 1303,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:7",
														"nodeType": "VariableDeclaration",
														"scope": 1317,
														"src": "4214:12:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1302,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1305,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:7",
														"nodeType": "VariableDeclaration",
														"scope": 1317,
														"src": "4228:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1304,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1310,
												"initialValue": {
													"arguments": [
														{
															"id": 1308,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1297,
															"src": "4275:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1306,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "4255:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1307,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:7",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:7"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1312,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1295,
															"src": "4324:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1313,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1303,
															"src": "4332:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1314,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1305,
															"src": "4341:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1311,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1358,
														"src": "4297:26:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1301,
												"id": 1316,
												"nodeType": "Return",
												"src": "4290:62:7"
											}
										]
									},
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:7",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1318,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "4136:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1297,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:7",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "4152:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1296,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:7"
									},
									"returnParameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1318,
												"src": "4189:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1299,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:7"
									},
									"scope": 1399,
									"src": "4106:253:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1357,
										"nodeType": "Block",
										"src": "4783:424:7",
										"statements": [
											{
												"condition": {
													"id": 1331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:7",
													"subExpression": {
														"id": 1330,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "4798:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1355,
													"nodeType": "Block",
													"src": "4857:344:7",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1346,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1340,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1337,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1325,
																			"src": "5045:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1338,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1345,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1341,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1321,
																				"src": "5071:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1342,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:7",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:7",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1352,
															"nodeType": "IfStatement",
															"src": "5041:119:7",
															"trueBody": {
																"id": 1351,
																"nodeType": "Block",
																"src": "5096:64:7",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1348,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1321,
																					"src": "5138:6:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1347,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1159,
																				"src": "5121:16:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1349,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1350,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:7"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1353,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1325,
																"src": "5180:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1329,
															"id": 1354,
															"nodeType": "Return",
															"src": "5173:17:7"
														}
													]
												},
												"id": 1356,
												"nodeType": "IfStatement",
												"src": "4793:408:7",
												"trueBody": {
													"id": 1336,
													"nodeType": "Block",
													"src": "4807:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1333,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1325,
																		"src": "4829:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1332,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1398,
																	"src": "4821:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1334,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1335,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1319,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:7",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1321,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:7",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "4670:14:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1323,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "4694:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1322,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1325,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "4716:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1324,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:7"
									},
									"returnParameters": {
										"id": 1329,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1328,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "4769:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1327,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:7"
									},
									"scope": 1399,
									"src": "4625:582:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1379,
										"nodeType": "Block",
										"src": "5509:122:7",
										"statements": [
											{
												"condition": {
													"id": 1369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:7",
													"subExpression": {
														"id": 1368,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1361,
														"src": "5524:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1377,
													"nodeType": "Block",
													"src": "5583:42:7",
													"statements": [
														{
															"expression": {
																"id": 1375,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1363,
																"src": "5604:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1367,
															"id": 1376,
															"nodeType": "Return",
															"src": "5597:17:7"
														}
													]
												},
												"id": 1378,
												"nodeType": "IfStatement",
												"src": "5519:106:7",
												"trueBody": {
													"id": 1374,
													"nodeType": "Block",
													"src": "5533:44:7",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1371,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1363,
																		"src": "5555:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1370,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1398,
																	"src": "5547:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1372,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1373,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1359,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:7",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "5433:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1360,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1363,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "5447:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1362,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:7"
									},
									"returnParameters": {
										"id": 1367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1366,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "5495:12:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1365,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:7"
									},
									"scope": 1399,
									"src": "5407:224:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1397,
										"nodeType": "Block",
										"src": "5798:461:7",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1386,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1383,
															"src": "5874:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1387,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:7",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:7",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1395,
													"nodeType": "Block",
													"src": "6204:49:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1392,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1162,
																	"src": "6225:15:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1393,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1394,
															"nodeType": "RevertStatement",
															"src": "6218:24:7"
														}
													]
												},
												"id": 1396,
												"nodeType": "IfStatement",
												"src": "5870:383:7",
												"trueBody": {
													"id": 1391,
													"nodeType": "Block",
													"src": "5897:301:7",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:7",
																"nodeType": "YulBlock",
																"src": "6055:133:7",
																"statements": [
																	{
																		"nativeSrc": "6073:40:7",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:7",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:7",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:7"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:7",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:7"
																			},
																			"nativeSrc": "6096:17:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:7"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:7",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:7",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:7",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:7",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:7",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:7"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:7",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:7"
																					},
																					"nativeSrc": "6137:19:7",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:7"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:7",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:7"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:7",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:7"
																			},
																			"nativeSrc": "6130:44:7",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:7"
																		},
																		"nativeSrc": "6130:44:7",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:7"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1383,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:7",
																	"valueSize": 1
																},
																{
																	"declaration": 1383,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:7",
																	"valueSize": 1
																}
															],
															"id": 1390,
															"nodeType": "InlineAssembly",
															"src": "6046:142:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1381,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:7",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1398,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:7",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "5760:23:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1382,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:7"
									},
									"returnParameters": {
										"id": 1385,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:7"
									},
									"scope": 1399,
									"src": "5743:516:7",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1400,
							"src": "195:6066:7",
							"usedErrors": [
								1154,
								1159,
								1162
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1429
						]
					},
					"id": 1430,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1401,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1402,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1429,
							"linearizedBaseContracts": [
								1429
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1410,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1407,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1406,
												"id": 1409,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1411,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1405,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1411,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1429,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1419,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1416,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1415,
												"id": 1418,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1414,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1413,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1429,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1427,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1425,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1424,
												"id": 1426,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1428,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1422,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1429,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1430,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"contracts/AMM.sol": {
				"ast": {
					"absolutePath": "contracts/AMM.sol",
					"exportedSymbols": {
						"AMM": [
							2248
						],
						"Address": [
							1399
						],
						"ERC20": [
							716
						],
						"IERC20": [
							794
						],
						"IERC20Permit": [
							856
						],
						"ReentrancyGuard": [
							201
						],
						"SafeERC20": [
							1146
						]
					},
					"id": 2249,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1431,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".18"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1433,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2249,
							"sourceUnit": 795,
							"src": "124:70:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1432,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 794,
										"src": "132:6:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
							"id": 1434,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2249,
							"sourceUnit": 1147,
							"src": "195:65:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1436,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2249,
							"sourceUnit": 717,
							"src": "261:68:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1435,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 716,
										"src": "269:5:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1438,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2249,
							"sourceUnit": 202,
							"src": "330:85:9",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1437,
										"name": "ReentrancyGuard",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 201,
										"src": "338:15:9",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1440,
										"name": "ERC20",
										"nameLocations": [
											"651:5:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 716,
										"src": "651:5:9"
									},
									"id": 1441,
									"nodeType": "InheritanceSpecifier",
									"src": "651:5:9"
								},
								{
									"baseName": {
										"id": 1442,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"658:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 201,
										"src": "658:15:9"
									},
									"id": 1443,
									"nodeType": "InheritanceSpecifier",
									"src": "658:15:9"
								}
							],
							"canonicalName": "AMM",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1439,
								"nodeType": "StructuredDocumentation",
								"src": "417:217:9",
								"text": " @title AMM\n @dev This contract implements a basic Automated Market Maker (AMM) using the constant product formula x * y = k.\n It supports adding/removing liquidity and swapping between two ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 2248,
							"linearizedBaseContracts": [
								2248,
								201,
								716,
								41,
								820,
								794,
								1429
							],
							"name": "AMM",
							"nameLocation": "644:3:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 1447,
									"libraryName": {
										"id": 1444,
										"name": "SafeERC20",
										"nameLocations": [
											"686:9:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1146,
										"src": "686:9:9"
									},
									"nodeType": "UsingForDirective",
									"src": "680:27:9",
									"typeName": {
										"id": 1446,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1445,
											"name": "IERC20",
											"nameLocations": [
												"700:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 794,
											"src": "700:6:9"
										},
										"referencedDeclaration": 794,
										"src": "700:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$794",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"constant": false,
									"functionSelector": "16dc165b",
									"id": 1450,
									"mutability": "mutable",
									"name": "tokenX",
									"nameLocation": "761:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 2248,
									"src": "747:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$794",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1449,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1448,
											"name": "IERC20",
											"nameLocations": [
												"747:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 794,
											"src": "747:6:9"
										},
										"referencedDeclaration": 794,
										"src": "747:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$794",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b7d19fc4",
									"id": 1453,
									"mutability": "mutable",
									"name": "tokenY",
									"nameLocation": "787:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 2248,
									"src": "773:20:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$794",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1452,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1451,
											"name": "IERC20",
											"nameLocations": [
												"773:6:9"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 794,
											"src": "773:6:9"
										},
										"referencedDeclaration": 794,
										"src": "773:6:9",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$794",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1455,
									"mutability": "mutable",
									"name": "reserveX",
									"nameLocation": "862:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 2248,
									"src": "846:24:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1454,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "846:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1457,
									"mutability": "mutable",
									"name": "reserveY",
									"nameLocation": "892:8:9",
									"nodeType": "VariableDeclaration",
									"scope": 2248,
									"src": "876:24:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1456,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "876:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "b8606eef",
									"id": 1460,
									"mutability": "mutable",
									"name": "feeBasisPoints",
									"nameLocation": "944:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 2248,
									"src": "929:34:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1458,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "929:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3330",
										"id": 1459,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "961:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_30_by_1",
											"typeString": "int_const 30"
										},
										"value": "30"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "126082cf",
									"id": 1463,
									"mutability": "constant",
									"name": "BASIS_POINTS_DIVISOR",
									"nameLocation": "1005:20:9",
									"nodeType": "VariableDeclaration",
									"scope": 2248,
									"src": "981:52:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1461,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "981:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 1462,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1028:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e3eece26",
									"id": 1467,
									"mutability": "mutable",
									"name": "governors",
									"nameLocation": "1101:9:9",
									"nodeType": "VariableDeclaration",
									"scope": 2248,
									"src": "1069:41:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1466,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1464,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1077:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1069:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1465,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1088:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "02aac7b2",
									"id": 1470,
									"mutability": "mutable",
									"name": "governorList",
									"nameLocation": "1133:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2248,
									"src": "1116:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 1468,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1116:7:9",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 1469,
										"nodeType": "ArrayTypeName",
										"src": "1116:9:9",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3c1d5df0",
									"id": 1473,
									"mutability": "mutable",
									"name": "twapInterval",
									"nameLocation": "1220:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 2248,
									"src": "1205:37:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1471,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1205:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1472,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1235:7:9",
										"subdenomination": "hours",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3600_by_1",
											"typeString": "int_const 3600"
										},
										"value": "1"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "58d50f0a",
									"id": 1475,
									"mutability": "mutable",
									"name": "lastTwapPriceX",
									"nameLocation": "1263:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 2248,
									"src": "1248:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1474,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1248:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "10f669b3",
									"id": 1477,
									"mutability": "mutable",
									"name": "lastTwapPriceY",
									"nameLocation": "1298:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 2248,
									"src": "1283:29:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1476,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1283:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9d6f09c1",
									"id": 1479,
									"mutability": "mutable",
									"name": "lastTwapTimestamp",
									"nameLocation": "1333:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 2248,
									"src": "1318:32:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1478,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1318:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "64b83944e79c3ce8d4c297411de637c3e102d064677aac0c163976ebdcd6f50e",
									"id": 1489,
									"name": "LiquidityAdded",
									"nameLocation": "1363:14:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1481,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "1394:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "1378:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1378:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1483,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountX",
												"nameLocation": "1412:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "1404:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1404:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountY",
												"nameLocation": "1429:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "1421:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1421:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1446:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1489,
												"src": "1438:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1377:79:9"
									},
									"src": "1357:100:9"
								},
								{
									"anonymous": false,
									"eventSelector": "1dc8bb69df2b8e91fbdcbfcf93d951b3f0000f085a95fe3f7946d6161439245d",
									"id": 1499,
									"name": "LiquidityRemoved",
									"nameLocation": "1468:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1491,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "1501:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "1485:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1490,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1485:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1493,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountX",
												"nameLocation": "1519:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "1511:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1492,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1495,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountY",
												"nameLocation": "1536:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "1528:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1494,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1497,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1553:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1499,
												"src": "1545:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1496,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1484:79:9"
									},
									"src": "1462:102:9"
								},
								{
									"anonymous": false,
									"eventSelector": "053d794b2310b8d186a24ae24a65ee066983a52a6efa6bd3df09a7601a3cb4f3",
									"id": 1511,
									"name": "Swap",
									"nameLocation": "1575:4:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1510,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"indexed": true,
												"mutability": "mutable",
												"name": "swapper",
												"nameLocation": "1596:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "1580:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1503,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountIn",
												"nameLocation": "1613:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "1605:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1502,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1605:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1505,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountOut",
												"nameLocation": "1631:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "1623:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1504,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1507,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenIn",
												"nameLocation": "1650:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "1642:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1642:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1509,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenOut",
												"nameLocation": "1667:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1511,
												"src": "1659:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1659:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:97:9"
									},
									"src": "1569:108:9"
								},
								{
									"anonymous": false,
									"eventSelector": "dc5a48d79e2e147530ff63ecdbed5a5a66adb9d5cf339384d5d076da197c40b5",
									"id": 1515,
									"name": "GovernorAdded",
									"nameLocation": "1688:13:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1513,
												"indexed": true,
												"mutability": "mutable",
												"name": "governor",
												"nameLocation": "1718:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1515,
												"src": "1702:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1512,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1702:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1701:26:9"
									},
									"src": "1682:46:9"
								},
								{
									"anonymous": false,
									"eventSelector": "1ebe834e73d60a5fec822c1e1727d34bc79f2ad977ed504581cc1822fe20fb5b",
									"id": 1519,
									"name": "GovernorRemoved",
									"nameLocation": "1739:15:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1517,
												"indexed": true,
												"mutability": "mutable",
												"name": "governor",
												"nameLocation": "1771:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1519,
												"src": "1755:24:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1516,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:26:9"
									},
									"src": "1733:48:9"
								},
								{
									"anonymous": false,
									"eventSelector": "528d9479e9f9889a87a3c30c7f7ba537e5e59c4c85a37733b16e57c62df61302",
									"id": 1525,
									"name": "FeeUpdated",
									"nameLocation": "1792:10:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1521,
												"indexed": false,
												"mutability": "mutable",
												"name": "oldFee",
												"nameLocation": "1811:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "1803:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1520,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1803:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1523,
												"indexed": false,
												"mutability": "mutable",
												"name": "newFee",
												"nameLocation": "1827:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1525,
												"src": "1819:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1522,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1819:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1802:32:9"
									},
									"src": "1786:49:9"
								},
								{
									"anonymous": false,
									"eventSelector": "9cfe07a59ebb9a772e1fee2abd40b53001de7c2f0b2e713de333f564118c32c4",
									"id": 1533,
									"name": "TwapUpdated",
									"nameLocation": "1846:11:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"indexed": false,
												"mutability": "mutable",
												"name": "newTwapPriceX",
												"nameLocation": "1866:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "1858:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1526,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1858:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"indexed": false,
												"mutability": "mutable",
												"name": "newTwapPriceY",
												"nameLocation": "1889:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "1881:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1528,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1881:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"indexed": false,
												"mutability": "mutable",
												"name": "timestamp",
												"nameLocation": "1912:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1533,
												"src": "1904:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1904:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1857:65:9"
									},
									"src": "1840:83:9"
								},
								{
									"body": {
										"id": 1544,
										"nodeType": "Block",
										"src": "1953:91:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 1536,
																"name": "governors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "1971:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 1539,
															"indexExpression": {
																"expression": {
																	"id": 1537,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1981:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 1538,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "1985:6:9",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1981:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1971:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "414d4d3a2063616c6c6572206973206e6f74206120676f7665726e6f72",
															"id": 1540,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1994:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2296ab563b257b59482997b18d89814bd9e2d117faf16d5269bc2ecd6675a405",
																"typeString": "literal_string \"AMM: caller is not a governor\""
															},
															"value": "AMM: caller is not a governor"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2296ab563b257b59482997b18d89814bd9e2d117faf16d5269bc2ecd6675a405",
																"typeString": "literal_string \"AMM: caller is not a governor\""
															}
														],
														"id": 1535,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1963:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1963:63:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1542,
												"nodeType": "ExpressionStatement",
												"src": "1963:63:9"
											},
											{
												"id": 1543,
												"nodeType": "PlaceholderStatement",
												"src": "2036:1:9"
											}
										]
									},
									"id": 1545,
									"name": "onlyGovernor",
									"nameLocation": "1938:12:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1950:2:9"
									},
									"src": "1929:115:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1583,
										"nodeType": "Block",
										"src": "2331:152:9",
										"statements": [
											{
												"expression": {
													"id": 1561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1557,
														"name": "tokenX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1450,
														"src": "2341:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$794",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1559,
																"name": "_tokenX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1548,
																"src": "2357:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1558,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "2350:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$794_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1560,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2350:15:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$794",
															"typeString": "contract IERC20"
														}
													},
													"src": "2341:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$794",
														"typeString": "contract IERC20"
													}
												},
												"id": 1562,
												"nodeType": "ExpressionStatement",
												"src": "2341:24:9"
											},
											{
												"expression": {
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1563,
														"name": "tokenY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1453,
														"src": "2375:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$794",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1565,
																"name": "_tokenY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1550,
																"src": "2391:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1564,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "2384:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$794_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1566,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2384:15:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$794",
															"typeString": "contract IERC20"
														}
													},
													"src": "2375:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$794",
														"typeString": "contract IERC20"
													}
												},
												"id": 1568,
												"nodeType": "ExpressionStatement",
												"src": "2375:24:9"
											},
											{
												"expression": {
													"id": 1574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1569,
															"name": "governors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "2409:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1572,
														"indexExpression": {
															"expression": {
																"id": 1570,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2419:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1571,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2423:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2419:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2409:21:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1573,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2433:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2409:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1575,
												"nodeType": "ExpressionStatement",
												"src": "2409:28:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1579,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2465:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2469:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2465:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 1576,
															"name": "governorList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "2447:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 1578,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2460:4:9",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "2447:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 1581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2447:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1582,
												"nodeType": "ExpressionStatement",
												"src": "2447:29:9"
											}
										]
									},
									"documentation": {
										"id": 1546,
										"nodeType": "StructuredDocumentation",
										"src": "2050:192:9",
										"text": " @dev Initializes the contract with two ERC20 tokens.\n @param _tokenX Address of the first token (Token X).\n @param _tokenY Address of the second token (Token Y)."
									},
									"id": 1584,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "414d4d204c697175696469747920546f6b656e",
													"id": 1553,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2299:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_7f6002e3ea826b109c507002e1c84dfbe81b78a18b7d4377e7cfba833f8c7f1a",
														"typeString": "literal_string \"AMM Liquidity Token\""
													},
													"value": "AMM Liquidity Token"
												},
												{
													"hexValue": "414d4d4c54",
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2322:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_d92ebd9c62b2ac367cdc15f97aef04c2036aa81aa336b72387f7b7ce7209565a",
														"typeString": "literal_string \"AMMLT\""
													},
													"value": "AMMLT"
												}
											],
											"id": 1555,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1552,
												"name": "ERC20",
												"nameLocations": [
													"2293:5:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 716,
												"src": "2293:5:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2293:37:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "_tokenX",
												"nameLocation": "2267:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "2259:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2259:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "_tokenY",
												"nameLocation": "2284:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1584,
												"src": "2276:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1549,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2276:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2258:34:9"
									},
									"returnParameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2331:0:9"
									},
									"scope": 2248,
									"src": "2247:236:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1703,
										"nodeType": "Block",
										"src": "2929:759:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1599,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2963:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1600,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2967:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2963:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1603,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2983:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AMM_$2248",
																		"typeString": "contract AMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AMM_$2248",
																		"typeString": "contract AMM"
																	}
																],
																"id": 1602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2975:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1601,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2975:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2975:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1605,
															"name": "amountX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "2990:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1596,
															"name": "tokenX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "2939:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$794",
																"typeString": "contract IERC20"
															}
														},
														"id": 1598,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2946:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 933,
														"src": "2939:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$794_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$794_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2939:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1607,
												"nodeType": "ExpressionStatement",
												"src": "2939:59:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1611,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3032:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1612,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3036:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3032:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1615,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3052:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AMM_$2248",
																		"typeString": "contract AMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AMM_$2248",
																		"typeString": "contract AMM"
																	}
																],
																"id": 1614,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3044:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1613,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3044:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3044:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1617,
															"name": "amountY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "3059:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1608,
															"name": "tokenY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "3008:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$794",
																"typeString": "contract IERC20"
															}
														},
														"id": 1610,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3015:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 933,
														"src": "3008:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$794_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$794_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3008:59:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1619,
												"nodeType": "ExpressionStatement",
												"src": "3008:59:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1626,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1620,
															"name": "reserveX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1455,
															"src": "3082:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1621,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3093:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3082:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1625,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1623,
															"name": "reserveY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "3098:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3109:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3098:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3082:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1639,
												"nodeType": "IfStatement",
												"src": "3078:146:9",
												"trueBody": {
													"id": 1638,
													"nodeType": "Block",
													"src": "3112:112:9",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1634,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1630,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1628,
																				"name": "amountX",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1587,
																				"src": "3134:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1629,
																				"name": "reserveY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1457,
																				"src": "3144:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3134:18:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1633,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1631,
																				"name": "amountY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1589,
																				"src": "3156:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1632,
																				"name": "reserveX",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1455,
																				"src": "3166:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3156:18:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3134:40:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "414d4d3a20556e62616c616e636564206c69717569646974792070726f7669646564",
																		"id": 1635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3176:36:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_23a983d22b7e2f929f4507ea4f9b6cafc1a24a06da17b676777fe405a18b0f65",
																			"typeString": "literal_string \"AMM: Unbalanced liquidity provided\""
																		},
																		"value": "AMM: Unbalanced liquidity provided"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_23a983d22b7e2f929f4507ea4f9b6cafc1a24a06da17b676777fe405a18b0f65",
																			"typeString": "literal_string \"AMM: Unbalanced liquidity provided\""
																		}
																	],
																	"id": 1627,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3126:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1636,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3126:87:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1637,
															"nodeType": "ExpressionStatement",
															"src": "3126:87:9"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1643,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1640,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 289,
															"src": "3238:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 1641,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3238:13:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1642,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3255:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3238:18:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1672,
													"nodeType": "Block",
													"src": "3324:116:9",
													"statements": [
														{
															"expression": {
																"id": 1670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1653,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "3338:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1658,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1655,
																							"name": "amountX",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1587,
																							"src": "3355:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 1656,
																								"name": "totalSupply",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 289,
																								"src": "3365:11:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 1657,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3365:13:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3355:23:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1659,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3354:25:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1660,
																				"name": "reserveX",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1455,
																				"src": "3382:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3354:36:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1668,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1665,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 1662,
																							"name": "amountY",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1589,
																							"src": "3393:7:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "*",
																						"rightExpression": {
																							"arguments": [],
																							"expression": {
																								"argumentTypes": [],
																								"id": 1663,
																								"name": "totalSupply",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 289,
																								"src": "3403:11:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																									"typeString": "function () view returns (uint256)"
																								}
																							},
																							"id": 1664,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"nameLocations": [],
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "3403:13:9",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "3393:23:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1666,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3392:25:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "/",
																			"rightExpression": {
																				"id": 1667,
																				"name": "reserveY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1457,
																				"src": "3420:8:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3392:36:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1654,
																		"name": "min",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2247,
																		"src": "3350:3:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1669,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3350:79:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3338:91:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1671,
															"nodeType": "ExpressionStatement",
															"src": "3338:91:9"
														}
													]
												},
												"id": 1673,
												"nodeType": "IfStatement",
												"src": "3234:206:9",
												"trueBody": {
													"id": 1652,
													"nodeType": "Block",
													"src": "3258:60:9",
													"statements": [
														{
															"expression": {
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1644,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1594,
																	"src": "3272:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1648,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1646,
																				"name": "amountX",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1587,
																				"src": "3289:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 1647,
																				"name": "amountY",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1589,
																				"src": "3299:7:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3289:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1645,
																		"name": "sqrt",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2229,
																		"src": "3284:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1649,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3284:23:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3272:35:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1651,
															"nodeType": "ExpressionStatement",
															"src": "3272:35:9"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1677,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1675,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1594,
																"src": "3458:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1676,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3470:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3458:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "414d4d3a20496e73756666696369656e74206c69717569646974792070726f7669646564",
															"id": 1678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3473:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_63fff41501f79cbc70a6037506286acc5ad5db61895766195eb81bf9766fec2b",
																"typeString": "literal_string \"AMM: Insufficient liquidity provided\""
															},
															"value": "AMM: Insufficient liquidity provided"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_63fff41501f79cbc70a6037506286acc5ad5db61895766195eb81bf9766fec2b",
																"typeString": "literal_string \"AMM: Insufficient liquidity provided\""
															}
														],
														"id": 1674,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3450:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1679,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3450:62:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1680,
												"nodeType": "ExpressionStatement",
												"src": "3450:62:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1682,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3529:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1683,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3533:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3529:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1684,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "3541:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1681,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 556,
														"src": "3523:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3523:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1686,
												"nodeType": "ExpressionStatement",
												"src": "3523:28:9"
											},
											{
												"expression": {
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1687,
														"name": "reserveX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "3562:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1688,
														"name": "amountX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1587,
														"src": "3574:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3562:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1690,
												"nodeType": "ExpressionStatement",
												"src": "3562:19:9"
											},
											{
												"expression": {
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1691,
														"name": "reserveY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "3591:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1692,
														"name": "amountY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1589,
														"src": "3603:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3591:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1694,
												"nodeType": "ExpressionStatement",
												"src": "3591:19:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1696,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3641:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1697,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3645:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3641:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1698,
															"name": "amountX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1587,
															"src": "3653:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1699,
															"name": "amountY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "3662:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1700,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1594,
															"src": "3671:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1695,
														"name": "LiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1489,
														"src": "3626:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3626:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1702,
												"nodeType": "EmitStatement",
												"src": "3621:60:9"
											}
										]
									},
									"documentation": {
										"id": 1585,
										"nodeType": "StructuredDocumentation",
										"src": "2489:329:9",
										"text": " @notice Adds liquidity to the pool.\n @dev The liquidity provider must approve the tokens to be transferred before calling this function.\n @param amountX The amount of Token X to add.\n @param amountY The amount of Token Y to add.\n @return liquidity The amount of liquidity tokens minted."
									},
									"functionSelector": "9cd441da",
									"id": 1704,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1592,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1591,
												"name": "nonReentrant",
												"nameLocations": [
													"2888:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 166,
												"src": "2888:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "2888:12:9"
										}
									],
									"name": "addLiquidity",
									"nameLocation": "2832:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1590,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1587,
												"mutability": "mutable",
												"name": "amountX",
												"nameLocation": "2853:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "2845:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1586,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2845:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "amountY",
												"nameLocation": "2870:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "2862:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1588,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2862:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2844:34:9"
									},
									"returnParameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "2918:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1704,
												"src": "2910:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1593,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2910:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2909:19:9"
									},
									"scope": 2248,
									"src": "2823:865:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1784,
										"nodeType": "Block",
										"src": "4128:503:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1717,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1707,
																"src": "4146:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1718,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4158:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4146:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "414d4d3a20496e76616c6964206c697175696469747920616d6f756e74",
															"id": 1720,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4161:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_49848e0d01eb0a470b2a286765abf5a64c7ba52cca08cb8ed0b3fdf708969b12",
																"typeString": "literal_string \"AMM: Invalid liquidity amount\""
															},
															"value": "AMM: Invalid liquidity amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_49848e0d01eb0a470b2a286765abf5a64c7ba52cca08cb8ed0b3fdf708969b12",
																"typeString": "literal_string \"AMM: Invalid liquidity amount\""
															}
														],
														"id": 1716,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4138:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4138:55:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1722,
												"nodeType": "ExpressionStatement",
												"src": "4138:55:9"
											},
											{
												"assignments": [
													1724
												],
												"declarations": [
													{
														"constant": false,
														"id": 1724,
														"mutability": "mutable",
														"name": "totalSupply",
														"nameLocation": "4212:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1784,
														"src": "4204:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1723,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4204:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1727,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1725,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 289,
														"src": "4226:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
															"typeString": "function () view returns (uint256)"
														}
													},
													"id": 1726,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4226:13:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4204:35:9"
											},
											{
												"expression": {
													"id": 1735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1728,
														"name": "amountX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1712,
														"src": "4250:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1734,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1731,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1729,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1707,
																		"src": "4261:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1730,
																		"name": "reserveX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1455,
																		"src": "4273:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4261:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1732,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4260:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1733,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "4285:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4260:36:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4250:46:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1736,
												"nodeType": "ExpressionStatement",
												"src": "4250:46:9"
											},
											{
												"expression": {
													"id": 1744,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1737,
														"name": "amountY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1714,
														"src": "4306:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1740,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1738,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1707,
																		"src": "4317:9:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1739,
																		"name": "reserveY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1457,
																		"src": "4329:8:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4317:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1741,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4316:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 1742,
															"name": "totalSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1724,
															"src": "4341:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4316:36:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4306:46:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1745,
												"nodeType": "ExpressionStatement",
												"src": "4306:46:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1747,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4369:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1748,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4373:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4369:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1749,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1707,
															"src": "4381:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1746,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 589,
														"src": "4363:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1750,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4363:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1751,
												"nodeType": "ExpressionStatement",
												"src": "4363:28:9"
											},
											{
												"expression": {
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1752,
														"name": "reserveX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "4402:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1753,
														"name": "amountX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1712,
														"src": "4414:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4402:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1755,
												"nodeType": "ExpressionStatement",
												"src": "4402:19:9"
											},
											{
												"expression": {
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1756,
														"name": "reserveY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "4431:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1757,
														"name": "amountY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1714,
														"src": "4443:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4431:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1759,
												"nodeType": "ExpressionStatement",
												"src": "4431:19:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1763,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4481:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1764,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4485:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4481:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1765,
															"name": "amountX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "4493:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1760,
															"name": "tokenX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "4461:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$794",
																"typeString": "contract IERC20"
															}
														},
														"id": 1762,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4468:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 906,
														"src": "4461:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$794_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$794_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1766,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4461:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1767,
												"nodeType": "ExpressionStatement",
												"src": "4461:40:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1771,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4531:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1772,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4535:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4531:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1773,
															"name": "amountY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "4543:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1768,
															"name": "tokenY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "4511:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$794",
																"typeString": "contract IERC20"
															}
														},
														"id": 1770,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4518:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 906,
														"src": "4511:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$794_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$794_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1774,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4511:40:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1775,
												"nodeType": "ExpressionStatement",
												"src": "4511:40:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1777,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4584:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4588:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4584:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1779,
															"name": "amountX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1712,
															"src": "4596:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1780,
															"name": "amountY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "4605:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1781,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1707,
															"src": "4614:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1776,
														"name": "LiquidityRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1499,
														"src": "4567:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 1782,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4567:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1783,
												"nodeType": "EmitStatement",
												"src": "4562:62:9"
											}
										]
									},
									"documentation": {
										"id": 1705,
										"nodeType": "StructuredDocumentation",
										"src": "3694:320:9",
										"text": " @notice Removes liquidity from the pool.\n @dev The liquidity provider receives the proportionate share of the reserves.\n @param liquidity The amount of liquidity tokens to remove.\n @return amountX The amount of Token X returned.\n @return amountY The amount of Token Y returned."
									},
									"functionSelector": "9c8f9f23",
									"id": 1785,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1710,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1709,
												"name": "nonReentrant",
												"nameLocations": [
													"4072:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 166,
												"src": "4072:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4072:12:9"
										}
									],
									"name": "removeLiquidity",
									"nameLocation": "4028:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1708,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1707,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "4052:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "4044:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1706,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4044:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4043:19:9"
									},
									"returnParameters": {
										"id": 1715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1712,
												"mutability": "mutable",
												"name": "amountX",
												"nameLocation": "4102:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "4094:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1711,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4094:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "amountY",
												"nameLocation": "4119:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1785,
												"src": "4111:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4111:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4093:34:9"
									},
									"scope": 2248,
									"src": "4019:612:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1865,
										"nodeType": "Block",
										"src": "4990:516:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1798,
																"name": "amountXIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1788,
																"src": "5008:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1799,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5020:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5008:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "414d4d3a20496e76616c696420696e70757420616d6f756e74",
															"id": 1801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5023:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48444213144a111ad5938f45387486d3e52bbe9c50db4b273e9873d13904bd38",
																"typeString": "literal_string \"AMM: Invalid input amount\""
															},
															"value": "AMM: Invalid input amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48444213144a111ad5938f45387486d3e52bbe9c50db4b273e9873d13904bd38",
																"typeString": "literal_string \"AMM: Invalid input amount\""
															}
														],
														"id": 1797,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5000:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5000:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1803,
												"nodeType": "ExpressionStatement",
												"src": "5000:51:9"
											},
											{
												"expression": {
													"id": 1810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1804,
														"name": "amountYOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1795,
														"src": "5061:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1806,
																"name": "amountXIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1788,
																"src": "5087:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1807,
																"name": "reserveX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1455,
																"src": "5098:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1808,
																"name": "reserveY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "5108:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1805,
															"name": "getAmountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1988,
															"src": "5074:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
															}
														},
														"id": 1809,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5074:43:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5061:56:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1811,
												"nodeType": "ExpressionStatement",
												"src": "5061:56:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1813,
																"name": "amountYOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1795,
																"src": "5135:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1814,
																"name": "minAmountYOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1790,
																"src": "5149:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5135:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "414d4d3a20496e73756666696369656e74206f757470757420616d6f756e74",
															"id": 1816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5164:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_15e548c7011cde46414da6f3579dd9e17bb98db01586c06df928619dd0076ab6",
																"typeString": "literal_string \"AMM: Insufficient output amount\""
															},
															"value": "AMM: Insufficient output amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_15e548c7011cde46414da6f3579dd9e17bb98db01586c06df928619dd0076ab6",
																"typeString": "literal_string \"AMM: Insufficient output amount\""
															}
														],
														"id": 1812,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5127:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5127:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1818,
												"nodeType": "ExpressionStatement",
												"src": "5127:71:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1822,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5233:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1823,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5237:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5233:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1826,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5253:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AMM_$2248",
																		"typeString": "contract AMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AMM_$2248",
																		"typeString": "contract AMM"
																	}
																],
																"id": 1825,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5245:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1824,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5245:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5245:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1828,
															"name": "amountXIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1788,
															"src": "5260:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1819,
															"name": "tokenX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "5209:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$794",
																"typeString": "contract IERC20"
															}
														},
														"id": 1821,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5216:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 933,
														"src": "5209:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$794_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$794_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5209:61:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1830,
												"nodeType": "ExpressionStatement",
												"src": "5209:61:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1834,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5300:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5304:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5300:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1836,
															"name": "amountYOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "5312:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1831,
															"name": "tokenY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "5280:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$794",
																"typeString": "contract IERC20"
															}
														},
														"id": 1833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5287:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 906,
														"src": "5280:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$794_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$794_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5280:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1838,
												"nodeType": "ExpressionStatement",
												"src": "5280:43:9"
											},
											{
												"expression": {
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1839,
														"name": "reserveX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "5334:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1840,
														"name": "amountXIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1788,
														"src": "5346:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5334:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1842,
												"nodeType": "ExpressionStatement",
												"src": "5334:21:9"
											},
											{
												"expression": {
													"id": 1845,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1843,
														"name": "reserveY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "5365:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1844,
														"name": "amountYOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1795,
														"src": "5377:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5365:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1846,
												"nodeType": "ExpressionStatement",
												"src": "5365:22:9"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1847,
														"name": "updateTwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2033,
														"src": "5398:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5398:12:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1849,
												"nodeType": "ExpressionStatement",
												"src": "5398:12:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1851,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5431:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1852,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5435:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5431:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1853,
															"name": "amountXIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1788,
															"src": "5443:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1854,
															"name": "amountYOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "5454:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1857,
																	"name": "tokenX",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1450,
																	"src": "5474:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$794",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$794",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1856,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5466:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1855,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5466:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5466:15:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1861,
																	"name": "tokenY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1453,
																	"src": "5491:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$794",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$794",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1860,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5483:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1859,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5483:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1862,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5483:15:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1850,
														"name": "Swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1511,
														"src": "5426:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,address,address)"
														}
													},
													"id": 1863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5426:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1864,
												"nodeType": "EmitStatement",
												"src": "5421:78:9"
											}
										]
									},
									"documentation": {
										"id": 1786,
										"nodeType": "StructuredDocumentation",
										"src": "4637:236:9",
										"text": " @notice Swaps Token X for Token Y.\n @param amountXIn The amount of Token X to swap.\n @param minAmountYOut The minimum amount of Token Y to receive.\n @return amountYOut The amount of Token Y received."
									},
									"functionSelector": "c7f8a78d",
									"id": 1866,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1793,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1792,
												"name": "nonReentrant",
												"nameLocations": [
													"4948:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 166,
												"src": "4948:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4948:12:9"
										}
									],
									"name": "swapXForY",
									"nameLocation": "4887:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1791,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1788,
												"mutability": "mutable",
												"name": "amountXIn",
												"nameLocation": "4905:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "4897:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1787,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4897:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1790,
												"mutability": "mutable",
												"name": "minAmountYOut",
												"nameLocation": "4924:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "4916:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1789,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4916:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4896:42:9"
									},
									"returnParameters": {
										"id": 1796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "amountYOut",
												"nameLocation": "4978:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "4970:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1794,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4970:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4969:20:9"
									},
									"scope": 2248,
									"src": "4878:628:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1946,
										"nodeType": "Block",
										"src": "5865:516:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1881,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1879,
																"name": "amountYIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1869,
																"src": "5883:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1880,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5895:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5883:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "414d4d3a20496e76616c696420696e70757420616d6f756e74",
															"id": 1882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5898:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_48444213144a111ad5938f45387486d3e52bbe9c50db4b273e9873d13904bd38",
																"typeString": "literal_string \"AMM: Invalid input amount\""
															},
															"value": "AMM: Invalid input amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_48444213144a111ad5938f45387486d3e52bbe9c50db4b273e9873d13904bd38",
																"typeString": "literal_string \"AMM: Invalid input amount\""
															}
														],
														"id": 1878,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5875:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5875:51:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1884,
												"nodeType": "ExpressionStatement",
												"src": "5875:51:9"
											},
											{
												"expression": {
													"id": 1891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1885,
														"name": "amountXOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1876,
														"src": "5936:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1887,
																"name": "amountYIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1869,
																"src": "5962:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1888,
																"name": "reserveY",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1457,
																"src": "5973:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 1889,
																"name": "reserveX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1455,
																"src": "5983:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 1886,
															"name": "getAmountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1988,
															"src": "5949:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256,uint256,uint256) view returns (uint256)"
															}
														},
														"id": 1890,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5949:43:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5936:56:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1892,
												"nodeType": "ExpressionStatement",
												"src": "5936:56:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1896,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1894,
																"name": "amountXOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1876,
																"src": "6010:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1895,
																"name": "minAmountXOut",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1871,
																"src": "6024:13:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6010:27:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "414d4d3a20496e73756666696369656e74206f757470757420616d6f756e74",
															"id": 1897,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6039:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_15e548c7011cde46414da6f3579dd9e17bb98db01586c06df928619dd0076ab6",
																"typeString": "literal_string \"AMM: Insufficient output amount\""
															},
															"value": "AMM: Insufficient output amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_15e548c7011cde46414da6f3579dd9e17bb98db01586c06df928619dd0076ab6",
																"typeString": "literal_string \"AMM: Insufficient output amount\""
															}
														],
														"id": 1893,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6002:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6002:71:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1899,
												"nodeType": "ExpressionStatement",
												"src": "6002:71:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1903,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6108:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1904,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6112:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6108:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1907,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6128:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_AMM_$2248",
																		"typeString": "contract AMM"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_AMM_$2248",
																		"typeString": "contract AMM"
																	}
																],
																"id": 1906,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6120:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1905,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6120:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1908,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6120:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1909,
															"name": "amountYIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1869,
															"src": "6135:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1900,
															"name": "tokenY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1453,
															"src": "6084:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$794",
																"typeString": "contract IERC20"
															}
														},
														"id": 1902,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6091:16:9",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 933,
														"src": "6084:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$794_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$794_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 1910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6084:61:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1911,
												"nodeType": "ExpressionStatement",
												"src": "6084:61:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1915,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6175:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6179:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6175:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1917,
															"name": "amountXOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "6187:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1912,
															"name": "tokenX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "6155:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$794",
																"typeString": "contract IERC20"
															}
														},
														"id": 1914,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6162:12:9",
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 906,
														"src": "6155:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$794_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$794_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 1918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6155:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1919,
												"nodeType": "ExpressionStatement",
												"src": "6155:43:9"
											},
											{
												"expression": {
													"id": 1922,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1920,
														"name": "reserveY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1457,
														"src": "6209:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1921,
														"name": "amountYIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1869,
														"src": "6221:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6209:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1923,
												"nodeType": "ExpressionStatement",
												"src": "6209:21:9"
											},
											{
												"expression": {
													"id": 1926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1924,
														"name": "reserveX",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1455,
														"src": "6240:8:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1925,
														"name": "amountXOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1876,
														"src": "6252:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6240:22:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1927,
												"nodeType": "ExpressionStatement",
												"src": "6240:22:9"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1928,
														"name": "updateTwap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2033,
														"src": "6273:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6273:12:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1930,
												"nodeType": "ExpressionStatement",
												"src": "6273:12:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1932,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6306:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1933,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6310:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6306:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1934,
															"name": "amountYIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1869,
															"src": "6318:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1935,
															"name": "amountXOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1876,
															"src": "6329:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"arguments": [
																{
																	"id": 1938,
																	"name": "tokenY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1453,
																	"src": "6349:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$794",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$794",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1937,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6341:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1936,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6341:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1939,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6341:15:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1942,
																	"name": "tokenX",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1450,
																	"src": "6366:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$794",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$794",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1941,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6358:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1940,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6358:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6358:15:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1931,
														"name": "Swap",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1511,
														"src": "6301:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,uint256,uint256,address,address)"
														}
													},
													"id": 1944,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6301:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1945,
												"nodeType": "EmitStatement",
												"src": "6296:78:9"
											}
										]
									},
									"documentation": {
										"id": 1867,
										"nodeType": "StructuredDocumentation",
										"src": "5512:236:9",
										"text": " @notice Swaps Token Y for Token X.\n @param amountYIn The amount of Token Y to swap.\n @param minAmountXOut The minimum amount of Token X to receive.\n @return amountXOut The amount of Token X received."
									},
									"functionSelector": "31018339",
									"id": 1947,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1874,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1873,
												"name": "nonReentrant",
												"nameLocations": [
													"5823:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 166,
												"src": "5823:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5823:12:9"
										}
									],
									"name": "swapYForX",
									"nameLocation": "5762:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "amountYIn",
												"nameLocation": "5780:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "5772:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1868,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5772:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "minAmountXOut",
												"nameLocation": "5799:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "5791:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1870,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5791:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5771:42:9"
									},
									"returnParameters": {
										"id": 1877,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1876,
												"mutability": "mutable",
												"name": "amountXOut",
												"nameLocation": "5853:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1947,
												"src": "5845:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1875,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5845:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5844:20:9"
									},
									"scope": 2248,
									"src": "5753:628:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1987,
										"nodeType": "Block",
										"src": "6868:293:9",
										"statements": [
											{
												"assignments": [
													1960
												],
												"declarations": [
													{
														"constant": false,
														"id": 1960,
														"mutability": "mutable",
														"name": "inputAmountWithFee",
														"nameLocation": "6886:18:9",
														"nodeType": "VariableDeclaration",
														"scope": 1987,
														"src": "6878:26:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1959,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6878:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1967,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1961,
														"name": "inputAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1950,
														"src": "6907:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1964,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1962,
																	"name": "BASIS_POINTS_DIVISOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1463,
																	"src": "6922:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 1963,
																	"name": "feeBasisPoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1460,
																	"src": "6945:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6922:37:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1965,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "6921:39:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6907:53:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6878:82:9"
											},
											{
												"assignments": [
													1969
												],
												"declarations": [
													{
														"constant": false,
														"id": 1969,
														"mutability": "mutable",
														"name": "numerator",
														"nameLocation": "6978:9:9",
														"nodeType": "VariableDeclaration",
														"scope": 1987,
														"src": "6970:17:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1968,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6970:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1973,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1972,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1970,
														"name": "inputAmountWithFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1960,
														"src": "6990:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 1971,
														"name": "outputReserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1954,
														"src": "7011:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6990:34:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6970:54:9"
											},
											{
												"assignments": [
													1975
												],
												"declarations": [
													{
														"constant": false,
														"id": 1975,
														"mutability": "mutable",
														"name": "denominator",
														"nameLocation": "7042:11:9",
														"nodeType": "VariableDeclaration",
														"scope": 1987,
														"src": "7034:19:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1974,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7034:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1982,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1978,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1976,
																	"name": "inputReserve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1952,
																	"src": "7057:12:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1977,
																	"name": "BASIS_POINTS_DIVISOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1463,
																	"src": "7072:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7057:35:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1979,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7056:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 1980,
														"name": "inputAmountWithFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1960,
														"src": "7096:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7056:58:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7034:80:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1983,
														"name": "numerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1969,
														"src": "7131:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 1984,
														"name": "denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1975,
														"src": "7143:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7131:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1958,
												"id": 1986,
												"nodeType": "Return",
												"src": "7124:30:9"
											}
										]
									},
									"documentation": {
										"id": 1948,
										"nodeType": "StructuredDocumentation",
										"src": "6387:328:9",
										"text": " @notice Calculates the output amount for a given input amount using the constant product formula.\n @param inputAmount The amount of input tokens.\n @param inputReserve The reserve of input tokens.\n @param outputReserve The reserve of output tokens.\n @return The amount of output tokens."
									},
									"functionSelector": "054d50d4",
									"id": 1988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAmountOut",
									"nameLocation": "6729:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1950,
												"mutability": "mutable",
												"name": "inputAmount",
												"nameLocation": "6759:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "6751:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1949,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6751:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1952,
												"mutability": "mutable",
												"name": "inputReserve",
												"nameLocation": "6788:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "6780:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1951,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6780:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1954,
												"mutability": "mutable",
												"name": "outputReserve",
												"nameLocation": "6818:13:9",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "6810:21:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6810:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6741:96:9"
									},
									"returnParameters": {
										"id": 1958,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "6859:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1956,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6859:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6858:9:9"
									},
									"scope": 2248,
									"src": "6720:441:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2000,
										"nodeType": "Block",
										"src": "7403:44:9",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"id": 1996,
															"name": "reserveX",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1455,
															"src": "7421:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1997,
															"name": "reserveY",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1457,
															"src": "7431:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 1998,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "7420:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
														"typeString": "tuple(uint256,uint256)"
													}
												},
												"functionReturnParameters": 1995,
												"id": 1999,
												"nodeType": "Return",
												"src": "7413:27:9"
											}
										]
									},
									"documentation": {
										"id": 1989,
										"nodeType": "StructuredDocumentation",
										"src": "7167:167:9",
										"text": " @notice Returns the reserves of Token X and Token Y.\n @return reserveX The reserve of Token X.\n @return reserveY The reserve of Token Y."
									},
									"functionSelector": "0902f1ac",
									"id": 2001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nameLocation": "7348:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7359:2:9"
									},
									"returnParameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1992,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "7385:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1991,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7385:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "7394:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1993,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7394:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7384:18:9"
									},
									"scope": 2248,
									"src": "7339:108:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2032,
										"nodeType": "Block",
										"src": "7563:292:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2010,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2005,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "7577:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2006,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7583:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "7577:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2009,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2007,
															"name": "lastTwapTimestamp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1479,
															"src": "7596:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 2008,
															"name": "twapInterval",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1473,
															"src": "7616:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7596:32:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7577:51:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2031,
												"nodeType": "IfStatement",
												"src": "7573:276:9",
												"trueBody": {
													"id": 2030,
													"nodeType": "Block",
													"src": "7630:219:9",
													"statements": [
														{
															"expression": {
																"id": 2013,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2011,
																	"name": "lastTwapPriceX",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1475,
																	"src": "7644:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2012,
																	"name": "reserveX",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1455,
																	"src": "7661:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7644:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2014,
															"nodeType": "ExpressionStatement",
															"src": "7644:25:9"
														},
														{
															"expression": {
																"id": 2017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2015,
																	"name": "lastTwapPriceY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1477,
																	"src": "7683:14:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2016,
																	"name": "reserveY",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1457,
																	"src": "7700:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7683:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2018,
															"nodeType": "ExpressionStatement",
															"src": "7683:25:9"
														},
														{
															"expression": {
																"id": 2022,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2019,
																	"name": "lastTwapTimestamp",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1479,
																	"src": "7722:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 2020,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "7742:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2021,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7748:9:9",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "7742:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7722:35:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2023,
															"nodeType": "ExpressionStatement",
															"src": "7722:35:9"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 2025,
																		"name": "lastTwapPriceX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1475,
																		"src": "7788:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2026,
																		"name": "lastTwapPriceY",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1477,
																		"src": "7804:14:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 2027,
																		"name": "lastTwapTimestamp",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1479,
																		"src": "7820:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2024,
																	"name": "TwapUpdated",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1533,
																	"src": "7776:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (uint256,uint256,uint256)"
																	}
																},
																"id": 2028,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7776:62:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2029,
															"nodeType": "EmitStatement",
															"src": "7771:67:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2002,
										"nodeType": "StructuredDocumentation",
										"src": "7453:74:9",
										"text": " @notice Updates the time-weighted average price (TWAP)."
									},
									"id": 2033,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "updateTwap",
									"nameLocation": "7541:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7551:2:9"
									},
									"returnParameters": {
										"id": 2004,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7563:0:9"
									},
									"scope": 2248,
									"src": "7532:323:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2057,
										"nodeType": "Block",
										"src": "8044:184:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2042,
																"name": "_feeBasisPoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2036,
																"src": "8062:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 2043,
																"name": "BASIS_POINTS_DIVISOR",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1463,
																"src": "8080:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8062:38:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "414d4d3a20496e76616c696420666565",
															"id": 2045,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8102:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0079495a98d1affc8c62a2e04f095db89138da4c4b6991ee412e47630d1077f1",
																"typeString": "literal_string \"AMM: Invalid fee\""
															},
															"value": "AMM: Invalid fee"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0079495a98d1affc8c62a2e04f095db89138da4c4b6991ee412e47630d1077f1",
																"typeString": "literal_string \"AMM: Invalid fee\""
															}
														],
														"id": 2041,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8054:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2046,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8054:67:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2047,
												"nodeType": "ExpressionStatement",
												"src": "8054:67:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2049,
															"name": "feeBasisPoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1460,
															"src": "8147:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2050,
															"name": "_feeBasisPoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2036,
															"src": "8163:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2048,
														"name": "FeeUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1525,
														"src": "8136:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8136:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2052,
												"nodeType": "EmitStatement",
												"src": "8131:48:9"
											},
											{
												"expression": {
													"id": 2055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2053,
														"name": "feeBasisPoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1460,
														"src": "8189:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2054,
														"name": "_feeBasisPoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2036,
														"src": "8206:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8189:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2056,
												"nodeType": "ExpressionStatement",
												"src": "8189:32:9"
											}
										]
									},
									"documentation": {
										"id": 2034,
										"nodeType": "StructuredDocumentation",
										"src": "7861:115:9",
										"text": " @notice Sets the fee in basis points.\n @param _feeBasisPoints The new fee in basis points."
									},
									"functionSelector": "69fe0e2d",
									"id": 2058,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2039,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2038,
												"name": "onlyGovernor",
												"nameLocations": [
													"8031:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1545,
												"src": "8031:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8031:12:9"
										}
									],
									"name": "setFee",
									"nameLocation": "7990:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2037,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2036,
												"mutability": "mutable",
												"name": "_feeBasisPoints",
												"nameLocation": "8005:15:9",
												"nodeType": "VariableDeclaration",
												"scope": 2058,
												"src": "7997:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2035,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7997:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7996:25:9"
									},
									"returnParameters": {
										"id": 2040,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8044:0:9"
									},
									"scope": 2248,
									"src": "7981:247:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2100,
										"nodeType": "Block",
										"src": "8405:263:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2072,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2067,
																"name": "_governor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2061,
																"src": "8423:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8444:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2069,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8436:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2068,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8436:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2071,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8436:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8423:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "414d4d3a20496e76616c696420676f7665726e6f722061646472657373",
															"id": 2073,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8448:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c554dd64a7769ca77e368be385fef4dd63f12c1daefbe423f6ebab79c622a854",
																"typeString": "literal_string \"AMM: Invalid governor address\""
															},
															"value": "AMM: Invalid governor address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c554dd64a7769ca77e368be385fef4dd63f12c1daefbe423f6ebab79c622a854",
																"typeString": "literal_string \"AMM: Invalid governor address\""
															}
														],
														"id": 2066,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8415:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2074,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8415:65:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2075,
												"nodeType": "ExpressionStatement",
												"src": "8415:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "8498:21:9",
															"subExpression": {
																"baseExpression": {
																	"id": 2077,
																	"name": "governors",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1467,
																	"src": "8499:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 2079,
																"indexExpression": {
																	"id": 2078,
																	"name": "_governor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2061,
																	"src": "8509:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8499:20:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "414d4d3a20416c7265616479206120676f7665726e6f72",
															"id": 2081,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8521:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ea22cddd80232a65dcfc09d9be38d571da6311bd143997e1143b54a540fa28a7",
																"typeString": "literal_string \"AMM: Already a governor\""
															},
															"value": "AMM: Already a governor"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ea22cddd80232a65dcfc09d9be38d571da6311bd143997e1143b54a540fa28a7",
																"typeString": "literal_string \"AMM: Already a governor\""
															}
														],
														"id": 2076,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8490:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2082,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8490:57:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2083,
												"nodeType": "ExpressionStatement",
												"src": "8490:57:9"
											},
											{
												"expression": {
													"id": 2088,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2084,
															"name": "governors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "8557:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2086,
														"indexExpression": {
															"id": 2085,
															"name": "_governor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2061,
															"src": "8567:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8557:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2087,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8580:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "8557:27:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2089,
												"nodeType": "ExpressionStatement",
												"src": "8557:27:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2093,
															"name": "_governor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2061,
															"src": "8612:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 2090,
															"name": "governorList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "8594:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2092,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8607:4:9",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "8594:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 2094,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8594:28:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2095,
												"nodeType": "ExpressionStatement",
												"src": "8594:28:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2097,
															"name": "_governor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2061,
															"src": "8651:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2096,
														"name": "GovernorAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1515,
														"src": "8637:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2098,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8637:24:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2099,
												"nodeType": "EmitStatement",
												"src": "8632:29:9"
											}
										]
									},
									"documentation": {
										"id": 2059,
										"nodeType": "StructuredDocumentation",
										"src": "8234:104:9",
										"text": " @notice Adds a new governor.\n @param _governor The address of the new governor."
									},
									"functionSelector": "3c4a25d0",
									"id": 2101,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2064,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2063,
												"name": "onlyGovernor",
												"nameLocations": [
													"8392:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1545,
												"src": "8392:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8392:12:9"
										}
									],
									"name": "addGovernor",
									"nameLocation": "8352:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2061,
												"mutability": "mutable",
												"name": "_governor",
												"nameLocation": "8372:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2101,
												"src": "8364:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2060,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8364:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8363:19:9"
									},
									"returnParameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8405:0:9"
									},
									"scope": 2248,
									"src": "8343:325:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2173,
										"nodeType": "Block",
										"src": "8863:484:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2115,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2110,
																"name": "_governor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2104,
																"src": "8881:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2113,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8902:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8894:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2111,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8894:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 2114,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8894:10:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8881:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "414d4d3a20496e76616c696420676f7665726e6f722061646472657373",
															"id": 2116,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8906:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c554dd64a7769ca77e368be385fef4dd63f12c1daefbe423f6ebab79c622a854",
																"typeString": "literal_string \"AMM: Invalid governor address\""
															},
															"value": "AMM: Invalid governor address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c554dd64a7769ca77e368be385fef4dd63f12c1daefbe423f6ebab79c622a854",
																"typeString": "literal_string \"AMM: Invalid governor address\""
															}
														],
														"id": 2109,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8873:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8873:65:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2118,
												"nodeType": "ExpressionStatement",
												"src": "8873:65:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 2120,
																"name": "governors",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1467,
																"src": "8956:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 2122,
															"indexExpression": {
																"id": 2121,
																"name": "_governor",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2104,
																"src": "8966:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8956:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "414d4d3a204e6f74206120676f7665726e6f72",
															"id": 2123,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8978:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_73c124844b98acb782e11332a19b9685ca8bc6cc77bcae53ef08dc44ecb8ff4e",
																"typeString": "literal_string \"AMM: Not a governor\""
															},
															"value": "AMM: Not a governor"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_73c124844b98acb782e11332a19b9685ca8bc6cc77bcae53ef08dc44ecb8ff4e",
																"typeString": "literal_string \"AMM: Not a governor\""
															}
														],
														"id": 2119,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8948:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2124,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8948:52:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2125,
												"nodeType": "ExpressionStatement",
												"src": "8948:52:9"
											},
											{
												"expression": {
													"id": 2130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2126,
															"name": "governors",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1467,
															"src": "9010:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2128,
														"indexExpression": {
															"id": 2127,
															"name": "_governor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2104,
															"src": "9020:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9010:20:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2129,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9033:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "9010:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2131,
												"nodeType": "ExpressionStatement",
												"src": "9010:28:9"
											},
											{
												"body": {
													"id": 2167,
													"nodeType": "Block",
													"src": "9095:205:9",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 2147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 2143,
																		"name": "governorList",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1470,
																		"src": "9113:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage",
																			"typeString": "address[] storage ref"
																		}
																	},
																	"id": 2145,
																	"indexExpression": {
																		"id": 2144,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2133,
																		"src": "9126:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9113:15:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 2146,
																	"name": "_governor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2104,
																	"src": "9132:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "9113:28:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2166,
															"nodeType": "IfStatement",
															"src": "9109:181:9",
															"trueBody": {
																"id": 2165,
																"nodeType": "Block",
																"src": "9143:147:9",
																"statements": [
																	{
																		"expression": {
																			"id": 2157,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 2148,
																					"name": "governorList",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1470,
																					"src": "9161:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 2150,
																				"indexExpression": {
																					"id": 2149,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2133,
																					"src": "9174:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "9161:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 2151,
																					"name": "governorList",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1470,
																					"src": "9179:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 2156,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2155,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"expression": {
																							"id": 2152,
																							"name": "governorList",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1470,
																							"src": "9192:12:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_array$_t_address_$dyn_storage",
																								"typeString": "address[] storage ref"
																							}
																						},
																						"id": 2153,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "9205:6:9",
																						"memberName": "length",
																						"nodeType": "MemberAccess",
																						"src": "9192:19:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 2154,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9214:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "9192:23:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "9179:37:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"src": "9161:55:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2158,
																		"nodeType": "ExpressionStatement",
																		"src": "9161:55:9"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 2159,
																					"name": "governorList",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1470,
																					"src": "9234:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_address_$dyn_storage",
																						"typeString": "address[] storage ref"
																					}
																				},
																				"id": 2161,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "9247:3:9",
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "9234:16:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
																					"typeString": "function (address[] storage pointer)"
																				}
																			},
																			"id": 2162,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "9234:18:9",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2163,
																		"nodeType": "ExpressionStatement",
																		"src": "9234:18:9"
																	},
																	{
																		"id": 2164,
																		"nodeType": "Break",
																		"src": "9270:5:9"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2136,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2133,
														"src": "9065:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 2137,
															"name": "governorList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "9069:12:9",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "9082:6:9",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "9069:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9065:23:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2168,
												"initializationExpression": {
													"assignments": [
														2133
													],
													"declarations": [
														{
															"constant": false,
															"id": 2133,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "9058:1:9",
															"nodeType": "VariableDeclaration",
															"scope": 2168,
															"src": "9053:6:9",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2132,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "9053:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2135,
													"initialValue": {
														"hexValue": "30",
														"id": 2134,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9062:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "9053:10:9"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2141,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "9090:3:9",
														"subExpression": {
															"id": 2140,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2133,
															"src": "9090:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2142,
													"nodeType": "ExpressionStatement",
													"src": "9090:3:9"
												},
												"nodeType": "ForStatement",
												"src": "9048:252:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2170,
															"name": "_governor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2104,
															"src": "9330:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2169,
														"name": "GovernorRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1519,
														"src": "9314:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9314:26:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2172,
												"nodeType": "EmitStatement",
												"src": "9309:31:9"
											}
										]
									},
									"documentation": {
										"id": 2102,
										"nodeType": "StructuredDocumentation",
										"src": "8674:119:9",
										"text": " @notice Removes an existing governor.\n @param _governor The address of the governor to remove."
									},
									"functionSelector": "eecdac88",
									"id": 2174,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2107,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2106,
												"name": "onlyGovernor",
												"nameLocations": [
													"8850:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1545,
												"src": "8850:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "8850:12:9"
										}
									],
									"name": "removeGovernor",
									"nameLocation": "8807:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "_governor",
												"nameLocation": "8830:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "8822:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2103,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8822:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8821:19:9"
									},
									"returnParameters": {
										"id": 2108,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8863:0:9"
									},
									"scope": 2248,
									"src": "8798:549:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2228,
										"nodeType": "Block",
										"src": "9603:242:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2182,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2177,
														"src": "9617:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "33",
														"id": 2183,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9621:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_3_by_1",
															"typeString": "int_const 3"
														},
														"value": "3"
													},
													"src": "9617:5:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2220,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2218,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2177,
															"src": "9801:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 2219,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9806:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "9801:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 2226,
													"nodeType": "IfStatement",
													"src": "9797:42:9",
													"trueBody": {
														"id": 2225,
														"nodeType": "Block",
														"src": "9809:30:9",
														"statements": [
															{
																"expression": {
																	"id": 2223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 2221,
																		"name": "z",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2180,
																		"src": "9823:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "=",
																	"rightHandSide": {
																		"hexValue": "31",
																		"id": 2222,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9827:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "9823:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2224,
																"nodeType": "ExpressionStatement",
																"src": "9823:5:9"
															}
														]
													}
												},
												"id": 2227,
												"nodeType": "IfStatement",
												"src": "9613:226:9",
												"trueBody": {
													"id": 2217,
													"nodeType": "Block",
													"src": "9624:167:9",
													"statements": [
														{
															"expression": {
																"id": 2187,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2185,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2180,
																	"src": "9638:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2186,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2177,
																	"src": "9642:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9638:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2188,
															"nodeType": "ExpressionStatement",
															"src": "9638:5:9"
														},
														{
															"assignments": [
																2190
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2190,
																	"mutability": "mutable",
																	"name": "x",
																	"nameLocation": "9665:1:9",
																	"nodeType": "VariableDeclaration",
																	"scope": 2217,
																	"src": "9657:9:9",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2189,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "9657:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2196,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2193,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 2191,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2177,
																		"src": "9669:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 2192,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9673:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "9669:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 2194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9677:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9669:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "9657:21:9"
														},
														{
															"body": {
																"id": 2215,
																"nodeType": "Block",
																"src": "9706:75:9",
																"statements": [
																	{
																		"expression": {
																			"id": 2202,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2200,
																				"name": "z",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2180,
																				"src": "9724:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"id": 2201,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2190,
																				"src": "9728:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9724:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2203,
																		"nodeType": "ExpressionStatement",
																		"src": "9724:5:9"
																	},
																	{
																		"expression": {
																			"id": 2213,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 2204,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2190,
																				"src": "9747:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2212,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"components": [
																						{
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 2209,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2207,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2205,
																									"name": "y",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2177,
																									"src": "9752:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "/",
																								"rightExpression": {
																									"id": 2206,
																									"name": "x",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2190,
																									"src": "9756:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "9752:5:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "+",
																							"rightExpression": {
																								"id": 2208,
																								"name": "x",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2190,
																								"src": "9760:1:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "9752:9:9",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						}
																					],
																					"id": 2210,
																					"isConstant": false,
																					"isInlineArray": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "TupleExpression",
																					"src": "9751:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"hexValue": "32",
																					"id": 2211,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "9765:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_2_by_1",
																						"typeString": "int_const 2"
																					},
																					"value": "2"
																				},
																				"src": "9751:15:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9747:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2214,
																		"nodeType": "ExpressionStatement",
																		"src": "9747:19:9"
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2197,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2190,
																	"src": "9699:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 2198,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2180,
																	"src": "9703:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9699:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2216,
															"nodeType": "WhileStatement",
															"src": "9692:89:9"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 2175,
										"nodeType": "StructuredDocumentation",
										"src": "9353:186:9",
										"text": " @notice Calculates the square root of a given number.\n @param y The number to calculate the square root of.\n @return z The square root of the given number."
									},
									"id": 2229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "9553:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2177,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "9566:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "9558:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9558:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9557:11:9"
									},
									"returnParameters": {
										"id": 2181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2180,
												"mutability": "mutable",
												"name": "z",
												"nameLocation": "9600:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2229,
												"src": "9592:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9592:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9591:11:9"
									},
									"scope": 2248,
									"src": "9544:301:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2246,
										"nodeType": "Block",
										"src": "10101:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2241,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 2239,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2232,
															"src": "10118:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 2240,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2234,
															"src": "10122:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "10118:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 2243,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2234,
														"src": "10130:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "10118:13:9",
													"trueExpression": {
														"id": 2242,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2232,
														"src": "10126:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2238,
												"id": 2245,
												"nodeType": "Return",
												"src": "10111:20:9"
											}
										]
									},
									"documentation": {
										"id": 2230,
										"nodeType": "StructuredDocumentation",
										"src": "9851:178:9",
										"text": " @notice Returns the minimum of two numbers.\n @param x The first number.\n @param y The second number.\n @return The minimum of the two numbers."
									},
									"id": 2247,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "10043:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2232,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "10055:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "10047:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10047:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "10066:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "10058:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2233,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10058:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10046:22:9"
									},
									"returnParameters": {
										"id": 2238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2247,
												"src": "10092:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10092:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10091:9:9"
									},
									"scope": 2248,
									"src": "10034:104:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2249,
							"src": "635:9505:9",
							"usedErrors": [
								11,
								16,
								21,
								30,
								35,
								40,
								873,
								1154,
								1159,
								1162
							],
							"usedEvents": [
								728,
								737,
								1489,
								1499,
								1511,
								1515,
								1519,
								1525,
								1533
							]
						}
					],
					"src": "32:10109:9"
				},
				"id": 9
			}
		}
	}
}